%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: pinkexp.eps
%%Creator: Adobe Illustrator(R) 19.0
%%For: PC 
%%CreationDate: 3/24/2016
%%BoundingBox: 0 0 4648 3092
%%HiResBoundingBox: 0 0 4648 3092
%%CropBox: 0 0 4648 3092
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.0.1 x52 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=288 GradRes=144 Text=0 Stroke=1 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-03-24T15:52:28+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-03-24T15:52:28+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-03-24T15:52:28+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8/4snYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq2qszBVBLE0AG5JOKqt3a3FpdTWtyhjuLd2imjPVXQlWU08&#xA;CMANpIpRwodirsVdiqtBa3NwJfQjaT0UMsvEVKotOTH2Fd8iZAc00o5JCva2c90ZRCKmGJ5nH+RG&#xA;KtT5DfIykBzSAyfyh+VXnjzbavd6Lp5ks0JX61K6RRlh+ypcjl4bZJnHGTumenfkV+Y8+om3vNKk&#xA;srWCUJe3btGwSOnJnjRX5TUXp6YNemQySMYkgWyjgkfcwjVLi3uNQnltovQtS3G3hNOSxL8KBiOr&#xA;cQOR7nfGAIFHm1Hmhcmh2KuxV2KuxV2KuxV2KuxV2KuxVsqwAJBAYVUnuK0qPpGKtYq7FXYq7FXY&#xA;qzvy/wCRYPOHlWa48vjj5m0YH9IaZU/6XbGpSeAHpKv2HToaA7Mfixcmfw5Di+k9e4tsYcQ25sP0&#xA;/T5rvVbbTiGSa4nS3KkUZWdwlKGm4JzJJoW1gWaR3nLQToHmvVdGowSyuZI4S27GLlWJj/rRlTkM&#xA;M+OAl3hM40aZZ+X3l06VoGp/mJqcVLfSU4aFFItVn1CSiQycTTkkLMG279D8JyjPO5DGOvP3ftbM&#xA;caHEXnju7uzuxZ2JLMTUknqScy2lbirsVdirsVRmkareaTqdtqVkwS5tXEkZIqpp1Vh+0rD4WHcb&#xA;ZDJjE4mJ5FING3sWneQ/KWp32kefNKtPX8sSMX1zQEUzNbSqhDcEAYvEsvEslK8d/snbW6XWGOU4&#xA;cv1DlLvDmwwxJEv4evk9p8uW/kuawbUdAstPa1vlZZ7m3gh4yqvwMjFV3ApQjNxwguX4USdvsW6F&#xA;qmhQW76VZPDa21nLIsMCcUQKzcwABt0b7qHJ8LnZNJIbgdBddDX2JzaalDcfFC4k9BivIEHwI6ds&#xA;Bi4+TAY8xVvjbzt5emsPOOu2NqTdQ2c0krzKBxWJjzBcj4RTmF922GUyIB3dLmxmMyGNYWp2KuxV&#xA;2KuxV2KuxV2Kr42RZEZ15oCCyVpUA7io6VxV6RJ+TmqTy6NrHl0PrHlfVmjkWcBfWt1r+9iuV2FY&#xA;+LKWX4SR2JAyjHlMrjXqDdHDKRFdUVJ+Uk+s/m7qmhWP7vQop/rsl3GPgjs7giWJEPTmefpqPEGu&#xA;wOU5tV4OLil9XKvNkcEuMxIohi/nS3fVdb1fU9JtPS8t6ZItlazr8MCxQARQqrN9qSUJz4irGpbx&#xA;OXYbEQJH1Hm1S57cmJZewdirsVdirsVev/8AOMukfW/PNzfG5eFNOs3d4ozT1RIePF/FR9qn81D2&#xA;yE8cZipC3I043t73qvlHypqWpW+pT6TbC/tp0uY7tY19YvGwYc3IPKtO/wBFDvlnhiq6OecAPPm8&#xA;2/Mjynp2v/mLoFzb6Yz3MyXM+qOi/u5Y7BVH7ytQ3FykfTevE9shxY8dCwN/vbTp8ccsBLqd/dtV&#xA;/jk9L1ax0HzFoM2iXEUcmnXkDIiIqlohSiyISPhdCaivfLjFObTS34rt84/nJ+XejeRo9KtNMEly&#xA;mperO1/ctWYGEhPRVEVI1T94GJ3JPhTeqjbqc2Pg2eY4Wh2KuxV2KvqP/nHjyxodh5GtvMS20c+s&#xA;anLMGuJFDNFHDK0YRK/Zrx5e/wBAwgOfpsVi3p7sjbiNUYmrFBQEnuQO+TAc2MaYRY+TrOLzfqmo&#xA;WMzR2csTC70pf7iS5cIwnC14q4oyvQb1HvXRdvavJix8OM1OQJ257f2uSYnGYzBri5/PmwXy1+Wv&#xA;mOP81tf1G4E1voMFybmJEd0W5luKSxxlRQOkXqfFWvZT1OYGt7WyQ0UeC/FnH4joT73XYIyGYniI&#xA;F9/NE6HcebfNXnm5ubK8k07yikjW1qyIn+li2qrtGzqSUZgx5D2UeI3HY0PCwjGZcUwOKXU3Ldzd&#xA;NnyzlKV/u4+7f3Xy82Xa/wDk/wCUdV0CTSYI5LF2czi7id2ke4IP7y45E+udz9vcVPEiubE4o8XF&#xA;1cbLgjK/N8parptzpeqXem3QAubKaS3m47jnExRqe1RgdRIUaQmKHYq7FXYq7FXYq7FU+8o6R5Y1&#xA;W/8Aquu642hRtQRXX1U3MRPg5WSNk+dCPGmV5JSA2FpAD668uWq6Z5Z0vStDX67ZW9ukFrewGM28&#xA;1BR5yUZlq7VZuu/jlMddjEblYl3Ub/H4LutPDHwgmQ/SiBDawG1ktLeRzGS0s/pqzyoQfj+H4m4O&#xA;222wJpk8OPJGRnlr1fZ5FyQLMjKgZV9nT5PJf+cgbjyzqsGnQS+YorGXTfWM2lJG8ssksnEqfSTi&#xA;EYKD8UlOvXJSNT9Iu+rqNXAA1Y+989GldumWuE1irsVdira8eQ5Ala7gGhp898Ve8/lFqH5S6Zq4&#xA;1XSNWvbDWGiNu+mak8UUMiNx5cX4lGJYVAMgqf2RmKMmSM/UBwd4c3TeHxbmnsvr6tcM6W0Sxx0B&#xA;S4nDr9r+VaHkR92Oo7UwYtieI+X6+X6Xc1iiAZG/IV96raT6batbWDVmRiUS5+A8ndqsp4sWXk/j&#xA;ms1fZ+XKJZZVwnfh8ujXlxzneTke7uHy7lmqSwaVeS6jOFisZUAuZQAojdSxDN4ghvwzM7M1XFEw&#xA;kfV093d8EYpiWPhJoxPU9HlP5rebfyl8x2MdvqGp3N62lkzxxaU8IZvU4pQSXAKNu1SsdWG5IoMz&#xA;s5nYEK+Lr9VKHK79zxPWda8rzRtDpHl1LJCCPrNzdXFzcVrsw4tDCPkYzkYRl1LgmQ6BIMtYOxVs&#xA;Yq98/IH8xLH05/Ld8lvYFaT2TR+oolY7Tcg7OgbZT8HHvtgxQIJ3JdloSZXEc3p2reZ7G3vYbJdZ&#xA;tIJLqvoiZolYmoHGNmdVc1boAcr1+plgxGcYGcu78W7cDHjAOQUegur+HNMo1/RMFvbQIXvL0yFp&#xA;mNGBp9smhruR880egxy1+XxMoqhyHQWaH6/1Ncic8iSfTH8U6dtX0lVluJ/rdu7ASrIBsp2NKUHf&#xA;vm51HZOIwPAOGQYjHiygiI4SPt+aXa6f0ZqsV8l3H9Wt4gYtMWH94FK/EeSszGq7KOAGwp3rqexY&#xA;nHOQEJET+qd9en4DLRcUxKJ+kjoOR6Jrot3FeWv16NxJ6zMVbYgJy+ADrtxofxzpCjURoiI5UP7X&#xA;g3/ORS2WjearZdMt7SCfU7Vbu/8A9Hieb1S7KJBI6sy8uP7NNxmLLGCbs/Muk1BovF8scZ2KuxV2&#xA;KuxV2KuxVG6RPpVvqEU2qWkl9ZIeUlpFN9XMlP2TLwlKjxotfcdcjIGtkh9L/k7+Y175ijvLax0K&#xA;10fy/o8CrBFHI9DPIf3acvgT7KszsVJ6eOaXV6SInHilKU5yob7eew7g5umlxGuUer0nTIbq1uqX&#xA;MaNHKCqSxh09Mkj4QGZxxJI3GZfa0uHFEEmuID59XY55RnH0k2Oho39gfMH5teavy18zyNqGmafq&#xA;Ol+Z0fheCSK3EE5DEMZSkvISD+cLv0PiLdLiyYxwk8Q+10mSQJvk8xzMa3Yq7FXYq7FWeflzZflx&#xA;bahZ6t5t1lWSKVWXRoraeWpDdbiRoxHxHUqnKo79sqMpcVAbd7djEeZL6O8u+b/L+peYZLLy/NHf&#xA;WKWwmu5bY/uIW5Uj2Ap6jnYL3AJ7b4PbPh+EJH6vx+P7XbzyRlCIBuX3DzTu60S1thJdwuxmhD3M&#xA;MNQV9WnJPegYbfryiPapoY8lAbWfI/jm249VKdRPI0CfLr9jFfzD8ueTdV8tR22saxDok80hfT9U&#xA;kmSF2lo3LkHZPUXf4hUfMbZttRMwiOEXXRxdbLi9MjVfY+WvMvlu+8v6ibO6khuFYc7e7tZFmgmj&#xA;JIDxuvUGnfcdxjjyCQsOplGkpyxi7FXYq7FXuf5K6R5BXybqN55mt7ZdQlmb05NQVAWtRGpU2/q7&#xA;MOXLkV+nGE4k1e7sdCI3vXx5falS335JaHeTalcC48yag7mRIDGZbaJwaiNRN6UbhNhyZnFKUzSa&#xA;yGtzTMcZjjx3z5yP6lyywDJIi5C9nr/kzzTH538sRa3a2h0kWkrpYmdxSSKMUckBVCKGquxNCuV6&#xA;XMNFlGMy8SUhv+Pxs5Gl1NXIj0HZkr6frV8UTUmit7VCC9G5M3E1AFQKVIzZartnGIHh5nv2cjxs&#xA;cQfDBMit0j0rj1dSKq0t2xDjiNkQlFXp/KBXM7DjEICI5M8wEQIDYDf3kgbvFfzG8yefPy383aku&#xA;j1/w9fS+vZvcR+rFHJMPUliVhQArIW4q24WlNsrhqYykYAgyjzDrJ6rJEUd49L/W8Y1zXdX13U5t&#xA;U1a5e7vrg1kmfrtsAAKAAdgMm4EpEmygMWLsVdirsVdirsVdirsVZHcecblPKNr5X00Na2QkN3qc&#xA;oNJLq5J+HlTpHGqqFXuRyO9AtIwjj4zzqh5f2s+LanqU35+3ujJ5Pt7Zvr9nDpkS+Yo2IaSaRwsZ&#xA;HM7iWNYuYNdy2+YuTR+KJiZO528m3xyK8nlv5iSaTN5z1S80idbjTb+X67byLttcqJmQr1Uo7lSp&#xA;6UzK04kIAS5hpnV7Mcy5i7FXYq7FXYq2oBYAsFBNCxrQe5pU4q+r/wApPy5j0HybbvfxkX18VuLu&#xA;I8kIZ15IrjY1RTxodga+Jw45RluHeaXJ4UAI/Udyf0fBl48v2rVMvqOm4gT1JKRqN/h38d8lwxsm&#xA;hZ57c/e5f5yQ5V57Dd4j/wA5H+VpIk0XzDHWUMrafcS7bhOU1s2w3JjLhj/k5rtNkgMk8cRUYnb5&#xA;b18XT6+jLiHV4dmc4DsVdirsVdirsVe/f845+TNHv9Fv9euo1nu4LkwRA7lFCIT8q896dRk4mna6&#xA;GYhGx9ZPPu93veh+a/Jt5rOmS2emzyaZAJEYmNzSVom5hWRgRw5DpyFaZCeDHKXEQOOufV2GYxyw&#xA;4Zy9XO65e/vR02qahPeR2kDRQxyoZXknqDVmAQLuNxRqrTuOlM4/snsYZ/E8a6hkMduvDz+DbDAA&#xA;SSCYx7upeefmjq3nzyLCup6RrAitNTufTlV4o5VildWcvHzR2WvEkjf/ACadM7COMQgIx5DZwNfM&#xA;cAMCauqP6D3eXR4nN5v802tzfWy63Lf200sguObNPa3J5kmUw3C8W5n4hzSuUzwQkbI37+vzdPxn&#xA;vSBjUk9K70Gwy5g1irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVZB5LGk2+rDVtYUS6dpQ+t&#xA;NaEgG5mU/uLcVDfbkoX2+wGOVZbIocyzhV2WXaB/zkL5+0rUb+7meHUItQlM0lrOrcIzQALDQ1VQ&#xA;oAoa/fUmWOAhERHINgznq9GvP+ch7O18maffX1iZfMerWtxJBbwcRaRBbiW2RpOZ5gH0iaAGvthj&#xA;kskd36rbvzFR97Dfy/8AN155i/L7V/IMty6axbWss/l2dXpJIiKzS2akkH4o+aDf7DMOi5g5sXh5&#xA;RkHI7S/W1QlxR4XjubBx3Yq7FXYq7FXYq9O8jed738uPLEmo21JtY16RGs7GUsYY7SBmVriRFKnl&#xA;K3JEHgvLpSuMJyllofRHn5nu+DfCfBH3pjcf85OeepllBstPUsKQlY5f3ZPU09SjH6MygWY1RHIB&#xA;7DqP5l/lzoNzqljquohL6ykY3Vn6Ls0pdRIioacW+FgvXY5i6DLxYInl+vqfid3Py6zfnyp5n568&#xA;zQ/mR+V9xqtlEba70G7Wa7sOXMiJuUYfoKgo/KtNuLZi5NXkjqxCVeHKPp/rebi5ZjJjscwXhebN&#xA;wHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqveaWRY1dyyxLwiBNQqli1B7cmJw&#xA;KradqF5pt/b6hZSmG7tZFmglXqroag4yiCKKQaU7qcXF1NOIkhErs4hiBWNORJ4oCTRR0G+IClSw&#xA;odirsVdirsVR8uuapI94fXKLfRpBcRpshhjZGjiA7InpJxA6AUyMYiIoJJQGSQm/m7WF1rzTq2qo&#xA;S0d7dzTQltj6bOTGKeyUGU6fHwY4x7gynKySjvIPmpfL2t87oGXR9Qiey1i2G/qWsw4vQfzJXkv3&#xA;d8r1eDxIbfUNx72WOfCfJJ9Z01tN1W6sS4lFvIyxzL9mROqSL/kulGX2OX458UQWEhRpBZNDsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq+SWSR&#xA;g0jF2CqoJ3PFQFUfQBQYAKVZhV2KuxV2KuxV2KuxV2KuxVvFWsVXxRSTSpFEpeSRgiKOpZjQAYCa&#xA;3VaRQ08MKtYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU0&#xA;8vWFhqN+NOupvqsl1RLS7bdEm/YEg/kc/CT+zselQac05RHEN65hlEAmlQeVNbHmOHy7NB9X1KaZ&#xA;IFSU0WshorchWqd6iu2SxZI5IiUTYKRjPFw9XqEP/OPGtwaDqZn1Czkv3RH0+FDJQmNqtyYoApYc&#xA;lXJyxyMhTljRS5Me/KX8sLDzXf37a3cTWtnp1Ee3g4rPJKTutXDBVWnxbZIRYYNKZgk9DTNvMv5L&#xA;+XvLPlzWdc0W7uri/t7WRrWO59NhGjUWU/u1U+osfPi3QdaVGQyYuIfFsnpeGJPV4FknAdirsVdi&#xA;rsVTSDSYeNnezyN+iZZFju5415PCQR6ilfGm6+P4ZXHIOLhPP9DYIcifpZX5c/LXTvMkmr3OnaqY&#xA;NLspPTtJJY+cknw8quOUfFR49/DLxG3Kx6SOQnhOzBLiB7e4lgcgvE7IxXcVU0NMg4co0aeup+TG&#xA;iSaFDdWV5Pc6sIhMYHMawTMv2ohQBkqduRc5KeM1tzdnPs8AbHd5A4YOwYUYEhh0ofoyLqluKuxV&#xA;2KuxV2KoiBLJre4aeV0nUL9WRV5ByT8QY1FKDFkAKNonWI9EQ236KklkBiBuWloP3nQ8QOny3+eE&#xA;s8ggK4UuwNSMn0q+g0+C/liK21yzLE/jxAO/hWu3yxZmBAs9UHiwdirsVdirsVdirsVdir2PyT/z&#xA;j9Hrnlqz1nVNZ+oPqKera20UPq0iJoGkbkKcqdANsIDl49KZC2cea/y7sbzSbK1ubyQ6hZqostao&#xA;BcxyRmqsWTjyB6n3365otTiloSc0DeIn1R7r6j4uwOl4oWD6o9eqS+SfNvmxrjUvKGuSp+kdOirF&#xA;d9WkjZgA3Qclo4IYU2p3zI1va/hYY5YDiEiPgjTaqVmMhcx1ec/ljf8AmCPzUkOmStFcTO76vJIe&#xA;UZhQg8uK8SHDMwB5dWHauZOt1w02I5D8PM9HD0WbJGdR/i53yZd5o/NHzFdajqflLQrQXkk/K19b&#xA;d25MvGf4Tt8JqKk0FKnBpNXP8uMmagSL7qHT7HJz64yJgIi+V/sSd/yZ8yWPl9rq1s01PVJVb1VD&#xA;LwgSlCIkanrS+/Rf2QWoRbDjnv8ATH7T+r3c3FlopxHLd5eysjFWBVlNGU7EEdjl7hNYq7FWbfln&#xA;5J0bzRPqA1S8kto7NEZI4Siu/MtVquGHFOO+3cZKIty9LgGQmyjtc07RPJvmFLC2uje6RqEQW7in&#xA;KSFCDs54BQRv/L498xNdpjKNxNTjuPx5t2THHDIDnGXNjOuRXGh6g8el3ksVndos0fpSsAUJIAJU&#xA;0YAg0Phg0WolkhZFSGxcfJeOXpOx7khzKcZl8/mW/wBL0WyttIv/AIhGPrcodGesq1EaqxLBVAoa&#xA;Cg2HXMXTnKZylLaN1EeXf8XOOqlCAjGX4/YxEksSSak7knqTmU4LWKuxV2KuxVN5dJ02Ly9DqDX6&#xA;vfXDEJZJSqqrFSX7jpXDWzdwR4LvfuQr3lvNpywTRn61A1IJxTeM9Uf/AFf2T9GUCEhOwfSeY8+8&#xA;fpYcQMa6oLLmDYpXfp3xVHarqsl7LRAYrNKC3tgfhRVUKPpoOuVYYGEACbLbkyGXu7kZo/lDV9Ws&#xA;5bu0Efpx1orsQzkdloCPvOXAMoYJSFhJMDQ7FXYq7FXYq7FXYq+lfyf8xzy+SILPULiIz2BaK29N&#xA;45yLcUZOaxMxWhYrRuJyv81ij9UhH+t6fvd3oPVGjXzAQHm7zh5uttYtrqXRpn8t2Mpe8ktZIHmm&#xA;hCkNRAZTGvclh07rmFl12k1UTh4geJlq9RKI4YRIje57/wBQeewT+YfzG1+11fQUbQGsYfTnvvXo&#xA;aFmKnmqq1NyAACTWmR0HZwwYzjJ44k2BTr/XqJjgHqTGz/LXzV5SuPr2m6xAyXoFne3h9SX6uksi&#xA;lpmSRY3AUivPp2zI1mljljWSN1uB3kMp6XNpzZ2vrzROpX0PlyA6N5GsJNR1FuJv9Ugja5YqaNT1&#xA;YweTON/h+FQdvi6abDgyZZ+JqiIxH0wvb3lTkjAVjFnqXs/lvUzfWduTDJbFIk5QTIUkr0IYHf4a&#xA;b0zpseeGUXAiQ8ndZTGQ4x/Efk+ffzm8q6TonnfUPQ1BD9b43rWRV2njkuR6jIaIsYHIkj4q0ptl&#xA;cpG6p53PECR3eeZJodiq5XdDVGKnxBod8VXy3DSoodQ0oYs05LF2BAAVqkii8dqDv8qKSbWSIyGN&#xA;VHqyS8RFHF8bszmioFWp5E9sCE5n8kebLexa9lsU9NFDyQR3EMlwqnuYVYtVf2gN17jY425E9Lkj&#xA;HiI2SWNWkZVjBdnICqoqST0AGJLjs18iaJPY67BqGsWXGwiqWeVkUI2xDMrMD4jplENdhMqEgT5b&#xA;/c5+kxmE7kKHmy3859I0y40jTNfMscFyzmBlROTTK6813qK+nxI38fkMy8jd2hjFCTxzIOqdirsV&#xA;dirsVczBQSxAA6k4qtSSOQVRgw8VIP6sVXYqyvyfq11ppElxcJHpTkmSMyIHNOvFKlz92Q8YCXDv&#xA;8j9/JzNPkMRv9P4+KTeYptLn1m5l0pPTsHKmFKFafCOXwnp8Vdsm4+UxMjw8ktxa3Yq7FXYq7FXY&#xA;qnWh+X/NV3bT6vo1rcPDYEetdwEqUYioCsCCWp2XfAYiQo8m3HinKzEcnoFhP+cf6IadOESxwsVO&#xA;p+l6pYAksaqrj/nr9+czqIdm+KBXrv8Ahv8ARs5UDn4b6ebI/wAlb7TZPKkKqIxJFcSS3aIoWqyK&#xA;gjcgbUDc122X6d+r09CRdh2NIGMoj6y9D1ySzW3F0saG3EUrNzoyMvEpxYDf4nIWnfLs5HCQXLzy&#xA;4cMxP8Ho84Fj+b2s3UtjZRWmi28EaiBhGgdxSnHhWXhTv8IPtnO4uzNJnnLJ9Zve7q3VYcWaUOYh&#xA;Efa8nHm3ztpGr3En6VvINShdoZy0rMQyEqV+IkfCa08O2bXHjjjFRAA8nAGacSd/ekl3eXd7cy3V&#xA;3M9xczMXmnlYu7sepZmqScm1E2o4odiqY6D5f1bXr8WGlwevccGkZahQqL1Yk0AG+IFtmPGZmgih&#xA;5O8whZWlthCIa8/VdF+zuTuenv0zFy6zHCfAT6u5sOlyC7HJQ8q6hZ6d5m069vaC2ieRWkIqImlh&#xA;eKOalCf3buH2Fdtt8yJC2GCYjME8gX0DNfWUWh2sr2xtIICsp1BgFh4x/GTHN9iQ0U8QjEsemZMs&#xA;sDHvehyZ4CJkTYfO1xcF9WluLEGFnnaS3EI4FSzkrwC9Ou1Mx62ovNDnsmqaVq89nJrOrF7iz0+e&#xA;KO7tZ5zHOyuQeCFwxUsvTY+NNsEMUYj0gBvOKRiZSPLv5pHPO8pALOYkqIUdi/Ba7KOn6sk0EkqW&#xA;KHYq7FVRredUjdo2VJgTExBAah4nie++2KaK1lZGKsCrDqCKEYAbQr6UdPXWLGTUk9SwjlDXCHpS&#xA;hoW67A5Ic2zEYiYMuTJPzAuPKtxeQyaGiJXlyERBCpQcVYgAE1qfbDMgnZu1c8cpejkxLIuK7FXY&#xA;q7FXYq7FXYq7FWxSoruO4G2Ksz0X81Nc0HQp9E0S2trSznf1XkcPNN6pUL6nJ24cqKNuHHbpkIxI&#xA;uzduTh1Usf0pebjzz5pR1R73UYU/vkDMYAwNfsjjGpoRt175Xh0mPH9EQPcFhjzZuQlJnOo3MH5d&#xA;aHp2k6JGsnmS6kSSadd5KGofiT0R3+BU6Fa1zUaHPmz55zlccUbAHLdtywGIAD60bNL5x8watd+X&#xA;Nav0sjDbfWIPQ4cJHfiFYRKI+SipDNTqKVy7UdrQhgGeA448VKYZMk+GZ3pN/JX5l23l6y1HSvOL&#xA;zHUtGI9a4UxyS3EbOBGYw7xs5o69vs/Ee9NppcmM4gYfSd/m5EdWI4xCX1Ref+dr7yP5v1O81vS7&#xA;htI1a7kaWWxvF4wzMxqSsqeoiOe5YhT7ZiY554zPGBKF7GPMe8fqcCfBLcbF5+RQkHqNtt/1ZntD&#xA;WKuxVONA81ar5fn+saV6dvcspjknK82ZGNSp5llA2HQDABvdtuPKYGwhr3V9V1OVjeXjy8yWIkc8&#xA;Aeuy/ZH3YOAXdblE8spmyVSXQpotETVJ5FRZnCQQEHk4Nat7dMx46oHKcYHIbnuScREOIpbzfhw5&#xA;Nw/kqeP3dMympPdFu5PL+taVql3ZN6CgS8Qa+sjggsCaivFx8P8AXIY8sZE0bo7uRhkcUxIjZknn&#xA;vzz5V813URazubUQRCOK9ohlrUmjxhqFFrt8VfClchm8QyBiRXUH9bbqM8MnQ+9gEqqsjKjiRQaK&#xA;4BAI8aGhy0OGswodirsVTJPMetJbw263JEcClIfhXkikk0V6ch18chkxxmKluG0ZpAVfJB3EiyFJ&#xA;PUklmcFrhpP5+R6NViw48TU03r8zKMQBQ5NZNqOFDdDStNhsT88VR+haV+ldThsvVEPqH7Z/UB44&#xA;QLbcOPjlSP8AM1lNo0jaH6sNxDFJ6omRQJaso+F9yVoG/wA+wvozzXH0dEgxcd2KuxV2KuxV2Kux&#xA;V2Kvo78mNc8q2X5feneajb6ZLBcSRNfXP7qKZ5F9bijOAWaMPxpTt4UxjlF8PV2um1AjAA8h8GN/&#xA;mjqHkmTWdEm0K+ju76a8hku2tZVdGWI0iebjyTmpb4a7gVGDUUYH3FGtzQnR2476fpZzpXlH6/5t&#xA;OuSqsn1a3Swt46kNUs0rtUA7kShe345qPZ3AI6UE/wARJ/R+hz8YjGRyHnVDrXmwH/nIXR9Ntn0m&#xA;+tYuNxKZYp3WhFEClVc7mvXj9ObeWWJlwgjiHNwe0p8VE/V3vIbyzuLO4a3uAFlUKSFZXFHUMPiQ&#xA;svQ+OF1ShirsVdiq+KT05Uk4q/Bg3BxVTQ1oR4HFXoH5Paj5ctNQ1Maxwjd7cPbTyRmSKNYyTJz6&#xA;0rVaf1phExHm5+gyxgTeyD/MfWdDuNRs5PL+oS3IWGRZ5AGiUGT4SFUhKckJDDw2yHhwiSYjeXNG&#xA;tzQnIGLGtC8v6rrt6bPTYfWmCl23AAUbVJOTAtxsWGWQ0E+uY7m58t3elXkZj1XQ3q8Tfa9OOqn6&#xA;FUmtPAeOao4/B1PF/Dk2/wA79rkSs4+E/VD7mLXcVtG8Yt5/rCtGju3ApxkZQXjoevBtq982jhKG&#xA;KuxV2KuxV2Kst+peTotHtdSjlaeeFVF3atzUvMyGibilAwrsemVZ7MeGJqR/BcysXCD1Ynxbjyoe&#xA;JNA3ao7Za4a4TSiIwh2ELMHaOp4llBAYjpUBjiqLuUW3tLTgi+tJynF2jPyKmiiMqfhUxujbgb1+&#xA;WQhO78iyIqkEzFiWYksTUk9ScmxaxV2KuxV2KuxV2KuxVsbnrT3xVOtU1KwvdPW3SaSGLTQkOl2Y&#xA;jBSRXLNcTyvyHB2cBqcT149FGVY8fDZP1Hn+PJlI2lNq6pcwuxoqurMfYGuWSGyAz/UPzQ816Xfa&#xA;2+ha41vb399On1EJzZIkASOZHdGReSfD8DV2+RyjSY/DxRj3BulmlZ3SbQ9VOpeWtT8tXbF5TXUd&#xA;Kkbci4hBaWOp/wB+Rc+P+V88qy4uHKMo/qy93T5FjGVxMT72KZmtTsVdirsVdiqJguxHbTW5QlZv&#xA;tlTxJK/YBND8Ibcjv9AyJjvab2Q2SQnGheYdX8t3aX+kXax3E0RWQBQ/FS5HB1kXjX4AwpXYjfqM&#xA;INNmPLKBuKlb69ejWn1W6Y3M1w7NeBv92rJ/eKabbg/RlWXGJij+CoyHisoC4SNJ5FibnEGIjfxW&#xA;ux+7JjluwKnhQ7FXYq7FXYqvMjmNYyx4ISVXsC1Kn6aDBSWub8BHyPAEsErsCaAmn0YUIqz1O4tL&#xA;a6t4ljK3iBJGdAzACv2CfsnfG2cZkAgdUJybiFqeIJIHap6/qxYNYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FV8UskUqSxsUkjYMjjqGU1BGAi1WYVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdir3D/rE/8A7XP/ACUxQ7/rE/8A7XP/ACUxV3/WJ/8A2uf+SmKu/wCsT/8A&#xA;tc/8lMVd/wBYn/8Aa5/5KYq7/rE//tc/8lMVd/1if/2uf+SmKu/6xP8A+1z/AMlMVd/1if8A9rn/&#xA;AJKYq7/rE/8A7XP/ACUxV3/WJ/8A2uf+SmKu/wCsT/8Atc/8lMVd/wBYn/8Aa5/5KYq7/rE//tc/&#xA;8lMVd/1if/2uf+SmKu/6xP8A+1z/AMlMVd/1if8A9rn/AJKYq7/rE/8A7XP/ACUxV3/WJ/8A2uf+&#xA;SmKu/wCsT/8Atc/8lMVd/wBYn/8Aa5/5KYq7/rE//tc/8lMVd/1if/2uf+SmKu/6xP8A+1z/AMlM&#xA;Vd/1if8A9rn/AJKYq7/rE/8A7XP/ACUxV3/WJ/8A2uf+SmKu/wCsT/8Atc/8lMVd/wBYn/8Aa5/5&#xA;KYq7/rE//tc/8lMVd/1if/2uf+SmKu/6xP8A+1z/AMlMVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:6ad4a3e7-3f80-1946-91e1-9460c0005b89</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:6ad4a3e7-3f80-1946-91e1-9460c0005b89</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:4297b409-4ee1-344d-b21e-0e97724762b4</stRef:instanceID>
            <stRef:documentID>xmp.did:4297b409-4ee1-344d-b21e-0e97724762b4</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9067fc31-28a1-d148-ab2c-c5fa71d7a086</stEvt:instanceID>
                  <stEvt:when>2016-03-23T14:17:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4297b409-4ee1-344d-b21e-0e97724762b4</stEvt:instanceID>
                  <stEvt:when>2016-03-23T16:11:18+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6ad4a3e7-3f80-1946-91e1-9460c0005b89</stEvt:instanceID>
                  <stEvt:when>2016-03-24T15:52:28+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4648.000000</stDim:w>
            <stDim:h>3092.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -3092 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 3092 li
4648 3092 li
4648 0 li
cp
clp
4648 3092 mo
0 3092 li
0 0 li
4648 0 li
4648 3092 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.137255 .121569 .12549 rgb
f
2252.99 753.004 mo
2484.7 406.96 li
2337.42 768.898 li
2556.77 616.203 li
2378.4 814.072 li
2733 764.438 li
2365.34 878.723 li
2527.39 1005.55 li
2349.02 975.838 li
2480.06 1359.93 li
2284.84 1064.5 li
2221.12 1326.56 li
2207.38 991.113 li
1971.53 1295.5 li
2149.02 941.823 li
1917.05 980.184 li
2093.09 883.444 li
1881.39 795.18 li
2096.79 771.453 li
1918.2 468.241 li
2159.88 686.582 li
2181.11 483.691 li
2252.99 753.004 li
.984314 .694118 .823529 rgb
f
2273.95 980.148 mo
2237.14 1165 li
2227.43 928.306 li
2095.94 1098.02 li
2189.16 912.264 li
2043.89 936.288 li
2145.14 880.645 li
1971.04 808.056 li
2159.88 832.142 li
2012.66 584.05 li
2195.94 764.438 li
2190.85 607.885 li
2244.01 807.057 li
2380.31 603.507 li
2287.71 831.055 li
2408.35 747.073 li
2320.01 845.079 li
2460.77 825.376 li
2317.42 869.935 li
2443.56 968.665 li
2315.39 947.311 li
2401.73 1200.37 li
2273.95 980.148 li
.984314 .772549 .0823529 rgb
f
2371.55 872.915 mo
2371.55 876.882 2367.94 880.726 2367.56 884.594 cv
2367.18 888.535 2368.51 892.717 2367.76 896.537 cv
2366.99 900.414 2358.27 901.99 2357.14 905.722 cv
2356 909.498 2359.28 914.363 2357.79 917.971 cv
2356.28 921.611 2352.99 924.053 2351.14 927.502 cv
2349.28 930.971 2350.7 936.149 2348.52 939.403 cv
2346.33 942.669 2341.5 943.749 2339.01 946.778 cv
2336.52 949.813 2337.52 955.879 2334.74 958.653 cv
2331.97 961.427 2332.27 968.178 2329.24 970.672 cv
2326.21 973.161 2320.84 973.34 2317.57 975.528 cv
2314.32 977.706 2309.64 978.012 2306.17 979.87 cv
2302.73 981.717 2299.73 985.063 2296.09 986.572 cv
2294.2 987.353 2291.88 987.008 2289.55 986.662 cv
2287.42 986.347 2285.29 986.031 2283.49 986.578 cv
2281.47 987.189 2279.34 987.085 2277.19 986.982 cv
2275.36 986.893 2273.52 986.806 2271.74 987.159 cv
2267.92 987.914 2265.12 996.158 2261.18 996.542 cv
2257.31 996.919 2252.98 986.145 2249.01 986.145 cv
2245.04 986.145 2240.79 996.024 2236.92 995.647 cv
2232.98 995.264 2229.91 988.846 2226.09 988.09 cv
2222.22 987.323 2218.11 988.218 2214.37 987.087 cv
2212.56 986.535 2210.32 987.037 2208.08 987.538 cv
2205.68 988.079 2203.27 988.62 2201.4 987.844 cv
2197.76 986.335 2195.86 980.638 2192.42 978.791 cv
2188.95 976.933 2188.88 969.962 2185.63 967.783 cv
2184.03 966.714 2181.32 967.216 2178.6 967.718 cv
2175.77 968.244 2172.93 968.768 2171.39 967.497 cv
2168.35 965.004 2170.3 957.173 2167.52 954.398 cv
2164.75 951.624 2162.35 949.107 2159.86 946.073 cv
2157.37 943.044 2152.36 942.213 2150.18 938.947 cv
2148 935.693 2140.46 935.398 2138.6 931.93 cv
2136.76 928.482 2144.11 920.627 2142.6 916.987 cv
2141.1 913.379 2136.08 911.295 2134.94 907.519 cv
2133.81 903.787 2131.41 900.338 2130.64 896.461 cv
2129.88 892.642 2126.17 888.989 2125.79 885.048 cv
2125.42 881.18 2135.48 876.882 2135.48 872.915 cv
2135.48 868.949 2134.47 865.531 2134.85 861.663 cv
2135.23 857.722 2127.28 852.672 2128.03 848.854 cv
2128.8 844.977 2130.4 841.012 2131.53 837.279 cv
2132.68 833.502 2130.92 828.226 2132.41 824.617 cv
2133.92 820.978 2140.68 819.448 2142.53 816 cv
2144.38 812.531 2150.07 811.524 2152.25 808.27 cv
2154.44 805.003 2153.88 799.915 2156.37 796.886 cv
2158.86 793.851 2161.44 790.897 2164.22 788.122 cv
2166.99 785.348 2170.95 783.99 2173.99 781.496 cv
2177.02 779.007 2175.71 770.3 2178.98 768.114 cv
2180.63 767.007 2183.98 768.732 2187.33 770.455 cv
2190.59 772.13 2193.84 773.803 2195.55 772.888 cv
2199 771.042 2201.43 768.336 2205.07 766.827 cv
2208.68 765.331 2209.37 755.843 2213.15 754.699 cv
2216.88 753.568 2221.15 753.117 2225.03 752.35 cv
2228.85 751.595 2233.08 751.554 2237.02 751.17 cv
2240.89 750.794 2245.04 755.343 2249.01 755.343 cv
2252.97 755.343 2257.1 751.079 2260.97 751.456 cv
2264.91 751.839 2267.69 759.088 2271.51 759.844 cv
2273.38 760.214 2275.51 759.359 2277.63 758.504 cv
2279.9 757.589 2282.16 756.674 2284.09 757.259 cv
2287.87 758.403 2291.92 759.107 2295.53 760.602 cv
2299.17 762.111 2301.57 766.276 2305.02 768.122 cv
2308.49 769.98 2313.02 770.065 2316.27 772.244 cv
2319.54 774.431 2320.03 780.198 2323.05 782.685 cv
2326.09 785.179 2331.5 784.873 2334.28 787.648 cv
2337.05 790.422 2336.84 795.759 2339.33 798.794 cv
2341.82 801.823 2349.63 800.957 2351.81 804.223 cv
2353.99 807.478 2353.33 812.696 2355.19 816.165 cv
2357.03 819.613 2358.85 823.152 2360.36 826.792 cv
2361.86 830.4 2367.61 832.815 2368.76 836.592 cv
2369.89 840.323 2369.57 844.907 2370.34 848.784 cv
2371.09 852.603 2369.92 857.029 2370.3 860.969 cv
2370.68 864.838 2371.55 868.949 2371.55 872.915 cv
.984314 .882353 .564706 rgb
f
2351.89 872.915 mo
2351.89 876.987 2353.97 880.743 2353.53 884.696 cv
2353.08 888.732 2359.17 893.967 2358.29 897.855 cv
2357.39 901.807 2356.42 906.266 2355.1 910.038 cv
2353.76 913.854 2342.48 913.481 2340.74 917.087 cv
2338.99 920.723 2340.3 925.539 2338.17 928.933 cv
2336.02 932.344 2330.48 932.747 2327.98 935.886 cv
2325.47 939.032 2331.97 950.188 2329.12 953.032 cv
2326.28 955.875 2320.82 956.504 2317.67 959.015 cv
2316.06 960.301 2313.19 959.751 2310.32 959.2 cv
2307.6 958.679 2304.88 958.157 2303.22 959.203 cv
2299.82 961.339 2301.52 972.649 2297.88 974.402 cv
2296.01 975.307 2293.45 974.763 2290.89 974.219 cv
2288.53 973.717 2286.16 973.214 2284.33 973.856 cv
2280.56 975.175 2278.16 982.446 2274.21 983.345 cv
2272.22 983.795 2269.76 981.62 2267.29 979.445 cv
2264.92 977.364 2262.55 975.282 2260.57 975.502 cv
2256.62 975.943 2253.08 985.837 2249.01 985.837 cv
2244.94 985.837 2241.09 978.679 2237.14 978.238 cv
2233.1 977.788 2229.35 976.931 2225.47 976.047 cv
2221.51 975.148 2218.2 973.065 2214.43 971.746 cv
2212.62 971.115 2210.53 971.245 2208.45 971.374 cv
2206.12 971.518 2203.8 971.662 2201.9 970.744 cv
2198.26 968.991 2195.6 965.464 2192.2 963.326 cv
2188.79 961.18 2186.86 957.287 2183.73 954.781 cv
2182.2 953.563 2179.53 953.591 2176.85 953.619 cv
2174.01 953.648 2171.17 953.678 2169.71 952.213 cv
2166.87 949.37 2166.54 943.832 2164.02 940.685 cv
2161.52 937.547 2158.38 934.62 2156.23 931.208 cv
2154.1 927.815 2157.11 921.645 2155.36 918.01 cv
2153.62 914.404 2146.05 913.226 2144.71 909.41 cv
2143.39 905.637 2139.58 902.045 2138.68 898.094 cv
2137.79 894.205 2144.64 888.765 2144.19 884.73 cv
2143.75 880.776 2135.46 876.987 2135.46 872.915 cv
2135.46 868.844 2137.26 864.33 2137.7 860.378 cv
2138.15 856.341 2144.55 853.16 2145.43 849.271 cv
2146.33 845.32 2141.79 839.63 2143.11 835.858 cv
2144.44 832.041 2144.89 827.216 2146.63 823.609 cv
2148.39 819.974 2157.41 820.1 2159.55 816.706 cv
2161.7 813.296 2158.37 805.763 2160.87 802.623 cv
2163.38 799.478 2168.29 797.884 2171.14 795.042 cv
2173.98 792.198 2178.82 791.348 2181.96 788.836 cv
2185.1 786.33 2186.37 780.802 2189.78 778.654 cv
2193.17 776.517 2196.08 772.313 2199.71 770.56 cv
2201.55 769.673 2204.55 771.538 2207.56 773.404 cv
2210.45 775.197 2213.34 776.991 2215.21 776.337 cv
2218.99 775.018 2221.75 771.739 2225.71 770.84 cv
2229.59 769.957 2233.28 769.649 2237.32 769.2 cv
2241.27 768.759 2244.94 771.53 2249.01 771.53 cv
2253.08 771.53 2257 766.518 2260.95 766.959 cv
2264.99 767.408 2268.64 769.012 2272.53 769.897 cv
2274.44 770.331 2276.84 769.218 2279.24 768.106 cv
2281.78 766.921 2284.33 765.738 2286.27 766.419 cv
2290.09 767.754 2289.47 779.66 2293.07 781.4 cv
2294.83 782.248 2297.28 781.716 2299.72 781.183 cv
2302.32 780.617 2304.92 780.05 2306.67 781.152 cv
2310.08 783.3 2309.15 791.055 2312.29 793.561 cv
2313.82 794.79 2316.93 794.227 2320.04 793.664 cv
2323.29 793.075 2326.53 792.487 2327.98 793.94 cv
2330.83 796.783 2327.23 805.393 2329.74 808.538 cv
2332.25 811.676 2334.64 814.355 2336.79 817.765 cv
2338.93 821.159 2341.53 823.884 2343.28 827.521 cv
2345.02 831.126 2343.89 835.432 2345.23 839.247 cv
2346.54 843.019 2349.33 845.856 2350.23 849.808 cv
2351.11 853.696 2355.08 856.874 2355.53 860.911 cv
2355.97 864.864 2351.89 868.844 2351.89 872.915 cv
.984314 .772549 .0823529 rgb
f
2467.39 871.117 mo
2467.39 871.117 2466.83 871.187 2465.78 871.318 cv
2464.73 871.428 2463.19 871.633 2461.23 871.81 cv
2457.31 872.212 2451.71 872.705 2444.99 873.137 cv
2438.26 873.574 2430.42 873.957 2422.02 874.214 cv
2417.82 874.345 2413.48 874.45 2409.07 874.509 cv
2404.66 874.587 2400.18 874.598 2395.7 874.617 cv
2391.21 874.599 2386.73 874.593 2382.32 874.515 cv
2377.91 874.463 2373.57 874.349 2369.37 874.224 cv
2360.97 873.969 2353.13 873.587 2346.4 873.149 cv
2339.68 872.715 2334.08 872.222 2330.16 871.817 cv
2328.2 871.638 2326.66 871.434 2325.61 871.322 cv
2324.56 871.191 2324 871.121 2324 871.121 cv
2324 871.121 2324.56 871.051 2325.61 870.92 cv
2326.66 870.808 2328.2 870.603 2330.16 870.424 cv
2334.08 870.019 2339.68 869.526 2346.4 869.092 cv
2353.13 868.653 2360.97 868.27 2369.37 868.015 cv
2373.57 867.89 2377.91 867.776 2382.32 867.724 cv
2386.73 867.645 2391.21 867.64 2395.7 867.62 cv
2400.18 867.64 2404.66 867.651 2409.07 867.729 cv
2413.48 867.787 2417.82 867.892 2422.02 868.023 cv
2430.42 868.279 2438.26 868.662 2444.99 869.099 cv
2451.71 869.531 2457.31 870.023 2461.23 870.425 cv
2463.19 870.603 2464.73 870.807 2465.78 870.917 cv
2466.83 871.048 2467.39 871.117 2467.39 871.117 cv
1 .921569 .921569 rgb
f
2124.01 721.225 mo
2124.01 721.225 2124.53 721.779 2125.51 722.819 cv
2126.48 723.871 2127.93 725.387 2129.71 727.368 cv
2131.49 729.342 2133.68 731.727 2136.12 734.515 cv
2138.58 737.289 2141.35 740.416 2144.31 743.883 cv
2147.29 747.333 2150.52 751.07 2153.86 755.084 cv
2157.22 759.085 2160.77 763.286 2164.37 767.696 cv
2167.99 772.096 2171.7 776.659 2175.44 781.328 cv
2179.18 785.983 2182.94 790.754 2186.7 795.52 cv
2190.43 800.31 2194.17 805.093 2197.8 809.845 cv
2201.44 814.58 2204.98 819.28 2208.4 823.837 cv
2211.82 828.386 2215.05 832.842 2218.14 837.056 cv
2221.24 841.255 2224.1 845.28 2226.73 849.001 cv
2229.39 852.703 2231.77 856.143 2233.87 859.195 cv
2236 862.232 2237.79 864.925 2239.28 867.133 cv
2240.78 869.334 2241.9 871.102 2242.69 872.292 cv
2243.47 873.492 2243.88 874.132 2243.88 874.132 cv
2243.88 874.132 2243.36 873.578 2242.38 872.539 cv
2241.41 871.489 2239.96 869.972 2238.18 867.992 cv
2236.39 866.019 2234.21 863.634 2231.77 860.848 cv
2229.31 858.076 2226.53 854.946 2223.57 851.481 cv
2220.59 848.034 2217.36 844.293 2214.02 840.28 cv
2210.67 836.282 2207.11 832.077 2203.51 827.667 cv
2199.9 823.264 2196.18 818.706 2192.45 814.035 cv
2188.7 809.379 2184.95 804.604 2181.19 799.838 cv
2177.46 795.047 2173.72 790.262 2170.1 785.511 cv
2166.46 780.77 2162.91 776.076 2159.5 771.515 cv
2156.08 766.967 2152.85 762.508 2149.76 758.296 cv
2146.66 754.098 2143.8 750.069 2141.17 746.352 cv
2138.51 742.65 2136.13 739.208 2134.02 736.159 cv
2131.9 733.122 2130.11 730.429 2128.62 728.223 cv
2127.12 726.023 2125.99 724.254 2125.2 723.066 cv
2124.42 721.865 2124.01 721.225 2124.01 721.225 cv
f
2208.48 1017.95 mo
2202.52 1016.36 2196.72 1014.42 2191.09 1012.13 cv
2207.38 991.113 li
2208.48 1017.95 li
2350.72 980.836 mo
2349.02 975.838 li
2354.73 976.79 li
2353.42 978.163 2352.08 979.514 2350.72 980.836 cv
2134.22 971.318 mo
2127.78 963.851 2122.06 955.738 2117.19 947.088 cv
2149.02 941.823 li
2134.22 971.318 li
2393.43 900.709 mo
2368.54 881.227 li
2369.13 879.864 2369.87 878.499 2370.48 877.125 cv
2379.03 874.465 li
2380.13 874.485 2381.22 874.502 2382.32 874.515 cv
2386.73 874.593 2391.21 874.599 2395.7 874.617 cv
2395.73 874.617 2395.76 874.617 2395.79 874.617 cv
2395.77 883.521 2394.96 892.238 2393.43 900.709 cv
2378.4 814.072 mo
2381.57 810.557 li
2382.02 811.514 2382.47 812.475 2382.9 813.443 cv
2378.4 814.072 li
2337.42 768.898 mo
2341.41 759.096 li
2342.94 760.358 2344.45 761.649 2345.93 762.971 cv
2337.42 768.898 li
2252.99 753.004 mo
2245.59 725.298 li
2246.05 725.294 2246.5 725.292 2246.95 725.292 cv
2254.91 725.292 2262.71 725.915 2270.32 727.116 cv
2252.99 753.004 li
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>D
k3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/
mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7qr[>Dk3i-/mec/7
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qr[>CjmDj'lh9?&p#,$)hWF=_jR:g]m+:1[f%oN<g>pW6im635bgY@hdFlRbf#5b\_T:*<`Qc$3b.5:-
[_0Ma\\PGX]r\QOWirn/XL"_%Yb7kpSYE'OT;7dBTp(k8O-H)lOd:i`P(njTJqf25K84f'K6VcnF*DtM
FEhV@F(oH/ASGphAS5:W@p3/F<`rX*<EDpm;G0_Z7nH<?7RfU.5s%4m2`WlS2)Hs@0In\*-RgDf,U4BR
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYBs^q"OOVp@\+Op%7nJoCDJBnF5o8n*f]3m-O''l07EqkND!hjQ,@]io8qTi8<DIh;$c=g=b-1
f@JL%eC2jndEp4bcHXSWbK@rKaN)<>`5BI/_8*h#^:h1l]=PSa\@8rU[C!9GZ*:I9Y-"e+Wi;qpVPU)`
U8"?ST:_^GS=>t8R$X,(P`q8mOH>N`NJrdQM26qAKnP)1JUi6!I=-BfH?jaZG'.nJEcH&:DJa3*C2%?o
An>L_@UWYO?<pf?>$4s/<`E!q;,C%`9h\2P8Ou?@779L/5X.Fq4?GSa3&``P1GU[=0.nh-.k2tr-7'o^
~>
<~jlPUcjlGL_j5T(Xio/kSi8<GKhVI#Cgt^Z=g=k64f@SU)f%/C$e'lamd*U+bcd0n]c-4ARb/q`Ga2c3=
`Pf[3_SX.)^V7Co]Xtbd\[f5[\$i]P['R'DZ*:F7XfSS(WiE(uW2HMhV50o^U7n6PSt2FBS!oe6R$X,(
Pa%ApOcYWaNK&mTMMd7HLPLV<KS+l-J:N,uI=-BfH?jaZG'.nIEcH&:DJa3*CMIQtBP1pgA7K(X?sd5G
>[(B8=]ea+<E)mq;G^.a9h\5R8kDQD7R]^46:!k$5!;"i3]T/Y2Dm<I1,1I9/hJV).Ocbn-7'o^+sA'N
~>
<~mHs<.mHj3*lg!d"l0.?okN:phk2k^cjQ,@\iSi_Qi8EMLh;-l@g=k65g"G$0f%/C$eC2jodF$=ecHXSW
bKJ&MaiMNB`l5m6_ns7+^q[Ut]tCth]",>\\$i]P['R'CYck75XfSV)Wi;trVl$>fUnaZXTV%jJSXc1<
R@0G/QBd\uP*1rhO,f3YMi3ILLkg_=KS4u0JUi6!IXQTjH?jaYG'.nJEcH&:DJa3+CMIQtBP1pgA7K(W
?sd5G>[(B7=BAO'<)Z[l:esh\9M7uL84Q0>779I.5X.Fq4?GSa3&``Q1c$mA0J>%1.k<(u-mp>f,9e9R
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
2231.28 1022.16 mo
2223.48 1021.34 2215.87 1019.92 2208.48 1017.95 cv
2207.38 991.113 li
2191.09 1012.13 li
2183.92 1009.23 2177.02 1005.78 2170.46 1001.84 cv
2190.21 976.344 li
2190.78 977.405 2191.48 978.287 2192.42 978.791 cv
2195.86 980.638 2197.76 986.335 2201.4 987.844 cv
2202.07 988.123 2202.81 988.232 2203.6 988.232 cv
2205 988.232 2206.54 987.885 2208.08 987.538 cv
2209.63 987.192 2211.17 986.846 2212.57 986.846 cv
2213.21 986.846 2213.81 986.916 2214.37 987.087 cv
2218.11 988.218 2222.22 987.323 2226.09 988.09 cv
2227.46 988.361 2228.73 989.359 2229.99 990.545 cv
2231.28 1022.16 li
2265.65 1021.81 mo
2272.58 987.024 li
2273.29 986.934 2274.02 986.903 2274.74 986.903 cv
2275.55 986.903 2276.37 986.942 2277.19 986.982 cv
2277.44 986.994 2277.69 987.006 2277.94 987.017 cv
2294.33 1015.27 li
2285.14 1018.36 2275.55 1020.57 2265.65 1021.81 cv
2332.08 996.24 mo
2324.16 973.013 li
2326.06 972.438 2327.88 971.786 2329.24 970.672 cv
2332.27 968.178 2331.97 961.427 2334.74 958.653 cv
2336.51 956.884 2336.75 953.774 2337.33 950.967 cv
2370.91 956.56 li
2366.1 963.772 2360.68 970.538 2354.73 976.79 cv
2349.02 975.838 li
2350.72 980.836 li
2344.95 986.455 2338.71 991.612 2332.08 996.24 cv
2151.13 988.031 mo
2145.06 982.918 2139.4 977.328 2134.22 971.318 cv
2149.02 941.823 li
2117.19 947.088 li
2113.37 940.306 2110.06 933.185 2107.32 925.797 cv
2142.48 919.983 li
2141.27 923.936 2137.17 929.257 2138.6 931.93 cv
2140.46 935.398 2148 935.693 2150.18 938.947 cv
2152.36 942.213 2157.37 943.044 2159.86 946.073 cv
2162.35 949.107 2164.75 951.624 2167.52 954.398 cv
2167.63 954.509 2167.74 954.627 2167.83 954.753 cv
2151.13 988.031 li
2387.07 924.451 mo
2359.6 902.951 li
2362.6 900.903 2367.21 899.308 2367.76 896.537 cv
2368.51 892.717 2367.18 888.535 2367.56 884.594 cv
2367.67 883.471 2368.05 882.35 2368.54 881.227 cv
2393.43 900.709 li
2391.96 908.874 2389.82 916.807 2387.07 924.451 cv
2101.27 904.755 mo
2099.2 894.873 2098.11 884.628 2098.11 874.132 cv
2098.11 869.797 2098.3 865.507 2098.66 861.267 cv
2133.9 875.958 li
2131.08 879.016 2125.51 882.153 2125.79 885.048 cv
2125.96 886.811 2126.8 888.517 2127.74 890.206 cv
2101.27 904.755 li
2370.48 877.125 mo
2370.89 876.183 2371.23 875.236 2371.41 874.283 cv
2373.91 874.354 2376.46 874.418 2379.03 874.465 cv
2370.48 877.125 li
2371.2 867.962 mo
2370.91 865.599 2370.52 863.242 2370.3 860.969 cv
2370.07 858.552 2370.42 855.952 2370.55 853.421 cv
2393.21 846.377 li
2394.52 853.302 2395.34 860.391 2395.65 867.62 cv
2391.19 867.64 2386.72 867.646 2382.32 867.724 cv
2378.55 867.768 2374.83 867.858 2371.2 867.962 cv
2369.15 838.2 mo
2369.04 837.65 2368.91 837.113 2368.76 836.592 cv
2367.61 832.815 2361.86 830.4 2360.36 826.792 cv
2358.85 823.152 2357.03 819.613 2355.19 816.165 cv
2353.97 813.901 2353.83 810.891 2353.28 808.168 cv
2369.71 789.939 li
2374.19 796.456 2378.16 803.348 2381.57 810.557 cv
2378.4 814.072 li
2382.9 813.443 li
2386.02 820.425 2388.62 827.689 2390.65 835.191 cv
2369.15 838.2 li
2131.78 828.558 mo
2106.31 825.309 li
2111.8 809.465 2119.9 794.847 2130.09 781.946 cv
2147.78 811.763 li
2145.69 812.952 2143.54 814.111 2142.53 816 cv
2140.68 819.448 2133.92 820.978 2132.41 824.617 cv
2131.93 825.791 2131.79 827.141 2131.78 828.558 cv
2337.87 796.137 mo
2336.76 793.23 2336.35 789.723 2334.28 787.648 cv
2331.5 784.873 2326.09 785.179 2323.05 782.685 cv
2320.03 780.198 2319.54 774.431 2316.27 772.244 cv
2315.1 771.454 2313.75 770.94 2312.35 770.516 cv
2322.4 745.804 li
2329.09 749.744 2335.44 754.194 2341.41 759.096 cv
2337.42 768.898 li
2345.93 762.971 li
2351.64 768.055 2356.95 773.57 2361.82 779.468 cv
2337.87 796.137 li
2195.94 764.438 mo
2174.99 743.816 li
2181.37 740.282 2188.05 737.201 2194.97 734.622 cv
2195.94 764.438 li
2272.45 759.933 mo
2272.13 759.933 2271.82 759.905 2271.51 759.844 cv
2267.69 759.088 2264.91 751.839 2260.97 751.456 cv
2260.81 751.44 2260.64 751.433 2260.48 751.433 cv
2256.75 751.433 2252.81 755.343 2249.01 755.343 cv
2245.2 755.343 2241.22 751.148 2237.48 751.148 cv
2237.33 751.148 2237.17 751.155 2237.02 751.17 cv
2234.49 751.417 2231.84 751.522 2229.25 751.765 cv
2222.71 727.257 li
2230.16 726.036 2237.81 725.368 2245.59 725.298 cv
2252.99 753.004 li
2270.32 727.116 li
2278.35 728.383 2286.18 730.295 2293.74 732.792 cv
2276.12 759.098 li
2274.86 759.567 2273.62 759.933 2272.45 759.933 cv
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?i
pA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`
qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Bes7Z?ipA=m`qu?Be
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s7Z?ipA=m_qu??ds7H0fo_SUZqZ$-^s7,pbnbE.Rq#BgWrpKO[mIpPGpAXCNrp04UlLb)>oD[qEro`kO
k4/H3nc%S<ro3GHiU?d(mf),3rnd&@h<b*qm/>])rRpK7f]i@dl2B2srRL*0eE?eYk5E]hrQs[)cK+rK
j8I3]r6+'sal30=i;CXQr5IOj`81@/h>G.Fr4q(b^Y8V"gAJV:r4CVY\_$_gf))r,qmFrN[++uZe,-Du
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~p%A"Np%A"Np%7nKo^qeJo^h\GoCMSFoCMPDo()>@naZ,<nF5r:nF5o8n*f]4mdBK0mHs9,m-O'(lg*j$
lK[["lK[Wukih3mkND!ik2tggk2tdejQ,@]j5].Yio8qUiSibRi8EPNhr!>JhVR,Fh;-oBgt^]>gY:K:
g=b03f\"j.f@SX*f%/F&e^`4"eC<!se'c[ldF$@gd*U.ccd'h\c-=MWbfn;SbKJ)Pb0%iJaN2HDa2c6@
`l?!:`5KU4_o'C0_SX1,_83q&^V@Ou^:q=q]tM(k]=Y\e]"5G_\@B&Y\$riU[^NTO['[3IZa7!EZEga?
~>
<~qYL'bqYL'bqYL'bqYL'bqYBs_q>'j^q>'j^q>'g\q"XXZq"XUXp\4FVp\4CTp@e4Rp@e1Pp%A"Np%@tL
o^qbHoCMSFoCMPDo()ABo()>@naZ,<nF5r:nF5o8n*f`6n*f`5mdBN1mHs<.mHs<-m-O*)lg*m&lg*m%
lK[[!l07Hrkih6okih6nkND$jk2tggk2tgfjlPUbjQ,C_jQ,C^j5]1Zio8tViSibSi8EPOi8EPOhr!>K
hVR,Gh;-oCgt^]?gt^]?gY:K;g=k97g"G'3g"G'3f\"j/f@SX+f%/F'e^`4#eC<!te'ldpe'ldpdaHRl
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
2246.95 1022.97 mo
2241.66 1022.97 2236.43 1022.7 2231.28 1022.16 cv
2229.99 990.545 li
2232.22 992.671 2234.39 995.401 2236.92 995.647 cv
2237 995.654 2237.07 995.658 2237.14 995.658 cv
2240.95 995.657 2245.12 986.145 2249.01 986.145 cv
2252.91 986.145 2257.16 996.552 2260.98 996.552 cv
2261.05 996.552 2261.11 996.548 2261.18 996.542 cv
2265.12 996.158 2267.92 987.914 2271.74 987.159 cv
2272.02 987.103 2272.3 987.059 2272.58 987.024 cv
2265.65 1021.81 li
2259.53 1022.58 2253.29 1022.97 2246.95 1022.97 cv
2294.33 1015.27 mo
2277.94 987.017 li
2278.5 987.042 2279.07 987.061 2279.63 987.061 cv
2280.95 987.061 2282.24 986.956 2283.49 986.578 cv
2284.2 986.362 2284.97 986.281 2285.76 986.281 cv
2286.98 986.281 2288.27 986.471 2289.55 986.662 cv
2290.84 986.853 2292.13 987.045 2293.34 987.045 cv
2294.32 987.045 2295.25 986.921 2296.09 986.572 cv
2299.73 985.063 2302.73 981.717 2306.17 979.87 cv
2309.64 978.012 2314.32 977.706 2317.57 975.528 cv
2319.38 974.319 2321.82 973.724 2324.16 973.013 cv
2332.08 996.24 li
2320.58 1004.28 2307.9 1010.72 2294.33 1015.27 cv
2170.46 1001.84 mo
2163.64 997.746 2157.18 993.127 2151.13 988.031 cv
2167.83 954.753 li
2170.15 957.789 2168.47 965.104 2171.39 967.497 cv
2172.1 968.081 2173.08 968.286 2174.21 968.286 cv
2175.54 968.286 2177.07 968.002 2178.6 967.718 cv
2180.14 967.434 2181.67 967.15 2183 967.15 cv
2184.03 967.15 2184.93 967.318 2185.63 967.783 cv
2188 969.37 2188.68 973.5 2190.21 976.344 cv
2170.46 1001.84 li
2370.91 956.56 mo
2337.33 950.967 li
2337.67 949.373 2338.11 947.877 2339.01 946.778 cv
2341.5 943.749 2346.33 942.669 2348.52 939.403 cv
2350.7 936.149 2349.28 930.971 2351.14 927.502 cv
2352.99 924.053 2356.28 921.611 2357.79 917.971 cv
2359.28 914.363 2356 909.498 2357.14 905.722 cv
2357.47 904.657 2358.41 903.768 2359.6 902.951 cv
2387.07 924.451 li
2382.97 935.864 2377.52 946.632 2370.91 956.56 cv
2107.32 925.797 mo
2104.81 919 2102.78 911.978 2101.27 904.755 cv
2127.74 890.206 li
2128.9 892.292 2130.22 894.351 2130.64 896.461 cv
2131.41 900.338 2133.81 903.787 2134.94 907.519 cv
2136.08 911.295 2141.1 913.379 2142.6 916.987 cv
2142.94 917.805 2142.83 918.836 2142.48 919.983 cv
2107.32 925.797 li
2133.9 875.958 mo
2098.66 861.267 li
2099.73 848.78 2102.34 836.725 2106.31 825.309 cv
2131.78 828.558 li
2131.76 831.499 2132.31 834.731 2131.53 837.279 cv
2130.4 841.012 2128.8 844.977 2128.03 848.854 cv
2127.28 852.672 2135.23 857.722 2134.85 861.663 cv
2134.49 865.336 2135.38 868.603 2135.47 872.32 cv
2135.47 872.519 2135.46 872.718 2135.46 872.915 cv
2135.46 872.992 2135.47 873.068 2135.47 873.144 cv
2135.38 874.068 2134.77 875.009 2133.9 875.958 cv
2370.55 853.421 mo
2370.63 851.827 2370.63 850.26 2370.34 848.784 cv
2369.68 845.448 2369.82 841.589 2369.15 838.2 cv
2390.65 835.191 li
2391.64 838.861 2392.5 842.6 2393.21 846.377 cv
2370.55 853.421 li
2147.78 811.763 mo
2130.09 781.946 li
2136.36 774.008 2143.43 766.72 2151.16 760.209 cv
2153.82 763.849 2156.59 767.649 2159.5 771.515 cv
2162.67 775.756 2165.96 780.112 2169.33 784.513 cv
2167.5 785.572 2165.69 786.646 2164.22 788.122 cv
2161.44 790.897 2158.86 793.851 2156.37 796.886 cv
2153.88 799.915 2154.44 805.003 2152.25 808.27 cv
2151.26 809.752 2149.54 810.768 2147.78 811.763 cv
2353.28 808.168 mo
2352.98 806.72 2352.57 805.353 2351.81 804.223 cv
2349.63 800.957 2341.82 801.823 2339.33 798.794 cv
2338.7 798.029 2338.25 797.117 2337.87 796.137 cv
2361.82 779.468 li
2364.6 782.838 2367.23 786.329 2369.71 789.939 cv
2353.28 808.168 li
2174.8 780.535 mo
2171.28 776.143 2167.78 771.846 2164.37 767.696 cv
2161.29 763.923 2158.24 760.302 2155.33 756.83 cv
2161.51 751.996 2168.08 747.64 2174.99 743.816 cv
2195.94 764.438 li
2194.97 734.622 li
2203.85 731.311 2213.12 728.827 2222.71 727.257 cv
2229.25 751.765 li
2227.81 751.901 2226.39 752.08 2225.03 752.35 cv
2221.15 753.117 2216.88 753.568 2213.15 754.699 cv
2209.37 755.843 2208.68 765.331 2205.07 766.827 cv
2201.43 768.336 2199 771.042 2195.55 772.888 cv
2195.22 773.067 2194.82 773.147 2194.38 773.147 cv
2192.57 773.147 2189.95 771.801 2187.33 770.455 cv
2184.72 769.11 2182.1 767.765 2180.29 767.765 cv
2179.79 767.765 2179.34 767.871 2178.98 768.114 cv
2176.05 770.073 2176.79 777.271 2174.8 780.535 cv
2312.35 770.516 mo
2309.88 769.771 2307.23 769.307 2305.02 768.122 cv
2301.57 766.276 2299.17 762.111 2295.53 760.602 cv
2291.92 759.107 2287.87 758.403 2284.09 757.259 cv
2283.67 757.131 2283.23 757.075 2282.78 757.075 cv
2281.17 757.075 2279.41 757.79 2277.63 758.504 cv
2277.13 758.707 2276.62 758.911 2276.12 759.098 cv
2293.74 732.792 li
2303.81 736.125 2313.41 740.505 2322.4 745.804 cv
2312.35 770.516 li
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]
q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+V
mJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltKs7l!]q!J+VmJltK
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s7l!]q!A%UlMpVBs7b[UpZ2AJj8\f1s7P7Ko\9E<f`1QprpnS<o$RI,cMm=Vrp\#.n&>:o_Z&r;rp@At
m(!&\[f5Turp$]dl)XgIW;btVroTpQk+;P5Rf2<5rSs+?ifF&sMuDUjrSWA-hgk[^IJquIrS2PogN!2G
D>i.%r7GTYf4"U.?2W5Ur7"aEdo$%k:&NC0r6Rn1cTqER4T*G`r6-tob:rh9/,RF8qoBuY`ub,t)Z.Jg
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~p\4FVp\4FVp\4FVp\+=Sp@e4Rp@e4Rp@e1Pp%@tLo^qeJo^qbHoCMSFoCMPDo()>@naZ/>naZ,<nF5o8
n*f`6n*f]4mdBK0mHs9,m-O**m-O'(lg*j$lK[["lK[Wul07Hrkih6nkND$jk2tgfjlPUcjlPUbjQ,C^
j5]1Zio8tViSibRi8EPOi8EPNhr!>JhVR,Fh;-oBgt^]>gY:K:g=k96g"G'2f\"j/f@SX+f%/F'e^`4#
eC<!te'ldpdaHRldF$@hd*U.dcd0q`cHa_\c-=MXbfn;TbKJ)Pb0%lLaiVZHaN2HDa2c6@`l?$<`Pog8
~>
<~m-O**m-F!&lKRQski_-kk2k^cjQ#:\j5].Xi8EMMhVR)DgY:H8f\"g-f@SU(eC;sqda?Ffcd'eZbfe/N
aiMNB`l5m6_ns7*^q[Ut]tCtg\[],X[^NTNZa-j@Yck43XK/D%WMlbnVPU,bUS=HTT:VXFS=>t8R$X,(
Pa%ApOcYWaNJrdQM2@%DL4t;5Jq8H%IXZ]mH[9s^GBS+NF)l8>Df0E.CMIQsB4b^dA7K(W?sd5G>[(B7
=BAO'<)Z[l:esh\9M.lI7n,s:6pj7*5<_4m4$#A]2`<NL1,1L;0.nh,.Ocbm,pX]Z+WqjJ*?6":)&O/*
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
2260.98 996.552 mo
2257.16 996.552 2252.91 986.145 2249.01 986.145 cv
2245.12 986.145 2240.95 995.657 2237.14 995.658 cv
2237.07 995.658 2237 995.654 2236.92 995.647 cv
2234.39 995.401 2232.22 992.671 2229.99 990.545 cv
2228.73 989.359 2227.46 988.361 2226.09 988.09 cv
2222.22 987.323 2218.11 988.218 2214.37 987.087 cv
2213.81 986.916 2213.21 986.846 2212.57 986.846 cv
2211.17 986.846 2209.63 987.192 2208.08 987.538 cv
2206.54 987.885 2205 988.232 2203.6 988.232 cv
2202.81 988.232 2202.07 988.123 2201.4 987.844 cv
2197.76 986.335 2195.86 980.638 2192.42 978.791 cv
2191.48 978.287 2190.78 977.405 2190.21 976.344 cv
2188.68 973.5 2188 969.37 2185.63 967.783 cv
2184.93 967.318 2184.03 967.15 2183 967.15 cv
2181.67 967.15 2180.14 967.434 2178.6 967.718 cv
2177.07 968.002 2175.54 968.286 2174.21 968.286 cv
2173.08 968.286 2172.1 968.081 2171.39 967.497 cv
2168.47 965.104 2170.15 957.789 2167.83 954.753 cv
2167.74 954.627 2167.63 954.509 2167.52 954.398 cv
2164.75 951.624 2162.35 949.107 2159.86 946.073 cv
2157.37 943.044 2152.36 942.213 2150.18 938.947 cv
2148 935.693 2140.46 935.398 2138.6 931.93 cv
2137.17 929.257 2141.27 923.936 2142.48 919.983 cv
2142.83 918.836 2142.94 917.805 2142.6 916.987 cv
2141.1 913.379 2136.08 911.295 2134.94 907.519 cv
2133.81 903.787 2131.41 900.338 2130.64 896.461 cv
2130.22 894.351 2128.9 892.292 2127.74 890.206 cv
2126.8 888.517 2125.96 886.811 2125.79 885.048 cv
2125.51 882.153 2131.08 879.016 2133.9 875.958 cv
2134.77 875.009 2135.38 874.068 2135.47 873.144 cv
2135.77 877.129 2143.76 880.851 2144.19 884.73 cv
2144.64 888.765 2137.79 894.205 2138.68 898.094 cv
2139.58 902.045 2143.39 905.637 2144.71 909.41 cv
2146.05 913.226 2153.62 914.404 2155.36 918.01 cv
2157.11 921.645 2154.1 927.815 2156.23 931.208 cv
2158.38 934.62 2161.52 937.547 2164.02 940.685 cv
2166.54 943.832 2166.87 949.37 2169.71 952.213 cv
2170.97 953.473 2173.24 953.627 2175.66 953.627 cv
2176.06 953.627 2176.46 953.623 2176.85 953.619 cv
2177.25 953.614 2177.65 953.61 2178.05 953.61 cv
2180.3 953.61 2182.43 953.745 2183.73 954.781 cv
2186.86 957.287 2188.79 961.18 2192.2 963.326 cv
2195.6 965.464 2198.26 968.991 2201.9 970.744 cv
2203.1 971.324 2204.47 971.48 2205.9 971.48 cv
2206.74 971.48 2207.59 971.427 2208.45 971.374 cv
2209.31 971.32 2210.17 971.267 2211.01 971.267 cv
2212.21 971.267 2213.37 971.375 2214.43 971.746 cv
2218.2 973.065 2221.51 975.148 2225.47 976.047 cv
2229.35 976.931 2233.1 977.788 2237.14 978.238 cv
2241.09 978.679 2244.94 985.837 2249.01 985.837 cv
2253.08 985.837 2256.62 975.943 2260.57 975.502 cv
2260.67 975.491 2260.77 975.486 2260.87 975.486 cv
2262.78 975.486 2265.04 977.466 2267.29 979.445 cv
2269.54 981.425 2271.78 983.404 2273.66 983.404 cv
2273.85 983.404 2274.03 983.385 2274.21 983.345 cv
2278.16 982.446 2280.56 975.175 2284.33 973.856 cv
2284.95 973.639 2285.63 973.553 2286.34 973.553 cv
2287.76 973.553 2289.33 973.886 2290.89 974.219 cv
2292.46 974.552 2294.03 974.886 2295.44 974.886 cv
2296.33 974.886 2297.16 974.752 2297.88 974.402 cv
2301.52 972.649 2299.82 961.339 2303.22 959.203 cv
2303.92 958.76 2304.81 958.598 2305.81 958.598 cv
2307.18 958.598 2308.75 958.9 2310.32 959.2 cv
2311.9 959.502 2313.47 959.803 2314.83 959.803 cv
2315.96 959.803 2316.94 959.597 2317.67 959.015 cv
2320.82 956.504 2326.28 955.875 2329.12 953.032 cv
2331.97 950.188 2325.47 939.032 2327.98 935.886 cv
2330.48 932.747 2336.02 932.344 2338.17 928.933 cv
2340.3 925.539 2338.99 920.723 2340.74 917.087 cv
2342.48 913.481 2353.76 913.854 2355.1 910.038 cv
2356.42 906.266 2357.39 901.807 2358.29 897.855 cv
2359.17 893.967 2353.08 888.732 2353.53 884.696 cv
2353.95 880.926 2352.08 877.336 2351.91 873.48 cv
2357.27 873.778 2363.17 874.036 2369.37 874.224 cv
2370.05 874.244 2370.73 874.264 2371.41 874.283 cv
2371.23 875.236 2370.89 876.183 2370.48 877.125 cv
2369.87 878.499 2369.13 879.864 2368.54 881.227 cv
2368.05 882.35 2367.67 883.471 2367.56 884.594 cv
2367.18 888.535 2368.51 892.717 2367.76 896.537 cv
2367.21 899.308 2362.6 900.903 2359.6 902.951 cv
2358.41 903.768 2357.47 904.657 2357.14 905.722 cv
2356 909.498 2359.28 914.363 2357.79 917.971 cv
2356.28 921.611 2352.99 924.053 2351.14 927.502 cv
2349.28 930.971 2350.7 936.149 2348.52 939.403 cv
2346.33 942.669 2341.5 943.749 2339.01 946.778 cv
2338.11 947.877 2337.67 949.373 2337.33 950.967 cv
2336.75 953.774 2336.51 956.884 2334.74 958.653 cv
2331.97 961.427 2332.27 968.178 2329.24 970.672 cv
2327.88 971.786 2326.06 972.438 2324.16 973.013 cv
2321.82 973.724 2319.38 974.319 2317.57 975.528 cv
2314.32 977.706 2309.64 978.012 2306.17 979.87 cv
2302.73 981.717 2299.73 985.063 2296.09 986.572 cv
2295.25 986.921 2294.32 987.045 2293.34 987.045 cv
2292.13 987.045 2290.84 986.853 2289.55 986.662 cv
2288.27 986.471 2286.98 986.281 2285.76 986.281 cv
2284.97 986.281 2284.2 986.362 2283.49 986.578 cv
2282.24 986.956 2280.95 987.061 2279.63 987.061 cv
2279.07 987.061 2278.5 987.042 2277.94 987.017 cv
2277.69 987.006 2277.44 986.994 2277.19 986.982 cv
2276.37 986.942 2275.55 986.903 2274.74 986.903 cv
2274.02 986.903 2273.29 986.934 2272.58 987.024 cv
2272.3 987.059 2272.02 987.103 2271.74 987.159 cv
2267.92 987.914 2265.12 996.158 2261.18 996.542 cv
2261.11 996.548 2261.05 996.552 2260.98 996.552 cv
2135.47 872.32 mo
2135.38 868.603 2134.49 865.336 2134.85 861.663 cv
2135.23 857.722 2127.28 852.672 2128.03 848.854 cv
2128.8 844.977 2130.4 841.012 2131.53 837.279 cv
2132.31 834.731 2131.76 831.499 2131.78 828.558 cv
2131.79 827.141 2131.93 825.791 2132.41 824.617 cv
2133.92 820.978 2140.68 819.448 2142.53 816 cv
2143.54 814.111 2145.69 812.952 2147.78 811.763 cv
2149.54 810.768 2151.26 809.752 2152.25 808.27 cv
2154.44 805.003 2153.88 799.915 2156.37 796.886 cv
2158.86 793.851 2161.44 790.897 2164.22 788.122 cv
2165.69 786.646 2167.5 785.572 2169.33 784.513 cv
2169.59 784.846 2169.84 785.178 2170.1 785.511 cv
2171.83 787.773 2173.58 790.043 2175.34 792.318 cv
2173.78 793.06 2172.29 793.886 2171.14 795.042 cv
2168.29 797.884 2163.38 799.478 2160.87 802.623 cv
2158.37 805.763 2161.7 813.296 2159.55 816.706 cv
2157.41 820.1 2148.39 819.974 2146.63 823.609 cv
2144.89 827.216 2144.44 832.041 2143.11 835.858 cv
2141.79 839.63 2146.33 845.32 2145.43 849.271 cv
2144.55 853.16 2138.15 856.341 2137.7 860.378 cv
2137.28 864.138 2135.63 868.407 2135.47 872.32 cv
2353.01 868.699 mo
2354.18 866.08 2355.82 863.49 2355.53 860.911 cv
2355.08 856.874 2351.11 853.696 2350.23 849.808 cv
2349.33 845.856 2346.54 843.019 2345.23 839.247 cv
2343.89 835.432 2345.02 831.126 2343.28 827.521 cv
2341.53 823.884 2338.93 821.159 2336.79 817.765 cv
2334.64 814.355 2332.25 811.676 2329.74 808.538 cv
2327.23 805.393 2330.83 796.783 2327.98 793.94 cv
2327.31 793.267 2326.26 793.032 2324.99 793.032 cv
2323.53 793.032 2321.79 793.348 2320.04 793.664 cv
2318.3 793.98 2316.56 794.295 2315.09 794.295 cv
2313.94 794.295 2312.96 794.101 2312.29 793.561 cv
2309.15 791.055 2310.08 783.3 2306.67 781.152 cv
2305.94 780.692 2305.06 780.523 2304.1 780.523 cv
2302.75 780.523 2301.24 780.853 2299.72 781.183 cv
2298.21 781.514 2296.69 781.845 2295.33 781.845 cv
2294.51 781.845 2293.74 781.721 2293.07 781.4 cv
2289.47 779.66 2290.09 767.754 2286.27 766.419 cv
2285.88 766.28 2285.46 766.219 2285.02 766.219 cv
2283.29 766.219 2281.27 767.162 2279.24 768.106 cv
2277.2 769.049 2275.17 769.993 2273.43 769.993 cv
2273.12 769.993 2272.82 769.963 2272.53 769.897 cv
2268.64 769.012 2264.99 767.408 2260.95 766.959 cv
2260.78 766.94 2260.62 766.931 2260.45 766.931 cv
2256.67 766.931 2252.91 771.53 2249.01 771.53 cv
2245.24 771.53 2241.81 769.152 2238.19 769.152 cv
2237.9 769.152 2237.61 769.167 2237.32 769.2 cv
2233.28 769.649 2229.59 769.957 2225.71 770.84 cv
2221.75 771.739 2218.99 775.018 2215.21 776.337 cv
2214.94 776.431 2214.65 776.475 2214.35 776.475 cv
2212.51 776.475 2210.03 774.939 2207.56 773.404 cv
2205.08 771.868 2202.61 770.332 2200.79 770.332 cv
2200.4 770.332 2200.04 770.403 2199.71 770.56 cv
2196.08 772.313 2193.17 776.517 2189.78 778.654 cv
2186.37 780.802 2185.1 786.33 2181.96 788.836 cv
2181.85 788.924 2181.74 789.009 2181.63 789.093 cv
2179.56 786.483 2177.5 783.888 2175.44 781.328 cv
2175.22 781.063 2175.01 780.799 2174.8 780.535 cv
2176.79 777.271 2176.05 770.073 2178.98 768.114 cv
2179.34 767.871 2179.79 767.765 2180.29 767.765 cv
2182.1 767.765 2184.72 769.11 2187.33 770.455 cv
2189.95 771.801 2192.57 773.147 2194.38 773.147 cv
2194.82 773.147 2195.22 773.067 2195.55 772.888 cv
2199 771.042 2201.43 768.336 2205.07 766.827 cv
2208.68 765.331 2209.37 755.843 2213.15 754.699 cv
2216.88 753.568 2221.15 753.117 2225.03 752.35 cv
2226.39 752.08 2227.81 751.901 2229.25 751.765 cv
2231.84 751.522 2234.49 751.417 2237.02 751.17 cv
2237.17 751.155 2237.33 751.148 2237.48 751.148 cv
2241.22 751.148 2245.2 755.343 2249.01 755.343 cv
2252.81 755.343 2256.75 751.433 2260.48 751.433 cv
2260.64 751.433 2260.81 751.44 2260.97 751.456 cv
2264.91 751.839 2267.69 759.088 2271.51 759.844 cv
2271.82 759.905 2272.13 759.933 2272.45 759.933 cv
2273.62 759.933 2274.86 759.567 2276.12 759.098 cv
2276.62 758.911 2277.13 758.707 2277.63 758.504 cv
2279.41 757.79 2281.17 757.075 2282.78 757.075 cv
2283.23 757.075 2283.67 757.131 2284.09 757.259 cv
2287.87 758.403 2291.92 759.107 2295.53 760.602 cv
2299.17 762.111 2301.57 766.276 2305.02 768.122 cv
2307.23 769.307 2309.88 769.771 2312.35 770.516 cv
2313.75 770.94 2315.1 771.454 2316.27 772.244 cv
2319.54 774.431 2320.03 780.198 2323.05 782.685 cv
2326.09 785.179 2331.5 784.873 2334.28 787.648 cv
2336.35 789.723 2336.76 793.23 2337.87 796.137 cv
2338.25 797.117 2338.7 798.029 2339.33 798.794 cv
2341.82 801.823 2349.63 800.957 2351.81 804.223 cv
2352.57 805.353 2352.98 806.72 2353.28 808.168 cv
2353.83 810.891 2353.97 813.901 2355.19 816.165 cv
2357.03 819.613 2358.85 823.152 2360.36 826.792 cv
2361.86 830.4 2367.61 832.815 2368.76 836.592 cv
2368.91 837.113 2369.04 837.65 2369.15 838.2 cv
2369.82 841.589 2369.68 845.448 2370.34 848.784 cv
2370.63 850.26 2370.63 851.827 2370.55 853.421 cv
2370.42 855.952 2370.07 858.552 2370.3 860.969 cv
2370.52 863.242 2370.91 865.599 2371.2 867.962 cv
2370.59 867.979 2369.98 867.997 2369.37 868.015 cv
2363.59 868.191 2358.08 868.426 2353.01 868.699 cv
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tj
r:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0g
pAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'as8;Tjr:^0gpAb'a
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8;TjqtC'ep&Fp]s82Efqssd`o)JRUs8)3aq<n:YmJm"KrqYmZq!%eQkl1>=rqGORpZ2>Iir8Z1rq>7K
p"fW?h#?s"rq+nCo[j*6f)G9jrpnP:o$RF+ci*CYrUJ,1nB1_!aSkSIrU7`(m_f"k_>Wc9rU%>tm(E;`
])Cs)r9LfhlEpKSZM`skr9:B^kcF^GX8M.Zr9(!Uk+qq;U\s5Ir8jOIjIQ2/Reu-4qr=">ifs?"P5F4"
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~qtp9fqtg0cqYL'bqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XUXp\4FVp\4CT
p@e4Rp@e4Rp@e1Pp%A"Np%A"Np%@tLo^qeJo^qbHoCMSFoCMSFoCMSEo()ABo()AAnaZ/>naZ/=nF5r:
nF5r:nF5r9n*f`6n*f`5mdBN2mdBN1mHs<.mHs<-m-O**m-O*)lg*m&lg*m%lK[["lK[["l07Hsl07Hs
kih6okih6okND$kkND$kk2tggk2tggjlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[io8tWio8tWiSibSiSibS
~>
<~p%A"Np%A"Np%7nKo^h\GoCDJCo'u8?naZ/>nF5o8n*f]4mdBK0mHs9,m-O'(lg*j$l07Eqkih3mk2tde
jlPRajQ,@]io8qUiSi_Qhr!;Ih;-lAgt^Z=g=k65g"G$1f@SX*f%/F&e^W*te'ldoda?Ihd*L%`cHXVX
bfn;SbK@uLaiMQDa2Z-<`Pog7`5BL0_SO((^q[Xu^:q=p]tD"i]=PSa\[]/Y\$i`R[C*BKZa6sCZ*CO;
YHP+3Xf\\+X/i;%Wi;trVl-GjVPU,bUSFTZU8"?TTV%jJSXl=BS=H(;R@0G0Q^=#(Q'ISuPEV/mOcb`e
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
2249.01 985.837 mo
2244.94 985.837 2241.09 978.679 2237.14 978.238 cv
2233.1 977.788 2229.35 976.931 2225.47 976.047 cv
2221.51 975.148 2218.2 973.065 2214.43 971.746 cv
2213.37 971.375 2212.21 971.267 2211.01 971.267 cv
2210.17 971.267 2209.31 971.32 2208.45 971.374 cv
2207.59 971.427 2206.74 971.48 2205.9 971.48 cv
2204.47 971.48 2203.1 971.324 2201.9 970.744 cv
2198.26 968.991 2195.6 965.464 2192.2 963.326 cv
2188.79 961.18 2186.86 957.287 2183.73 954.781 cv
2182.43 953.745 2180.3 953.61 2178.05 953.61 cv
2177.65 953.61 2177.25 953.614 2176.85 953.619 cv
2176.46 953.623 2176.06 953.627 2175.66 953.627 cv
2173.24 953.627 2170.97 953.473 2169.71 952.213 cv
2166.87 949.37 2166.54 943.832 2164.02 940.685 cv
2161.52 937.547 2158.38 934.62 2156.23 931.208 cv
2154.1 927.815 2157.11 921.645 2155.36 918.01 cv
2153.62 914.404 2146.05 913.226 2144.71 909.41 cv
2143.39 905.637 2139.58 902.045 2138.68 898.094 cv
2137.79 894.205 2144.64 888.765 2144.19 884.73 cv
2143.76 880.851 2135.77 877.129 2135.47 873.144 cv
2135.47 873.068 2135.46 872.992 2135.46 872.915 cv
2135.46 872.718 2135.47 872.519 2135.47 872.32 cv
2135.63 868.407 2137.28 864.138 2137.7 860.378 cv
2138.15 856.341 2144.55 853.16 2145.43 849.271 cv
2146.33 845.32 2141.79 839.63 2143.11 835.858 cv
2144.44 832.041 2144.89 827.216 2146.63 823.609 cv
2148.39 819.974 2157.41 820.1 2159.55 816.706 cv
2161.7 813.296 2158.37 805.763 2160.87 802.623 cv
2163.38 799.478 2168.29 797.884 2171.14 795.042 cv
2172.29 793.886 2173.78 793.06 2175.34 792.318 cv
2177.28 794.82 2179.24 797.328 2181.19 799.838 cv
2184.95 804.604 2188.7 809.379 2192.45 814.035 cv
2196.18 818.706 2199.9 823.264 2203.51 827.667 cv
2204.54 828.929 2205.57 830.175 2206.59 831.404 cv
2195.25 842.12 2188.17 857.301 2188.17 874.132 cv
2188.17 906.596 2214.49 932.913 2246.95 932.913 cv
2279.42 932.913 2305.73 906.596 2305.73 874.132 cv
2305.73 841.67 2279.42 815.353 2246.95 815.353 cv
2233.48 815.353 2221.06 819.889 2211.14 827.517 cv
2210.24 826.299 2209.33 825.071 2208.4 823.837 cv
2204.98 819.28 2201.44 814.58 2197.8 809.845 cv
2194.17 805.093 2190.43 800.31 2186.7 795.52 cv
2185.01 793.375 2183.32 791.229 2181.63 789.093 cv
2181.74 789.009 2181.85 788.924 2181.96 788.836 cv
2185.1 786.33 2186.37 780.802 2189.78 778.654 cv
2193.17 776.517 2196.08 772.313 2199.71 770.56 cv
2200.04 770.403 2200.4 770.332 2200.79 770.332 cv
2202.61 770.332 2205.08 771.868 2207.56 773.404 cv
2210.03 774.939 2212.51 776.475 2214.35 776.475 cv
2214.65 776.475 2214.94 776.431 2215.21 776.337 cv
2218.99 775.018 2221.75 771.739 2225.71 770.84 cv
2229.59 769.957 2233.28 769.649 2237.32 769.2 cv
2237.61 769.167 2237.9 769.152 2238.19 769.152 cv
2241.81 769.152 2245.24 771.53 2249.01 771.53 cv
2252.91 771.53 2256.67 766.931 2260.45 766.931 cv
2260.62 766.931 2260.78 766.94 2260.95 766.959 cv
2264.99 767.408 2268.64 769.012 2272.53 769.897 cv
2272.82 769.963 2273.12 769.993 2273.43 769.993 cv
2275.17 769.993 2277.2 769.049 2279.24 768.106 cv
2281.27 767.162 2283.29 766.219 2285.02 766.219 cv
2285.46 766.219 2285.88 766.28 2286.27 766.419 cv
2290.09 767.754 2289.47 779.66 2293.07 781.4 cv
2293.74 781.721 2294.51 781.845 2295.33 781.845 cv
2296.69 781.845 2298.21 781.514 2299.72 781.183 cv
2301.24 780.853 2302.75 780.523 2304.1 780.523 cv
2305.06 780.523 2305.94 780.692 2306.67 781.152 cv
2310.08 783.3 2309.15 791.055 2312.29 793.561 cv
2312.96 794.101 2313.94 794.295 2315.09 794.295 cv
2316.56 794.295 2318.3 793.98 2320.04 793.664 cv
2321.79 793.348 2323.53 793.032 2324.99 793.032 cv
2326.26 793.032 2327.31 793.267 2327.98 793.94 cv
2330.83 796.783 2327.23 805.393 2329.74 808.538 cv
2332.25 811.676 2334.64 814.355 2336.79 817.765 cv
2338.93 821.159 2341.53 823.884 2343.28 827.521 cv
2345.02 831.126 2343.89 835.432 2345.23 839.247 cv
2346.54 843.019 2349.33 845.856 2350.23 849.808 cv
2351.11 853.696 2355.08 856.874 2355.53 860.911 cv
2355.82 863.49 2354.18 866.08 2353.01 868.699 cv
2350.71 868.823 2348.5 868.955 2346.4 869.092 cv
2339.68 869.526 2334.08 870.019 2330.16 870.424 cv
2328.2 870.603 2326.66 870.808 2325.61 870.92 cv
2324.56 871.051 2324 871.121 2324 871.121 cv
2324 871.121 2324.56 871.191 2325.61 871.322 cv
2326.66 871.434 2328.2 871.638 2330.16 871.817 cv
2334.08 872.222 2339.68 872.715 2346.4 873.149 cv
2348.17 873.264 2350 873.374 2351.91 873.48 cv
2352.08 877.336 2353.95 880.926 2353.53 884.696 cv
2353.08 888.732 2359.17 893.967 2358.29 897.855 cv
2357.39 901.807 2356.42 906.266 2355.1 910.038 cv
2353.76 913.854 2342.48 913.481 2340.74 917.087 cv
2338.99 920.723 2340.3 925.539 2338.17 928.933 cv
2336.02 932.344 2330.48 932.747 2327.98 935.886 cv
2325.47 939.032 2331.97 950.188 2329.12 953.032 cv
2326.28 955.875 2320.82 956.504 2317.67 959.015 cv
2316.94 959.597 2315.96 959.803 2314.83 959.803 cv
2313.47 959.803 2311.9 959.502 2310.32 959.2 cv
2308.75 958.9 2307.18 958.598 2305.81 958.598 cv
2304.81 958.598 2303.92 958.76 2303.22 959.203 cv
2299.82 961.339 2301.52 972.649 2297.88 974.402 cv
2297.16 974.752 2296.33 974.886 2295.44 974.886 cv
2294.03 974.886 2292.46 974.552 2290.89 974.219 cv
2289.33 973.886 2287.76 973.553 2286.34 973.553 cv
2285.63 973.553 2284.95 973.639 2284.33 973.856 cv
2280.56 975.175 2278.16 982.446 2274.21 983.345 cv
2274.03 983.385 2273.85 983.404 2273.66 983.404 cv
2271.78 983.404 2269.54 981.425 2267.29 979.445 cv
2265.04 977.466 2262.78 975.486 2260.87 975.486 cv
2260.77 975.486 2260.67 975.491 2260.57 975.502 cv
2256.62 975.943 2253.08 985.837 2249.01 985.837 cv
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
2395.7 874.617 mo
2391.21 874.599 2386.73 874.593 2382.32 874.515 cv
2381.22 874.502 2380.13 874.485 2379.03 874.465 cv
2376.46 874.418 2373.91 874.354 2371.41 874.283 cv
2370.73 874.264 2370.05 874.244 2369.37 874.224 cv
2363.17 874.036 2357.27 873.778 2351.91 873.48 cv
2350 873.374 2348.17 873.264 2346.4 873.149 cv
2339.68 872.715 2334.08 872.222 2330.16 871.817 cv
2328.2 871.638 2326.66 871.434 2325.61 871.322 cv
2324.56 871.191 2324 871.121 2324 871.121 cv
2324 871.121 2324.56 871.051 2325.61 870.92 cv
2326.66 870.808 2328.2 870.603 2330.16 870.424 cv
2334.08 870.019 2339.68 869.526 2346.4 869.092 cv
2348.5 868.955 2350.71 868.823 2353.01 868.699 cv
2358.08 868.426 2363.59 868.191 2369.37 868.015 cv
2369.98 867.997 2370.59 867.979 2371.2 867.962 cv
2374.83 867.858 2378.55 867.768 2382.32 867.724 cv
2386.72 867.646 2391.19 867.64 2395.65 867.62 cv
2395.75 869.779 2395.79 871.95 2395.79 874.132 cv
2395.79 874.293 2395.79 874.457 2395.79 874.617 cv
2395.76 874.617 2395.73 874.617 2395.7 874.617 cv
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8Dor
rVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccp
rVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuip
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8DorrVccorVufos8;iqr;HZnrVufns82`oqu$Kkr;ZZls82]nqYU<hqu?Nis8)TlqYL6fqZ$Bfs7uKj
q"asbq>^6bs7lBhp\=d_q#C*_s7c9fp@nU\pAaj[s7Q*cp%A@Xp&F[Ws7Gs`o^r1Uo`+OTs7>j^oCN"Q
oDeCPs75a\nac_Mnc/.Ls7#OXnF6JInGhtGs6oFVn*g;Emf2_Cs6f=TmHsr@mJlP>s6T+Pm-Oc<li6;:
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~r;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtp6dqYL'bqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^
q>'j^q>'j^q>'g\q"XXZq"XXZq"XUXp\4FVp\4FVp\4FVp\4FUp@e4Rp@e4Rp@e4Rp@e4Qp%A"Np%A"N
p%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSEo()ABo()ABo()AAnaZ/>naZ/>naZ/>nF5r:nF5r:
nF5r:n*f`6n*f`6n*f`6mdBN2mdBN2mdBN2mHs<.mHs<.mHs<.m-O**m-O**lg*m&lg*m&lg*m&lK[["
~>
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9fqtp9fqtp6dqYL'bqYL'bqYL'b
qYL$`q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XUXp\4FVp\4FVp\4FVp\4FUp@e4Rp@e4Rp@e4Qp%A"N
p%A"Np%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSEo()ABo()ABo()AAnaZ/>naZ/>naZ/>nF5r:
nF5r:n*f`6n*f`6n*f`6mdBN2mdBN2mdBN2mHs<.mHs<.mHs<.m-O**m-O**lg*m&lg*m&lg*m&lK[["
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
2206.59 831.404 mo
2205.57 830.175 2204.54 828.929 2203.51 827.667 cv
2199.9 823.264 2196.18 818.706 2192.45 814.035 cv
2188.7 809.379 2184.95 804.604 2181.19 799.838 cv
2179.24 797.328 2177.28 794.82 2175.34 792.318 cv
2173.58 790.043 2171.83 787.773 2170.1 785.511 cv
2169.84 785.178 2169.59 784.846 2169.33 784.513 cv
2165.96 780.112 2162.67 775.756 2159.5 771.515 cv
2156.59 767.649 2153.82 763.849 2151.16 760.209 cv
2152.53 759.058 2153.92 757.931 2155.33 756.83 cv
2158.24 760.302 2161.29 763.923 2164.37 767.696 cv
2167.78 771.846 2171.28 776.143 2174.8 780.535 cv
2175.01 780.799 2175.22 781.063 2175.44 781.328 cv
2177.5 783.888 2179.56 786.483 2181.63 789.093 cv
2183.32 791.229 2185.01 793.375 2186.7 795.52 cv
2190.43 800.31 2194.17 805.093 2197.8 809.845 cv
2201.44 814.58 2204.98 819.28 2208.4 823.837 cv
2209.33 825.071 2210.24 826.299 2211.14 827.517 cv
2209.56 828.736 2208.04 830.033 2206.59 831.404 cv
level3{
gsave
clp
[148.841 0 0 148.841 2246.95 874.133 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[148.841 0 0 148.841 2246.95 874.133 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
2305.73 874.132 mo
2305.73 906.596 2279.42 932.913 2246.95 932.913 cv
2214.49 932.913 2188.17 906.596 2188.17 874.132 cv
2188.17 841.67 2214.49 815.353 2246.95 815.353 cv
2279.42 815.353 2305.73 841.67 2305.73 874.132 cv
.984314 .423529 .690196 rgb
f
2246.95 919.229 mo
2222.05 919.229 2201.86 899.039 2201.86 874.132 cv
2201.86 849.227 2222.05 829.037 2246.95 829.037 cv
2271.86 829.037 2292.05 849.227 2292.05 874.132 cv
2292.05 899.039 2271.86 919.229 2246.95 919.229 cv
2246.95 842.716 mo
2229.6 842.716 2215.54 856.782 2215.54 874.132 cv
2215.54 891.484 2229.6 905.55 2246.95 905.55 cv
2264.31 905.55 2278.37 891.484 2278.37 874.132 cv
2278.37 856.782 2264.31 842.716 2246.95 842.716 cv
.988235 .498039 .756863 rgb
f
2246.95 905.55 mo
2229.6 905.55 2215.54 891.484 2215.54 874.132 cv
2215.54 856.782 2229.6 842.716 2246.95 842.716 cv
2264.31 842.716 2278.37 856.782 2278.37 874.132 cv
2278.37 891.484 2264.31 905.55 2246.95 905.55 cv
2246.95 856.064 mo
2236.97 856.064 2228.89 864.153 2228.89 874.132 cv
2228.89 884.112 2236.97 892.201 2246.95 892.201 cv
2256.93 892.201 2265.02 884.112 2265.02 874.132 cv
2265.02 864.153 2256.93 856.064 2246.95 856.064 cv
.992157 .560784 .807843 rgb
f
2246.95 892.201 mo
2236.97 892.201 2228.89 884.112 2228.89 874.132 cv
2228.89 864.153 2236.97 856.064 2246.95 856.064 cv
2256.93 856.064 2265.02 864.153 2265.02 874.132 cv
2265.02 884.112 2256.93 892.201 2246.95 892.201 cv
.996078 .615686 .847059 rgb
f
2401.73 1200.36 mo
2273.95 980.149 li
2237.14 1165.01 li
2227.44 928.303 li
2095.94 1098.01 li
2189.16 912.263 li
2043.89 936.293 li
2145.14 880.649 li
1971.03 808.058 li
2159.87 832.15 li
2012.66 584.046 li
2195.93 764.444 li
2190.85 607.881 li
2244.01 807.063 li
2380.31 603.509 li
2287.71 831.049 li
2408.35 747.076 li
2320.01 845.085 li
2460.77 825.38 li
2317.43 869.93 li
2443.57 968.661 li
2315.39 947.314 li
2401.73 1200.36 li
cp
2365.34 878.719 mo
2733 764.444 li
2378.4 814.073 li
2556.77 616.203 li
2337.42 768.891 li
2484.71 406.965 li
2252.98 753.001 li
2181.11 483.686 li
2159.87 686.577 li
1918.21 468.248 li
2096.78 771.454 li
1881.39 795.183 li
2093.09 883.438 li
1917.06 980.179 li
2149.02 941.826 li
1971.53 1295.49 li
2207.38 991.109 li
2221.12 1326.56 li
2284.85 1064.5 li
2480.05 1359.93 li
2349.01 975.838 li
2527.39 1005.55 li
2365.34 878.719 li
cp
.984314 .882353 .564706 rgb
f
2230.91 842.225 mo
2230.91 850.354 2224.32 856.944 2216.19 856.944 cv
2208.06 856.944 2201.47 850.354 2201.47 842.225 cv
2201.47 834.097 2208.06 827.507 2216.19 827.507 cv
2224.32 827.507 2230.91 834.097 2230.91 842.225 cv
cp
1 .921569 .921569 rgb
f
2255.37 843.809 mo
2255.37 847.469 2252.41 850.437 2248.75 850.437 cv
2245.09 850.437 2242.12 847.469 2242.12 843.809 cv
2242.12 840.149 2245.09 837.181 2248.75 837.181 cv
2252.41 837.181 2255.37 840.149 2255.37 843.809 cv
cp
f
2299.26 963.729 mo
2299.26 967.708 2296.03 970.935 2292.05 970.935 cv
2288.07 970.935 2284.84 967.708 2284.84 963.729 cv
2284.84 959.749 2288.07 956.522 2292.05 956.522 cv
2296.03 956.522 2299.26 959.749 2299.26 963.729 cv
cp
f
2155.32 987.962 mo
2155.32 989.703 2153.91 991.113 2152.17 991.113 cv
2150.43 991.113 2149.02 989.703 2149.02 987.962 cv
2149.02 986.222 2150.43 984.811 2152.17 984.811 cv
2153.91 984.811 2155.32 986.222 2155.32 987.962 cv
cp
f
2117.09 856.177 mo
2117.09 859.345 2114.52 861.913 2111.35 861.913 cv
2108.18 861.913 2105.61 859.345 2105.61 856.177 cv
2105.61 853.009 2108.18 850.44 2111.35 850.44 cv
2114.52 850.44 2117.09 853.009 2117.09 856.177 cv
cp
f
2318.42 721.225 mo
2318.42 724.728 2315.58 727.567 2312.08 727.567 cv
2308.57 727.567 2305.73 724.728 2305.73 721.225 cv
2305.73 717.723 2308.57 714.884 2312.08 714.884 cv
2315.58 714.884 2318.42 717.723 2318.42 721.225 cv
cp
f
2251.32 919.889 mo
2251.32 923.995 2247.99 927.323 2243.88 927.323 cv
2239.78 927.323 2236.45 923.995 2236.45 919.889 cv
2236.45 915.783 2239.78 912.455 2243.88 912.455 cv
2247.99 912.455 2251.32 915.783 2251.32 919.889 cv
cp
f
1916.3 775.341 mo
1916.3 778.9 1913.41 781.784 1909.85 781.784 cv
1906.3 781.784 1903.41 778.9 1903.41 775.341 cv
1903.41 771.783 1906.3 768.899 1909.85 768.899 cv
1913.41 768.899 1916.3 771.783 1916.3 775.341 cv
cp
f
2152.69 609.514 mo
2152.69 613.208 2149.7 616.203 2146 616.203 cv
2142.31 616.203 2139.31 613.208 2139.31 609.514 cv
2139.31 605.82 2142.31 602.825 2146 602.825 cv
2149.7 602.825 2152.69 605.82 2152.69 609.514 cv
cp
f
2452.93 1170.7 mo
2452.93 1176.72 2448.04 1181.61 2442.02 1181.61 cv
2436 1181.61 2431.12 1176.72 2431.12 1170.7 cv
2431.12 1164.68 2436 1159.79 2442.02 1159.79 cv
2448.04 1159.79 2452.93 1164.68 2452.93 1170.7 cv
cp
f
2578.09 839.736 mo
2578.09 845.646 2573.3 850.437 2567.39 850.437 cv
2561.48 850.437 2556.69 845.646 2556.69 839.736 cv
2556.69 833.827 2561.48 829.036 2567.39 829.036 cv
2573.3 829.036 2578.09 833.827 2578.09 839.736 cv
cp
f
2024.41 1111.57 mo
2024.41 1113.33 2022.99 1114.76 2021.23 1114.76 cv
2019.47 1114.76 2018.04 1113.33 2018.04 1111.57 cv
2018.04 1109.81 2019.47 1108.39 2021.23 1108.39 cv
2022.99 1108.39 2024.41 1109.81 2024.41 1111.57 cv
cp
f
2380.61 697.537 mo
2380.61 697.537 2380.32 698.039 2379.78 698.98 cv
2379.22 699.91 2378.43 701.298 2377.36 703.016 cv
2375.26 706.479 2372.19 711.377 2368.39 717.159 cv
2364.59 722.944 2360.05 729.617 2355.06 736.674 cv
2352.58 740.205 2349.98 743.835 2347.3 747.494 cv
2344.64 751.166 2341.88 754.854 2339.13 758.547 cv
2336.35 762.218 2333.57 765.896 2330.79 769.473 cv
2328.02 773.066 2325.25 776.564 2322.55 779.94 cv
2317.16 786.691 2312.01 792.904 2307.51 798.163 cv
2303.01 803.425 2299.16 807.731 2296.41 810.709 cv
2295.06 812.212 2293.94 813.355 2293.21 814.151 cv
2292.45 814.935 2292.05 815.353 2292.05 815.353 cv
2292.05 815.353 2292.34 814.85 2292.88 813.909 cv
2293.44 812.979 2294.23 811.59 2295.3 809.872 cv
2297.4 806.407 2300.46 801.508 2304.27 795.725 cv
2308.07 789.939 2312.61 783.266 2317.59 776.21 cv
2320.09 772.683 2322.67 769.048 2325.36 765.393 cv
2328.02 761.721 2330.78 758.036 2333.53 754.343 cv
2336.32 750.673 2339.09 746.997 2341.88 743.42 cv
2344.65 739.831 2347.42 736.328 2350.12 732.955 cv
2355.51 726.206 2360.66 719.993 2365.16 714.733 cv
2369.66 709.47 2373.51 705.163 2376.25 702.183 cv
2377.61 700.679 2378.72 699.536 2379.46 698.74 cv
2380.21 697.956 2380.61 697.537 2380.61 697.537 cv
cp
f
2183.95 1108.39 mo
2183.95 1108.39 2184.03 1107.72 2184.17 1106.47 cv
2184.34 1105.23 2184.55 1103.39 2184.89 1101.08 cv
2185.22 1098.76 2185.6 1095.94 2186.12 1092.72 cv
2186.62 1089.5 2187.18 1085.87 2187.88 1081.92 cv
2188.55 1077.97 2189.27 1073.69 2190.14 1069.18 cv
2190.98 1064.67 2191.84 1059.91 2192.84 1055 cv
2193.81 1050.09 2194.85 1045.03 2195.95 1039.89 cv
2197.03 1034.75 2198.2 1029.54 2199.35 1024.33 cv
2200.55 1019.13 2201.73 1013.93 2202.96 1008.82 cv
2204.17 1003.71 2205.42 998.693 2206.65 993.84 cv
2207.86 988.985 2209.13 984.313 2210.31 979.879 cv
2211.47 975.439 2212.65 971.26 2213.74 967.405 cv
2214.81 963.544 2215.87 960.021 2216.81 956.899 cv
2217.72 953.772 2218.59 951.062 2219.29 948.826 cv
2219.98 946.589 2220.58 944.844 2220.97 943.649 cv
2221.37 942.458 2221.59 941.823 2221.59 941.823 cv
2221.59 941.823 2221.51 942.489 2221.36 943.738 cv
2221.19 944.982 2220.99 946.817 2220.65 949.133 cv
2220.32 951.453 2219.94 954.273 2219.42 957.489 cv
2218.92 960.711 2218.36 964.345 2217.67 968.291 cv
2217 972.244 2216.27 976.524 2215.4 981.03 cv
2214.57 985.542 2213.7 990.304 2212.7 995.209 cv
2211.72 1000.12 2210.7 1005.18 2209.59 1010.32 cv
2208.51 1015.46 2207.34 1020.67 2206.18 1025.88 cv
2204.98 1031.08 2203.8 1036.28 2202.56 1041.39 cv
2201.35 1046.5 2200.11 1051.52 2198.87 1056.37 cv
2197.66 1061.22 2196.39 1065.89 2195.22 1070.33 cv
2194.06 1074.77 2192.87 1078.95 2191.78 1082.8 cv
2190.71 1086.66 2189.65 1090.19 2188.72 1093.31 cv
2187.81 1096.44 2186.94 1099.15 2186.24 1101.38 cv
2185.55 1103.62 2184.95 1105.36 2184.56 1106.56 cv
2184.16 1107.75 2183.95 1108.39 2183.95 1108.39 cv
cp
f
2070.91 941.823 mo
2070.91 941.823 2071.23 941.617 2071.83 941.23 cv
2072.44 940.862 2073.32 940.283 2074.47 939.623 cv
2076.75 938.259 2080.04 936.386 2084.05 934.286 cv
2088.06 932.181 2092.78 929.843 2097.89 927.48 cv
2100.45 926.296 2103.1 925.1 2105.82 923.93 cv
2108.52 922.742 2111.3 921.598 2114.07 920.446 cv
2116.86 919.33 2119.64 918.202 2122.41 917.159 cv
2125.17 916.091 2127.9 915.099 2130.56 914.152 cv
2135.87 912.263 2140.88 910.633 2145.21 909.339 cv
2149.54 908.04 2153.21 907.08 2155.79 906.463 cv
2157.08 906.133 2158.11 905.933 2158.8 905.771 cv
2159.5 905.626 2159.88 905.55 2159.88 905.55 cv
2159.88 905.55 2159.56 905.756 2158.95 906.143 cv
2158.35 906.512 2157.47 907.091 2156.32 907.753 cv
2154.04 909.12 2150.75 910.994 2146.74 913.096 cv
2142.74 915.202 2138.02 917.54 2132.9 919.901 cv
2130.34 921.08 2127.69 922.284 2124.97 923.447 cv
2122.27 924.636 2119.49 925.775 2116.72 926.926 cv
2113.93 928.041 2111.14 929.165 2108.38 930.208 cv
2105.62 931.27 2102.89 932.271 2100.23 933.212 cv
2094.92 935.099 2089.91 936.729 2085.57 938.025 cv
2081.24 939.325 2077.58 940.286 2075 940.905 cv
2073.71 941.237 2072.68 941.438 2071.99 941.601 cv
2071.29 941.746 2070.91 941.823 2070.91 941.823 cv
cp
f
2125.47 761.635 mo
2134.58 798.174 2112.35 835.181 2075.81 844.293 cv
2039.27 853.404 2002.26 831.17 1993.15 794.631 cv
1984.04 758.092 2006.28 721.084 2042.81 711.973 cv
2079.35 702.861 2116.36 725.096 2125.47 761.635 cv
cp
1 .752941 .866667 rgb
f
2075.81 844.286 mo
2039.26 853.406 2002.27 831.17 1993.15 794.626 cv
1992.6 792.47 1992.18 790.314 1991.87 788.158 cv
2003.75 820.345 2038.22 839.084 2072.3 830.597 cv
2106.67 822.034 2128.38 788.761 2123.24 754.418 cv
2124.11 756.755 2124.85 759.167 2125.47 761.64 cv
2134.59 798.169 2112.35 835.18 2075.81 844.286 cv
cp
1 .4 .686275 rgb
f
2251.43 642.232 mo
2258.37 670.082 2241.43 698.288 2213.58 705.232 cv
2185.73 712.177 2157.52 695.23 2150.58 667.381 cv
2143.63 639.532 2160.58 611.326 2188.43 604.381 cv
2216.28 597.437 2244.48 614.383 2251.43 642.232 cv
cp
1 .752941 .866667 rgb
f
2241.83 654.81 mo
2241.63 653.093 2241.32 651.375 2240.89 649.658 cv
2235.39 627.631 2213.08 614.226 2191.05 619.724 cv
2174 623.97 2162.1 638.316 2160.16 654.822 cv
2157.76 634.548 2170.74 615.18 2191.05 610.124 cv
2213.08 604.626 2235.39 618.031 2240.89 640.07 cv
2242.13 645.031 2242.41 650.016 2241.83 654.81 cv
cp
1 .921569 .921569 rgb
f
2213.57 705.226 mo
2195.18 709.809 2176.64 703.99 2164.17 691.477 cv
2175.76 698.864 2190.25 701.653 2204.65 698.065 cv
2232.49 691.13 2249.44 662.923 2242.49 635.063 cv
2240.14 625.61 2235.33 617.409 2228.89 610.972 cv
2239.74 617.861 2248.07 628.776 2251.43 642.239 cv
2258.38 670.084 2241.43 698.291 2213.57 705.226 cv
cp
1 .4 .686275 rgb
f
2167.32 671.753 mo
2180.6 724.999 2148.2 778.927 2094.95 792.204 cv
2041.71 805.482 1987.78 773.082 1974.5 719.836 cv
1961.22 666.59 1993.62 612.663 2046.87 599.385 cv
2100.12 586.107 2154.04 618.508 2167.32 671.753 cv
cp
1 .752941 .866667 rgb
f
2126.87 636.465 mo
2110.97 629.424 2092.66 627.419 2074.47 631.957 cv
2031.02 642.797 2004.58 686.788 2015.41 730.237 cv
2019.56 746.835 2028.53 760.946 2040.47 771.454 cv
2018.38 761.67 2000.9 742.162 1994.59 716.91 cv
1983.76 673.461 2010.2 629.47 2053.65 618.63 cv
2080.5 611.936 2107.56 619.474 2126.87 636.465 cv
cp
1 .921569 .921569 rgb
f
2458.25 656.317 mo
2458.25 700.415 2422.5 736.163 2378.4 736.163 cv
2334.31 736.163 2298.56 700.415 2298.56 656.317 cv
2298.56 612.22 2334.31 576.472 2378.4 576.472 cv
2422.5 576.472 2458.25 612.22 2458.25 656.317 cv
cp
1 .752941 .866667 rgb
f
2448.61 660.63 mo
2448.61 663.326 2448.45 665.986 2448.13 668.596 cv
2444.21 636.174 2416.59 611.049 2383.09 611.049 cv
2349.6 611.049 2321.98 636.174 2318.06 668.596 cv
2317.74 665.986 2317.57 663.326 2317.57 660.63 cv
2317.57 624.447 2346.9 595.117 2383.09 595.117 cv
2419.28 595.117 2448.61 624.447 2448.61 660.63 cv
cp
1 .921569 .921569 rgb
f
2420.34 724.267 mo
2408.16 731.805 2393.79 736.161 2378.4 736.161 cv
2334.3 736.161 2298.55 700.417 2298.55 656.32 cv
2298.55 620.198 2322.54 589.669 2355.47 579.825 cv
2332.73 593.891 2317.58 619.052 2317.58 647.757 cv
2317.58 691.854 2353.33 727.614 2397.42 727.614 cv
2405.38 727.614 2413.07 726.453 2420.34 724.267 cv
cp
1 .4 .686275 rgb
f
2536.22 696.844 mo
2536.22 727.86 2511.08 753.004 2480.06 753.004 cv
2449.04 753.004 2423.9 727.86 2423.9 696.844 cv
2423.9 665.828 2449.04 640.684 2480.06 640.684 cv
2511.08 640.684 2536.22 665.828 2536.22 696.844 cv
cp
1 .752941 .866667 rgb
f
2550.41 764.438 mo
2550.41 811.936 2511.9 850.44 2464.41 850.44 cv
2416.91 850.44 2378.4 811.936 2378.4 764.438 cv
2378.4 716.941 2416.91 678.437 2464.41 678.437 cv
2511.9 678.437 2550.41 716.941 2550.41 764.438 cv
cp
f
2518.24 831.486 mo
2503.51 843.351 2484.77 850.437 2464.4 850.437 cv
2416.92 850.437 2378.4 811.933 2378.4 764.444 cv
2378.4 730.659 2397.89 701.412 2426.23 687.361 cv
2406.62 703.1 2394.06 727.297 2394.06 754.418 cv
2394.06 801.922 2432.56 840.426 2480.05 840.426 cv
2493.77 840.426 2506.74 837.215 2518.24 831.486 cv
cp
1 .4 .686275 rgb
f
2424.72 956.522 mo
2424.72 989.317 2398.13 1015.9 2365.34 1015.9 cv
2332.54 1015.9 2305.96 989.317 2305.96 956.522 cv
2305.96 923.728 2332.54 897.143 2365.34 897.143 cv
2398.13 897.143 2424.72 923.728 2424.72 956.522 cv
cp
1 .752941 .866667 rgb
f
2319.01 958.455 mo
2319.01 985.999 2337.77 1009.16 2363.18 1015.86 cv
2331.39 1014.73 2305.96 988.592 2305.96 956.525 cv
2305.96 923.735 2332.55 897.142 2365.34 897.142 cv
2370.62 897.142 2375.74 897.835 2380.61 899.131 cv
2379.87 899.101 2379.13 899.086 2378.4 899.086 cv
2345.61 899.086 2319.01 925.665 2319.01 958.455 cv
cp
1 .4 .686275 rgb
f
2408.12 906.47 mo
2408.12 925.995 2392.3 941.823 2372.77 941.823 cv
2353.25 941.823 2337.42 925.995 2337.42 906.47 cv
2337.42 886.945 2353.25 871.118 2372.77 871.118 cv
2392.3 871.118 2408.12 886.945 2408.12 906.47 cv
cp
1 .752941 .866667 rgb
f
2407.15 898.242 mo
2400.75 889.272 2390.26 883.438 2378.4 883.438 cv
2358.87 883.438 2343.04 899.267 2343.04 918.791 cv
2343.04 921.64 2343.38 924.399 2344.02 927.037 cv
2339.86 921.248 2337.42 914.147 2337.42 906.473 cv
2337.42 886.95 2353.25 871.121 2372.77 871.121 cv
2389.46 871.121 2403.45 882.684 2407.15 898.242 cv
cp
1 .4 .686275 rgb
f
2265.02 1122.08 mo
2265.02 1176.82 2220.65 1221.19 2165.91 1221.19 cv
2111.18 1221.19 2066.8 1176.82 2066.8 1122.08 cv
2066.8 1067.35 2111.18 1022.97 2165.91 1022.97 cv
2220.65 1022.97 2265.02 1067.35 2265.02 1122.08 cv
cp
1 .752941 .866667 rgb
f
2265.03 1122.09 mo
2265.03 1125.51 2264.84 1128.89 2264.51 1132.22 cv
2259.4 1082.27 2217.22 1043.3 2165.92 1043.3 cv
2114.61 1043.3 2072.43 1082.27 2067.32 1132.22 cv
2066.99 1128.89 2066.81 1125.51 2066.81 1122.09 cv
2066.81 1067.35 2111.18 1022.98 2165.92 1022.98 cv
2220.66 1022.98 2265.03 1067.35 2265.03 1122.09 cv
cp
1 .4 .686275 rgb
f
2358.71 1096.84 mo
2358.71 1137.63 2325.64 1170.7 2284.84 1170.7 cv
2244.05 1170.7 2210.98 1137.63 2210.98 1096.84 cv
2210.98 1056.04 2244.05 1022.97 2284.84 1022.97 cv
2325.64 1022.97 2358.71 1056.04 2358.71 1096.84 cv
cp
1 .752941 .866667 rgb
f
2358.71 1096.84 mo
2358.71 1101.15 2358.35 1105.37 2357.64 1109.47 cv
2351.64 1074.67 2321.33 1048.22 2284.85 1048.22 cv
2248.35 1048.22 2218.05 1074.67 2212.06 1109.47 cv
2211.36 1105.37 2210.98 1101.15 2210.98 1096.84 cv
2210.98 1056.04 2244.06 1022.98 2284.85 1022.98 cv
2325.63 1022.98 2358.71 1056.04 2358.71 1096.84 cv
cp
1 .4 .686275 rgb
f
2319.75 1191.63 mo
2319.75 1224.29 2293.27 1250.77 2260.61 1250.77 cv
2227.95 1250.77 2201.47 1224.29 2201.47 1191.63 cv
2201.47 1158.97 2227.95 1132.49 2260.61 1132.49 cv
2293.27 1132.49 2319.75 1158.97 2319.75 1191.63 cv
cp
1 .752941 .866667 rgb
f
2307.34 1171.99 mo
2314.38 1199.92 2297.43 1228.28 2269.5 1235.32 cv
2247.77 1240.8 2225.79 1231.77 2213.79 1214.35 cv
2226.16 1224.66 2243.12 1229.1 2259.93 1224.87 cv
2287.87 1217.82 2304.8 1189.47 2297.76 1161.53 cv
2296.19 1155.3 2293.57 1149.63 2290.12 1144.64 cv
2298.33 1151.46 2304.53 1160.85 2307.34 1171.99 cv
cp
1 .921569 .921569 rgb
f
2117.09 934.918 mo
2117.09 965.954 2091.93 991.113 2060.89 991.113 cv
2029.85 991.113 2004.69 965.954 2004.69 934.918 cv
2004.69 903.882 2029.85 878.723 2060.89 878.723 cv
2091.93 878.723 2117.09 903.882 2117.09 934.918 cv
cp
1 .752941 .866667 rgb
f
2117.09 934.922 mo
2117.09 965.948 2091.92 991.109 2060.88 991.109 cv
2057.66 991.109 2054.49 990.838 2051.4 990.31 cv
2077.92 985.803 2098.11 962.722 2098.11 934.922 cv
2098.11 907.107 2077.92 884.026 2051.4 879.518 cv
2054.49 878.99 2057.66 878.719 2060.88 878.719 cv
2091.92 878.719 2117.09 903.88 2117.09 934.922 cv
cp
1 .4 .686275 rgb
f
2210.1 706.1 mo
2221.95 753.645 2193.02 801.799 2145.48 813.655 cv
2097.93 825.512 2049.78 796.58 2037.92 749.035 cv
2026.07 701.49 2055 653.335 2102.54 641.479 cv
2150.09 629.623 2198.24 658.555 2210.1 706.1 cv
cp
1 .752941 .866667 rgb
f
2145.47 813.651 mo
2107.65 823.089 2069.45 806.716 2049.44 775.69 cv
2070.64 794.852 2100.68 803.445 2130.49 796.013 cv
2178.04 784.163 2206.97 736.011 2195.1 688.462 cv
2192.68 678.738 2188.73 669.782 2183.59 661.807 cv
2196.2 673.22 2205.67 688.356 2210.1 706.1 cv
2221.95 753.65 2193.02 801.802 2145.47 813.651 cv
cp
1 .4 .686275 rgb
f
2527.39 700.907 mo
2527.39 719.107 2517.54 735.013 2502.88 743.583 cv
2511.25 734.734 2516.38 722.795 2516.38 709.662 cv
2516.38 682.361 2494.25 660.247 2466.96 660.247 cv
2457.86 660.247 2449.34 662.701 2442.02 667 cv
2451.03 657.448 2463.79 651.492 2477.96 651.492 cv
2505.26 651.492 2527.39 673.619 2527.39 700.907 cv
cp
1 .921569 .921569 rgb
f
2406.63 990.214 mo
2393.44 1005.64 2373.15 1011.41 2354.7 1006.85 cv
2369.69 1007.15 2384.68 1000.99 2395.19 988.706 cv
2413.8 966.938 2411.25 934.184 2389.48 915.567 cv
2383.14 910.14 2375.87 906.522 2368.28 904.639 cv
2379.87 904.865 2391.43 908.951 2400.93 917.074 cv
2422.7 935.692 2425.25 968.446 2406.63 990.214 cv
cp
f
2107.11 1086.35 mo
2103.31 1102 2104.48 1119.02 2111.61 1134.86 cv
2128.62 1172.7 2173.07 1189.59 2210.9 1172.57 cv
2225.35 1166.07 2236.75 1155.57 2244.37 1142.96 cv
2239.07 1164.71 2224.16 1183.85 2202.17 1193.74 cv
2164.33 1210.76 2119.89 1193.87 2102.87 1156.03 cv
2092.36 1132.65 2094.79 1106.74 2107.11 1086.35 cv
cp
f
2018.64 927.187 mo
2021.33 911.724 2032.56 899.878 2046.63 895.641 cv
2036.54 901.347 2029 911.364 2026.85 923.675 cv
2023.05 945.498 2037.67 966.281 2059.49 970.082 cv
2065.85 971.19 2072.11 970.73 2077.91 968.989 cv
2070.11 973.409 2060.8 975.252 2051.28 973.594 cv
2029.46 969.792 2014.84 949.01 2018.64 927.187 cv
cp
f
1130.1 961.365 mo
1009.52 955.707 li
1056.58 1146.19 li
952.173 1034.95 li
905.225 1152.7 li
882.927 969.355 li
753.818 1106.32 li
830.769 925.302 li
678.628 944.884 li
780.782 873.126 li
646.767 806.516 li
807.889 790.593 li
716.558 628.305 li
856.979 733.815 li
873.301 592.359 li
923.69 756.547 li
1063.04 572.992 li
999.158 770.748 li
1130.92 689.356 li
1035.77 811.128 li
1166.47 810.538 li
1024.11 868.908 li
1130.1 961.365 li
1 .933333 .721569 rgb
f
934.45 931.491 mo
912.599 1074.17 li
900.856 913.223 li
783.331 1064.9 li
874.206 896.237 li
736.813 920.357 li
850.691 871.748 li
728.06 823.135 li
865.537 841.924 li
766.614 686.541 li
895.064 811.438 li
882 703.363 li
924.052 807.869 li
1037.48 622.939 li
954.726 826.306 li
1062.55 751.248 li
976.503 837.704 li
1109.4 821.23 li
984.812 864.82 li
1055.18 928.398 li
965.046 905.11 li
1036.1 1100.05 li
934.45 931.491 li
1 .815686 .215686 rgb
f
866.465 741.557 mo
866.465 741.557 866.733 741.972 867.233 742.749 cv
867.717 743.535 868.464 744.67 869.339 746.149 cv
871.135 749.087 873.623 753.319 876.465 758.464 cv
879.313 763.607 882.518 769.66 885.813 776.21 cv
887.465 779.483 889.141 782.879 890.803 786.348 cv
892.482 789.811 894.125 793.357 895.776 796.899 cv
897.392 800.457 899.02 804.009 900.556 807.537 cv
902.117 811.054 903.595 814.541 905.012 817.921 cv
907.843 824.685 910.354 831.058 912.406 836.566 cv
914.462 842.072 916.056 846.717 917.116 849.993 cv
917.669 851.621 918.045 852.926 918.326 853.806 cv
918.589 854.692 918.73 855.165 918.73 855.165 cv
918.73 855.165 918.462 854.751 917.96 853.973 cv
917.476 853.188 916.729 852.053 915.851 850.574 cv
914.053 847.638 911.565 843.406 908.721 838.261 cv
905.872 833.12 902.667 827.067 899.373 820.516 cv
897.727 817.24 896.041 813.848 894.388 810.375 cv
892.708 806.914 891.069 803.366 889.419 799.824 cv
887.803 796.264 886.18 792.71 884.643 789.183 cv
883.089 785.663 881.602 782.18 880.191 778.797 cv
877.361 772.033 874.85 765.66 872.798 760.152 cv
870.74 754.646 869.145 750.003 868.082 746.727 cv
867.529 745.101 867.153 743.795 866.87 742.917 cv
866.606 742.03 866.465 741.557 866.465 741.557 cv
1 .921569 .921569 rgb
f
969.218 989.145 mo
969.218 989.145 968.998 988.748 968.583 988.004 cv
968.189 987.252 967.57 986.164 966.86 984.751 cv
965.395 981.942 963.381 977.9 961.112 972.996 cv
958.838 968.092 956.304 962.328 953.735 956.098 cv
952.447 952.984 951.144 949.757 949.866 946.46 cv
948.57 943.17 947.317 939.805 946.057 936.442 cv
944.831 933.065 943.594 929.693 942.446 926.349 cv
941.271 923.014 940.175 919.711 939.127 916.509 cv
937.036 910.102 935.221 904.073 933.769 898.868 cv
932.312 893.663 931.222 889.28 930.515 886.192 cv
930.139 884.656 929.904 883.426 929.718 882.597 cv
929.55 881.763 929.46 881.317 929.46 881.317 cv
929.46 881.317 929.68 881.714 930.096 882.459 cv
930.491 883.209 931.11 884.297 931.821 885.71 cv
933.289 888.518 935.305 892.559 937.575 897.463 cv
939.85 902.367 942.383 908.131 944.952 914.361 cv
946.235 917.477 947.546 920.701 948.817 924 cv
950.114 927.29 951.361 930.658 952.621 934.02 cv
953.846 937.397 955.078 940.77 956.227 944.115 cv
957.396 947.452 958.501 950.753 959.542 953.957 cv
961.631 960.364 963.446 966.392 964.9 971.598 cv
966.359 976.802 967.45 981.185 968.159 984.272 cv
968.536 985.808 968.772 987.037 968.959 987.865 cv
969.128 988.699 969.218 989.145 969.218 989.145 cv
f
974.016 760.487 mo
974.016 760.487 973.861 760.92 973.57 761.732 cv
973.263 762.534 972.849 763.73 972.25 765.214 cv
971.092 768.204 969.365 772.436 967.153 777.439 cv
964.946 782.445 962.259 788.224 959.246 794.343 cv
957.742 797.405 956.161 800.553 954.511 803.73 cv
952.88 806.916 951.161 810.12 949.452 813.328 cv
947.706 816.518 945.974 819.713 944.204 822.824 cv
942.458 825.948 940.683 828.994 938.954 831.933 cv
935.49 837.809 932.13 843.224 929.153 847.814 cv
926.18 852.406 923.587 856.17 921.718 858.777 cv
920.805 860.091 920.031 861.093 919.528 861.79 cv
919.007 862.477 918.73 862.843 918.73 862.843 cv
918.73 862.843 918.885 862.41 919.173 861.598 cv
919.48 860.795 919.895 859.599 920.493 858.114 cv
921.648 855.123 923.374 850.89 925.583 845.886 cv
927.789 840.88 930.476 835.1 933.491 828.982 cv
935.001 825.924 936.573 822.771 938.229 819.598 cv
939.86 816.412 941.584 813.21 943.294 810.003 cv
945.04 806.813 946.777 803.619 948.547 800.508 cv
950.299 797.387 952.064 794.339 953.8 791.402 cv
957.265 785.527 960.625 780.11 963.601 775.52 cv
966.573 770.928 969.165 767.163 971.03 764.556 cv
971.943 763.241 972.716 762.238 973.219 761.541 cv
973.738 760.853 974.016 760.487 974.016 760.487 cv
f
905.828 981.362 mo
905.828 981.362 905.813 980.915 905.785 980.078 cv
905.777 979.244 905.723 978.015 905.736 976.462 cv
905.716 973.348 905.769 968.91 905.99 963.604 cv
906.206 958.299 906.584 952.123 907.143 945.527 cv
907.419 942.227 907.734 938.823 908.102 935.368 cv
908.451 931.912 908.873 928.409 909.286 924.904 cv
909.739 921.405 910.178 917.904 910.683 914.467 cv
911.16 911.026 911.693 907.648 912.223 904.381 cv
913.289 897.846 914.427 891.765 915.511 886.566 cv
916.591 881.366 917.622 877.051 918.404 874.036 cv
918.771 872.525 919.122 871.347 919.335 870.54 cv
919.567 869.735 919.69 869.307 919.69 869.307 cv
919.69 869.307 919.706 869.753 919.734 870.589 cv
919.743 871.423 919.798 872.653 919.785 874.207 cv
919.809 877.32 919.757 881.758 919.537 887.064 cv
919.322 892.37 918.944 898.545 918.384 905.143 cv
918.103 908.44 917.797 911.847 917.422 915.301 cv
917.073 918.757 916.646 922.259 916.232 925.764 cv
915.779 929.263 915.335 932.763 914.831 936.201 cv
914.346 939.641 913.822 943.02 913.286 946.287 cv
912.219 952.82 911.081 958.901 909.997 964.101 cv
908.919 969.3 907.889 973.617 907.11 976.632 cv
906.745 978.142 906.394 979.321 906.182 980.127 cv
905.951 980.932 905.828 981.362 905.828 981.362 cv
f
754.192 873.792 mo
754.192 873.792 754.834 873.688 756.04 873.491 cv
757.245 873.315 759.013 873.015 761.265 872.715 cv
763.518 872.404 766.252 872.006 769.393 871.634 cv
772.532 871.24 776.074 870.793 779.942 870.393 cv
783.81 869.966 787.998 869.502 792.435 869.113 cv
796.871 868.7 801.546 868.238 806.389 867.863 cv
811.23 867.47 816.235 867.093 821.323 866.758 cv
826.409 866.404 831.58 866.113 836.751 865.813 cv
841.924 865.551 847.096 865.276 852.192 865.08 cv
857.286 864.855 862.302 864.697 867.158 864.56 cv
872.012 864.409 876.711 864.358 881.164 864.292 cv
885.617 864.202 889.831 864.205 893.722 864.215 cv
897.612 864.198 901.181 864.256 904.345 864.312 cv
907.507 864.343 910.268 864.443 912.542 864.511 cv
914.813 864.566 916.603 864.675 917.821 864.72 cv
919.041 864.785 919.69 864.82 919.69 864.82 cv
919.69 864.82 919.048 864.926 917.843 865.123 cv
916.637 865.3 914.87 865.6 912.616 865.901 cv
910.365 866.214 907.63 866.612 904.49 866.986 cv
901.351 867.383 897.809 867.827 893.94 868.229 cv
890.073 868.661 885.883 869.118 881.448 869.511 cv
877.012 869.927 872.336 870.383 867.494 870.759 cv
862.651 871.147 857.648 871.533 852.56 871.86 cv
847.472 872.215 842.301 872.501 837.13 872.8 cv
831.957 873.061 826.785 873.331 821.69 873.528 cv
816.596 873.746 811.579 873.912 806.724 874.044 cv
801.869 874.195 797.171 874.242 792.717 874.31 cv
788.265 874.402 784.049 874.395 780.159 874.388 cv
776.27 874.408 772.701 874.348 769.537 874.295 cv
766.374 874.265 763.613 874.164 761.341 874.099 cv
759.068 874.044 757.279 873.936 756.06 873.891 cv
754.842 873.826 754.192 873.792 754.192 873.792 cv
f
957.179 864.82 mo
957.179 864.82 957.383 864.679 957.764 864.414 cv
958.153 864.167 958.71 863.766 959.445 863.334 cv
960.898 862.424 963.001 861.204 965.574 859.888 cv
968.146 858.568 971.188 857.15 974.494 855.776 cv
976.147 855.084 977.863 854.4 979.623 853.751 cv
981.377 853.082 983.18 852.469 984.982 851.846 cv
986.795 851.261 988.603 850.663 990.407 850.144 cv
992.202 849.598 993.989 849.122 995.723 848.675 cv
999.191 847.785 1002.47 847.093 1005.32 846.603 cv
1008.17 846.109 1010.59 845.822 1012.3 845.679 cv
1013.14 845.585 1013.83 845.571 1014.29 845.536 cv
1014.75 845.519 1015 845.509 1015 845.509 cv
1015 845.509 1014.8 845.651 1014.42 845.918 cv
1014.03 846.166 1013.47 846.566 1012.74 847 cv
1011.28 847.912 1009.18 849.135 1006.61 850.451 cv
1004.04 851.772 1001 853.191 997.689 854.564 cv
996.035 855.249 994.321 855.942 992.558 856.584 cv
990.804 857.253 989 857.862 987.198 858.484 cv
985.385 859.069 983.575 859.662 981.771 860.182 cv
979.974 860.72 978.19 861.205 976.455 861.646 cv
972.985 862.534 969.702 863.227 966.853 863.718 cv
964.006 864.214 961.591 864.501 959.883 864.648 cv
959.036 864.743 958.351 864.757 957.891 864.793 cv
957.427 864.811 957.179 864.82 957.179 864.82 cv
f
928.337 971.406 mo
934.45 931.491 li
955.107 965.746 li
946.623 968.723 937.646 970.661 928.337 971.406 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8Dcn
rV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Kl
q>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Ehs8DcnrV?Klq>^Eh
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8DcnrV?Klq>^Egs8D]lrV-?ipAb'as8;Qir:L$eoDe^Zs82Beqsj^`nGiCSs826aqX+=ZmJm%Ls8)']
q<J"Ul2USCs7tjXq<%_Pjo>,:s7kXSpu28Ii;`Q/s7bCMpYGlCh#I*&s7Y1Hp=]K=fDkNps7OqBo[Np5
e,T'gs7F\<o?[I.cN!L\s74A5o#h"'aoCqQs7+,/n\tOu`;f>Es7!l)nA,(n^]3c9s6mW#n%8Vf\c;*-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp9fqtp9fqtp6dqYL'bqYL'bqYL'bqYL'b
qYL'bqYL$`q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FUp@e4R
p@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSFo()ABo()AB
o()ABnaZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:n*f`6n*f`6n*f`6n*f`6mdBN2mdBN2mdBN2mHs<.
~>
<~q"XXZq"XXZq"XXZq"OOWp\+=Sp@e4Rp@e1Pp%A"Np%@tLo^qbHoCMPDo()ABo()>@naZ,<nF5o8n*f]4
mdBK0mHs9,m-O**m-O'(lg*j$lK[Wul07Eqkih3mkND!ik2tgfjlPUbjQ,C^j5]1Zio/kSi8EPNhr!>J
hVR,Fh;-oBgt^]>gY:K:g=k96g"G'2f[na+f%/F&e^`4"eC<!se'ldodaHRkdEp7ecd0q`cHa_\c-=MX
bfn8Rb0%lLaiVZHaN2HDa2c3>`Pog8`5KU4_o'C0_SX.*^qdb$^V@Ou^:q:o]Y(ni]=Y\e]"5G_\@B&Y
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
919.69 971.751 mo
915.891 971.751 912.142 971.553 908.446 971.166 cv
908.934 969.065 909.46 966.693 909.997 964.101 cv
911.081 958.901 912.219 952.82 913.286 946.287 cv
913.822 943.02 914.346 939.641 914.831 936.201 cv
915.335 932.763 915.779 929.263 916.232 925.764 cv
916.646 922.259 917.073 918.757 917.422 915.301 cv
917.62 913.479 917.798 911.671 917.964 909.885 cv
918.536 909.906 919.112 909.917 919.69 909.917 cv
925.476 909.917 931.006 908.828 936.089 906.842 cv
937.018 909.919 938.035 913.162 939.127 916.509 cv
940.175 919.711 941.271 923.014 942.446 926.349 cv
943.594 929.693 944.831 933.065 946.057 936.442 cv
947.317 939.805 948.57 943.17 949.866 946.46 cv
951.144 949.757 952.447 952.984 953.735 956.098 cv
954.996 959.155 956.248 962.1 957.465 964.887 cv
956.685 965.181 955.895 965.469 955.107 965.746 cv
934.45 931.491 li
928.337 971.406 li
925.483 971.634 922.602 971.751 919.69 971.751 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3a
qX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\
n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Qs8)3aqX=I\n,N7Q
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8)3aq="@ZmJm"Js7ts[puqbQkPt;;s7bRRp>GuEhZ*9(s7P+Go[s39ec56hs7=V;o$7:*bQ%+Rs7"&.
nAG:p_#Ni9s6dN!mC<2_[/]Kus6HlglE($NWW24[s6-3Wkb%n<SH%`>s5oXIjcf`*OT4@"s5St9ie@Ek
K)abYs5/2'hg#1XFoU9;s4hMlghQlDBE-[qs4Lf[fNeI/=o[)Rs41'IeP?.o9)m@0s3j=7dQdcZ49*Yd
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~q>'j^q=sa[q"XXZq"XXZq"XXZq"OOWp\4FVp\4CTp@e4Rp@e1Pp%A"Np%@tLo^qeJo^qbHoCMSFoCMPD
o()ABo()>@naZ,<nF5r:nF5o8n*f`6n*f]4mdBK0mHs<.mHs<-m-O*)lg*m&lg*m%lK[[!l07Hsl07Hr
kih6nkND$kkND$jk2tgfjlPUcjlPUbjQ,C^j5]1Zio8tWio8tViSibRi8EPNhr!>KhVR,GhVR,Gh;-oC
gt^]?gY:K;gY:K;g=k97g"G'3f\"j/f@SX+f@SX+f%/F'e^`4#eC<!te'ldpdaHRldaHRldF$@hd*U.d
~>
<~mdBN2mdBN1mHj3*lg!d#lKRQski_-lkND!hjQ,@]j5].Xi8EMMhVR)Egt^Z=g=k65f\"g,f%&:!e'cXk
d*U+bcHa\Ybfe/NaiMNC`l?!:`5BI/_8*h#^:h1l]=YYc\[]/Y[^EKKZa-mAYck75XfSV)Wi;trVl$>f
UnaZXTV.pKSXl:?R[TY3Q^=#'Pa%ApOcb`dNfB!UMi*@ILPCM9KS+l-JUi6!I=-BgH?ja[GBS+OFE;JB
E,TW3D/=!&BkV-lAn>L_@UW\Q?X@#C>?Y35=BAO'<)Z[l:esk^9h\2P8Ou?@779L05s[b#5!;"i3]T/Y
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
905.054 970.757 mo
891.165 968.857 878.134 964.292 866.478 957.591 cv
900.856 913.223 li
905.054 970.757 li
848.259 944.393 mo
836.426 933.765 826.981 920.54 820.816 905.61 cv
874.206 896.237 li
848.259 944.393 li
815.055 886.959 mo
814.154 882.678 813.509 878.304 813.137 873.851 cv
815.953 873.758 818.809 873.651 821.69 873.528 cv
826.785 873.331 831.957 873.061 837.13 872.8 cv
841.446 872.55 845.762 872.31 850.029 872.031 cv
815.055 886.959 li
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
905.773 970.853 mo
905.536 970.822 905.29 970.79 905.054 970.757 cv
900.856 913.223 li
866.478 957.591 li
859.941 953.833 853.832 949.399 848.259 944.393 cv
874.206 896.237 li
820.816 905.61 li
818.353 899.647 816.413 893.407 815.055 886.959 cv
850.029 872.031 li
850.875 871.975 851.718 871.919 852.56 871.86 cv
857.648 871.533 862.651 871.147 867.494 870.759 cv
870.012 870.564 872.485 870.346 874.903 870.124 cv
877.208 889.807 892.189 905.614 911.462 909.168 cv
911.193 910.913 910.93 912.681 910.683 914.467 cv
910.178 917.904 909.739 921.405 909.286 924.904 cv
908.873 928.409 908.451 931.912 908.102 935.368 cv
907.734 938.823 907.419 942.227 907.143 945.527 cv
906.584 952.123 906.206 958.299 905.99 963.604 cv
905.879 966.256 905.811 968.692 905.773 970.853 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
1026.45 870.947 mo
1024.11 868.908 li
1026.58 867.897 li
1026.55 868.917 1026.5 869.934 1026.45 870.947 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
982.03 951.708 mo
965.046 905.11 li
1012.79 917.447 li
1005.13 930.977 994.599 942.674 982.03 951.708 cv
1021.41 897.887 mo
984.812 864.82 li
1025.67 850.524 li
1026.3 855.201 1026.62 859.972 1026.62 864.82 cv
1026.62 865.847 1026.61 866.876 1026.58 867.897 cv
1024.11 868.908 li
1026.45 870.947 li
1025.92 880.302 1024.19 889.327 1021.41 897.887 cv
976.503 837.704 mo
1008.62 805.43 li
1014.09 813.603 1018.46 822.569 1021.53 832.123 cv
976.503 837.704 li
954.726 826.306 mo
976.041 773.927 li
985.131 779.574 993.31 786.546 1000.31 794.573 cv
954.726 826.306 li
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
962.359 962.898 mo
961.49 960.038 960.548 957.042 959.542 953.957 cv
958.501 950.753 957.396 947.452 956.227 944.115 cv
955.078 940.77 953.846 937.397 952.621 934.02 cv
951.361 930.658 950.114 927.29 948.817 924 cv
947.546 920.701 946.235 917.477 944.952 914.361 cv
943.554 910.97 942.167 907.718 940.826 904.667 cv
955.081 897.091 964.787 882.089 964.787 864.82 cv
964.787 864.565 964.784 864.31 964.78 864.055 cv
965.441 863.956 966.133 863.844 966.853 863.718 cv
969.702 863.227 972.985 862.534 976.455 861.646 cv
978.19 861.205 979.974 860.72 981.771 860.182 cv
983.575 859.662 985.385 859.069 987.198 858.484 cv
989 857.862 990.804 857.253 992.558 856.584 cv
994.321 855.942 996.035 855.249 997.689 854.564 cv
1001 853.191 1004.04 851.772 1006.61 850.451 cv
1009.18 849.135 1011.28 847.912 1012.74 847 cv
1013.47 846.566 1014.03 846.166 1014.42 845.918 cv
1014.8 845.651 1015 845.509 1015 845.509 cv
1015 845.509 1014.75 845.519 1014.29 845.536 cv
1013.83 845.571 1013.14 845.585 1012.3 845.679 cv
1010.59 845.822 1008.17 846.109 1005.32 846.603 cv
1002.47 847.093 999.191 847.785 995.723 848.675 cv
993.989 849.122 992.202 849.598 990.407 850.144 cv
988.603 850.663 986.795 851.261 984.982 851.846 cv
983.18 852.469 981.377 853.082 979.623 853.751 cv
977.863 854.4 976.147 855.084 974.494 855.776 cv
971.188 857.15 968.146 858.568 965.574 859.888 cv
965.232 860.063 964.898 860.236 964.573 860.407 cv
963.142 845.676 954.622 833.018 942.468 825.891 cv
943.048 824.878 943.628 823.855 944.204 822.824 cv
945.974 819.713 947.706 816.518 949.452 813.328 cv
951.161 810.12 952.88 806.916 954.511 803.73 cv
956.161 800.553 957.742 797.405 959.246 794.343 cv
962.259 788.224 964.946 782.445 967.153 777.439 cv
968.271 774.911 969.264 772.581 970.123 770.508 cv
972.134 771.585 974.111 772.728 976.041 773.927 cv
954.726 826.306 li
1000.31 794.573 li
1003.3 798.006 1006.08 801.632 1008.62 805.43 cv
976.503 837.704 li
1021.53 832.123 li
1023.43 838.048 1024.83 844.199 1025.67 850.524 cv
984.812 864.82 li
1021.41 897.887 li
1019.18 904.736 1016.29 911.282 1012.79 917.447 cv
965.046 905.11 li
982.03 951.708 li
975.923 956.098 969.336 959.859 962.359 962.898 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
812.79 867.361 mo
812.77 866.515 812.76 865.671 812.76 864.82 cv
812.76 862.131 812.86 859.468 813.055 856.828 cv
835.85 865.865 li
830.98 866.147 826.114 866.424 821.323 866.758 cv
818.447 866.947 815.598 867.15 812.79 867.361 cv
865.537 841.924 mo
816.894 835.276 li
820.958 821.109 827.868 808.153 836.971 797.055 cv
865.537 841.924 li
894.749 811.131 mo
859.241 776.605 li
864.377 773.079 869.838 769.989 875.567 767.39 cv
876.98 770.994 878.531 774.828 880.191 778.797 cv
881.602 782.18 883.089 785.663 884.643 789.183 cv
886.18 792.71 887.803 796.264 889.419 799.824 cv
891.069 803.366 892.708 806.914 894.388 810.375 cv
894.508 810.628 894.628 810.88 894.749 811.131 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
835.85 865.865 mo
813.055 856.828 li
813.603 849.41 814.909 842.197 816.894 835.276 cv
865.537 841.924 li
836.971 797.055 li
843.384 789.237 850.886 782.341 859.241 776.605 cv
894.749 811.131 li
896.286 814.341 897.847 817.478 899.373 820.516 cv
899.923 821.611 900.472 822.693 901.017 823.759 cv
885.552 830.803 874.766 846.328 874.596 864.389 cv
872.167 864.43 869.684 864.481 867.158 864.56 cv
862.302 864.697 857.286 864.855 852.192 865.08 cv
847.096 865.276 841.924 865.551 836.751 865.813 cv
836.451 865.83 836.15 865.848 835.85 865.865 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
924.052 807.869 mo
904.379 758.979 li
909.379 758.262 914.492 757.891 919.69 757.891 cv
930.846 757.891 941.605 759.6 951.715 762.769 cv
924.052 807.869 li
892.446 789.782 mo
891.901 788.631 891.354 787.485 890.803 786.348 cv
889.141 782.879 887.465 779.483 885.813 776.21 cv
883.905 772.416 882.026 768.788 880.229 765.408 cv
883.137 764.252 886.1 763.224 889.127 762.322 cv
892.446 789.782 li
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
936.499 822.961 mo
931.304 820.872 925.632 819.723 919.69 819.723 cv
915.123 819.723 910.717 820.402 906.563 821.664 cv
906.058 820.432 905.541 819.183 905.012 817.921 cv
903.595 814.541 902.117 811.054 900.556 807.537 cv
899.02 804.009 897.392 800.457 895.776 796.899 cv
894.667 794.52 893.561 792.139 892.446 789.782 cv
889.127 762.322 li
894.07 760.851 899.165 759.726 904.379 758.979 cv
924.052 807.869 li
951.715 762.769 li
957.269 764.51 962.623 766.69 967.746 769.272 cv
966.489 771.118 965.093 773.215 963.601 775.52 cv
960.625 780.11 957.265 785.527 953.8 791.402 cv
952.064 794.339 950.299 797.387 948.547 800.508 cv
946.777 803.619 945.04 806.813 943.294 810.003 cv
941.584 813.21 939.86 816.412 938.229 819.598 cv
937.642 820.722 937.066 821.844 936.499 822.961 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
901.017 823.759 mo
900.472 822.693 899.923 821.611 899.373 820.516 cv
897.847 817.478 896.286 814.341 894.749 811.131 cv
894.628 810.88 894.508 810.628 894.388 810.375 cv
892.708 806.914 891.069 803.366 889.419 799.824 cv
887.803 796.264 886.18 792.71 884.643 789.183 cv
883.089 785.663 881.602 782.18 880.191 778.797 cv
878.531 774.828 876.98 770.994 875.567 767.39 cv
877.102 766.694 878.657 766.033 880.229 765.408 cv
882.026 768.788 883.905 772.416 885.813 776.21 cv
887.465 779.483 889.141 782.879 890.803 786.348 cv
891.354 787.485 891.901 788.631 892.446 789.782 cv
893.561 792.139 894.667 794.52 895.776 796.899 cv
897.392 800.457 899.02 804.009 900.556 807.537 cv
902.117 811.054 903.595 814.541 905.012 817.921 cv
905.541 819.183 906.058 820.432 906.563 821.664 cv
904.659 822.242 902.805 822.945 901.017 823.759 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
957.465 964.887 mo
956.248 962.1 954.996 959.155 953.735 956.098 cv
952.447 952.984 951.144 949.757 949.866 946.46 cv
948.57 943.17 947.317 939.805 946.057 936.442 cv
944.831 933.065 943.594 929.693 942.446 926.349 cv
941.271 923.014 940.175 919.711 939.127 916.509 cv
938.035 913.162 937.018 909.919 936.089 906.842 cv
937.716 906.207 939.297 905.48 940.826 904.667 cv
942.167 907.718 943.554 910.97 944.952 914.361 cv
946.235 917.477 947.546 920.701 948.817 924 cv
950.114 927.29 951.361 930.658 952.621 934.02 cv
953.846 937.397 955.078 940.77 956.227 944.115 cv
957.396 947.452 958.501 950.753 959.542 953.957 cv
960.548 957.042 961.49 960.038 962.359 962.898 cv
960.747 963.6 959.118 964.263 957.465 964.887 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
942.468 825.891 mo
940.564 824.774 938.569 823.792 936.499 822.961 cv
937.066 821.844 937.642 820.722 938.229 819.598 cv
939.86 816.412 941.584 813.21 943.294 810.003 cv
945.04 806.813 946.777 803.619 948.547 800.508 cv
950.299 797.387 952.064 794.339 953.8 791.402 cv
957.265 785.527 960.625 780.11 963.601 775.52 cv
965.093 773.215 966.489 771.118 967.746 769.272 cv
968.544 769.674 969.336 770.086 970.123 770.508 cv
969.264 772.581 968.271 774.911 967.153 777.439 cv
964.946 782.445 962.259 788.224 959.246 794.343 cv
957.742 797.405 956.161 800.553 954.511 803.73 cv
952.88 806.916 951.161 810.12 949.452 813.328 cv
947.706 816.518 945.974 819.713 944.204 822.824 cv
943.628 823.855 943.048 824.878 942.468 825.891 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
908.446 971.166 mo
907.551 971.073 906.66 970.969 905.773 970.853 cv
905.811 968.692 905.879 966.256 905.99 963.604 cv
906.206 958.299 906.584 952.123 907.143 945.527 cv
907.419 942.227 907.734 938.823 908.102 935.368 cv
908.451 931.912 908.873 928.409 909.286 924.904 cv
909.739 921.405 910.178 917.904 910.683 914.467 cv
910.93 912.681 911.193 910.913 911.462 909.168 cv
913.582 909.559 915.751 909.801 917.964 909.885 cv
917.798 911.671 917.62 913.479 917.422 915.301 cv
917.073 918.757 916.646 922.259 916.232 925.764 cv
915.779 929.263 915.335 932.763 914.831 936.201 cv
914.346 939.641 913.822 943.02 913.286 946.287 cv
912.219 952.82 911.081 958.901 909.997 964.101 cv
909.46 966.693 908.934 969.065 908.446 971.166 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
813.137 873.851 mo
812.957 871.706 812.841 869.541 812.79 867.361 cv
815.598 867.15 818.447 866.947 821.323 866.758 cv
826.114 866.424 830.98 866.147 835.85 865.865 cv
836.15 865.848 836.451 865.83 836.751 865.813 cv
841.924 865.551 847.096 865.276 852.192 865.08 cv
857.286 864.855 862.302 864.697 867.158 864.56 cv
869.684 864.481 872.167 864.43 874.596 864.389 cv
874.595 864.534 874.594 864.676 874.594 864.82 cv
874.594 866.614 874.699 868.385 874.903 870.124 cv
872.485 870.346 870.012 870.564 867.494 870.759 cv
862.651 871.147 857.648 871.533 852.56 871.86 cv
851.718 871.919 850.875 871.975 850.029 872.031 cv
845.762 872.31 841.446 872.55 837.13 872.8 cv
831.957 873.061 826.785 873.331 821.69 873.528 cv
818.809 873.651 815.953 873.758 813.137 873.851 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
964.78 864.055 mo
964.76 862.826 964.69 861.611 964.573 860.407 cv
964.898 860.236 965.232 860.063 965.574 859.888 cv
968.146 858.568 971.188 857.15 974.494 855.776 cv
976.147 855.084 977.863 854.4 979.623 853.751 cv
981.377 853.082 983.18 852.469 984.982 851.846 cv
986.795 851.261 988.603 850.663 990.407 850.144 cv
992.202 849.598 993.989 849.122 995.723 848.675 cv
999.191 847.785 1002.47 847.093 1005.32 846.603 cv
1008.17 846.109 1010.59 845.822 1012.3 845.679 cv
1013.14 845.585 1013.83 845.571 1014.29 845.536 cv
1014.75 845.519 1015 845.509 1015 845.509 cv
1015 845.509 1014.8 845.651 1014.42 845.918 cv
1014.03 846.166 1013.47 846.566 1012.74 847 cv
1011.28 847.912 1009.18 849.135 1006.61 850.451 cv
1004.04 851.772 1001 853.191 997.689 854.564 cv
996.035 855.249 994.321 855.942 992.558 856.584 cv
990.804 857.253 989 857.862 987.198 858.484 cv
985.385 859.069 983.575 859.662 981.771 860.182 cv
979.974 860.72 978.19 861.205 976.455 861.646 cv
972.985 862.534 969.702 863.227 966.853 863.718 cv
966.133 863.844 965.441 863.956 964.78 864.055 cv
level3{
gsave
clp
[106.93 0 0 106.93 919.69 864.82 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[106.93 0 0 106.93 919.69 864.82 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
964.787 864.82 mo
964.787 889.727 944.596 909.917 919.69 909.917 cv
894.785 909.917 874.594 889.727 874.594 864.82 cv
874.594 839.915 894.785 819.723 919.69 819.723 cv
944.596 819.723 964.787 839.915 964.787 864.82 cv
.984314 .423529 .690196 rgb
f
919.69 904.985 mo
897.509 904.985 879.527 887.003 879.527 864.82 cv
879.527 842.639 897.509 824.657 919.69 824.657 cv
941.872 824.657 959.854 842.639 959.854 864.82 cv
959.854 887.003 941.872 904.985 919.69 904.985 cv
919.69 830.831 mo
900.919 830.831 885.701 846.048 885.701 864.82 cv
885.701 883.592 900.919 898.809 919.69 898.809 cv
938.462 898.809 953.68 883.592 953.68 864.82 cv
953.68 846.048 938.462 830.831 919.69 830.831 cv
.992157 .545098 .8 rgb
f
919.69 898.809 mo
900.919 898.809 885.701 883.592 885.701 864.82 cv
885.701 846.048 900.919 830.831 919.69 830.831 cv
938.462 830.831 953.68 846.048 953.68 864.82 cv
953.68 883.592 938.462 898.809 919.69 898.809 cv
919.69 838.541 mo
905.177 838.541 893.41 850.307 893.41 864.82 cv
893.41 879.335 905.177 891.101 919.69 891.101 cv
934.204 891.101 945.97 879.335 945.97 864.82 cv
945.97 850.307 934.204 838.541 919.69 838.541 cv
.996078 .643137 .870588 rgb
f
919.69 891.101 mo
905.177 891.101 893.41 879.335 893.41 864.82 cv
893.41 850.307 905.177 838.541 919.69 838.541 cv
934.204 838.541 945.97 850.307 945.97 864.82 cv
945.97 879.335 934.204 891.101 919.69 891.101 cv
919.69 846.339 mo
909.483 846.339 901.209 854.613 901.209 864.82 cv
901.209 875.028 909.483 883.302 919.69 883.302 cv
929.898 883.302 938.172 875.028 938.172 864.82 cv
938.172 854.613 929.898 846.339 919.69 846.339 cv
1 .733333 .92549 rgb
f
919.69 883.302 mo
909.483 883.302 901.209 875.028 901.209 864.82 cv
901.209 854.613 909.483 846.339 919.69 846.339 cv
929.898 846.339 938.172 854.613 938.172 864.82 cv
938.172 875.028 929.898 883.302 919.69 883.302 cv
1 .8 .956863 rgb
f
854.309 827.869 mo
854.309 831.53 851.341 834.497 847.681 834.497 cv
844.021 834.497 841.054 831.53 841.054 827.869 cv
841.054 824.209 844.021 821.242 847.681 821.242 cv
851.341 821.242 854.309 824.209 854.309 827.869 cv
cp
1 .921569 .921569 rgb
f
828.059 978.65 mo
828.059 980.39 826.648 981.801 824.908 981.801 cv
823.167 981.801 821.757 980.39 821.757 978.65 cv
821.757 976.91 823.167 975.499 824.908 975.499 cv
826.648 975.499 828.059 976.91 828.059 978.65 cv
cp
f
812.761 799.02 mo
812.761 802.188 810.193 804.756 807.025 804.756 cv
803.857 804.756 801.288 802.188 801.288 799.02 cv
801.288 795.852 803.857 793.283 807.025 793.283 cv
810.193 793.283 812.761 795.852 812.761 799.02 cv
cp
f
1054.87 741.079 mo
1084.19 758.79 1093.6 796.914 1075.89 826.23 cv
1058.18 855.547 1020.05 864.955 990.737 847.244 cv
961.421 829.533 952.013 791.41 969.723 762.093 cv
987.434 732.777 1025.56 723.369 1054.87 741.079 cv
cp
1 .752941 .866667 rgb
f
999.514 836.619 mo
1024.14 851.494 1054.97 847.234 1074.69 828.135 cv
1056.51 855.948 1019.4 864.565 990.738 847.247 cv
961.426 829.539 952.015 791.403 969.723 762.091 cv
972.573 757.374 975.961 753.166 979.75 749.513 cv
979.324 750.157 978.911 750.809 978.513 751.47 cv
960.804 780.782 970.202 818.91 999.514 836.619 cv
cp
1 .4 .686275 rgb
f
1001.17 728.882 mo
1018.62 739.427 1024.22 762.124 1013.68 779.578 cv
1003.13 797.032 980.437 802.634 962.983 792.089 cv
945.529 781.545 939.928 758.847 950.472 741.393 cv
961.017 723.939 983.714 718.338 1001.17 728.882 cv
cp
1 .752941 .866667 rgb
f
993.284 725.313 mo
981.813 726.183 970.931 732.412 964.523 743.018 cv
953.98 760.471 959.582 783.171 977.034 793.715 cv
979.582 795.254 982.227 796.447 984.935 797.292 cv
977.513 797.886 969.846 796.234 962.987 792.09 cv
945.534 781.546 939.932 758.846 950.476 741.393 cv
959.489 726.474 977.381 720.213 993.284 725.313 cv
cp
1 .4 .686275 rgb
f
1075.23 775.441 mo
1081.89 795.562 1076.09 816.824 1062.05 830.85 cv
1070.42 817.618 1073 800.881 1067.7 784.86 cv
1058.29 756.461 1027.63 741.056 999.231 750.461 cv
990.953 753.203 983.794 757.747 978.01 763.516 cv
984.472 753.277 994.37 745.145 1006.76 741.042 cv
1035.16 731.637 1065.82 747.042 1075.23 775.441 cv
cp
1 .921569 .921569 rgb
f
785.767 719.585 mo
753.802 732.755 738.564 769.343 751.734 801.308 cv
764.903 833.274 801.491 848.511 833.457 835.342 cv
865.422 822.172 880.659 785.584 867.49 753.619 cv
854.321 721.653 817.732 706.416 785.767 719.585 cv
cp
1 .752941 .866667 rgb
f
826.331 823.394 mo
799.484 834.455 769.382 825.474 752.636 803.393 cv
766.505 833.929 802.199 848.222 833.455 835.345 cv
865.416 822.177 880.658 785.577 867.49 753.616 cv
865.372 748.473 862.637 743.755 859.418 739.529 cv
859.744 740.237 860.056 740.951 860.352 741.671 cv
873.52 773.632 858.292 810.227 826.331 823.394 cv
cp
1 .4 .686275 rgb
f
842.285 701.034 mo
819.905 710.254 809.236 735.872 818.457 758.252 cv
827.677 780.632 853.294 791.3 875.674 782.079 cv
898.054 772.859 908.722 747.242 899.502 724.862 cv
890.282 702.482 864.665 691.814 842.285 701.034 cv
cp
1 .752941 .866667 rgb
f
852.178 698.27 mo
865.479 701.361 877.121 710.633 882.724 724.233 cv
891.944 746.611 881.274 772.231 858.896 781.451 cv
855.63 782.796 852.311 783.719 848.981 784.221 cv
857.581 786.257 866.874 785.703 875.67 782.08 cv
898.048 772.86 908.717 747.24 899.498 724.862 cv
891.617 705.733 871.756 695.157 852.178 698.27 cv
cp
1 .4 .686275 rgb
f
760.19 750.741 mo
750.454 769.792 752.972 791.893 764.832 808.042 cv
758.515 793.556 758.504 776.463 766.256 761.294 cv
779.997 734.406 812.949 723.744 839.837 737.485 cv
847.675 741.491 854.12 747.123 859.004 753.766 cv
854.129 742.56 845.503 732.928 833.771 726.932 cv
806.883 713.191 773.931 723.853 760.19 750.741 cv
cp
1 .921569 .921569 rgb
f
920.999 923.858 mo
951.26 931.011 969.993 961.34 962.84 991.601 cv
955.688 1021.86 925.358 1040.6 895.097 1033.44 cv
864.836 1026.29 846.103 995.96 853.256 965.699 cv
860.409 935.439 890.738 916.706 920.999 923.858 cv
cp
1 .752941 .866667 rgb
f
921.003 923.858 mo
951.254 931.008 969.989 961.341 962.835 991.607 cv
962.092 994.752 961.097 997.777 959.871 1000.67 cv
961.587 973.773 943.734 948.771 916.629 942.365 cv
889.508 935.954 862.351 950.318 851.844 975.135 cv
852.042 972 852.507 968.851 853.25 965.705 cv
860.404 935.439 890.737 916.704 921.003 923.858 cv
cp
1 .4 .686275 rgb
f
890.773 1018.06 mo
876.318 1011.87 867.353 998.2 866.465 983.501 cv
869.703 994.656 877.731 1004.32 889.241 1009.25 cv
909.644 1017.98 933.276 1008.52 942.012 988.119 cv
944.558 982.172 945.553 975.96 945.19 969.911 cv
947.703 978.535 947.355 988.032 943.543 996.934 cv
934.808 1017.34 911.176 1026.8 890.773 1018.06 cv
cp
1 .921569 .921569 rgb
f
4044.34 554.825 mo
3757.71 759.586 li
3709.7 814.543 li
3699.78 825.898 3712.2 842.806 3726 836.735 cv
3798.7 804.76 li
4044.34 554.825 li
1 .870588 .45098 rgb
f
4212 742.764 mo
3798.7 804.76 li
3721.34 838.789 li
3707.79 844.745 3711.39 864.878 3726.16 865.779 cv
3785.63 869.41 li
4212 742.764 li
f
4074.08 1053.74 mo
3785.63 869.41 li
3704.39 864.45 li
3691.53 863.665 3684.43 879.112 3693.41 888.356 cv
3769.31 966.526 li
4074.08 1053.74 li
f
3769.31 966.526 mo
3959.16 1474.24 li
3705.14 1055.19 li
3676.95 908.587 li
3674.31 894.83 3691.17 886.046 3700.92 896.097 cv
3769.31 966.526 li
f
3636.01 1416.1 mo
3705.14 1055.19 li
3678.14 914.771 li
3675.4 900.54 3655.56 899.191 3650.93 912.921 cv
3627.67 981.802 li
3636.01 1416.1 li
f
3343.96 1353.91 mo
3627.67 981.802 li
3654.11 903.488 li
3658.49 890.529 3643.71 879.552 3632.57 887.484 cv
3569.31 932.51 li
3343.96 1353.91 li
f
3219.7 1014.53 mo
3569.31 932.51 li
3626.67 891.684 li
3638.31 883.393 3631.66 865.031 3617.4 866.128 cv
3513.38 874.132 li
3219.7 1014.53 li
f
3193.47 758.283 mo
3513.38 874.132 li
3627.13 865.38 li
3640.51 864.35 3645.03 846.976 3633.84 839.559 cv
3517.08 762.141 li
3193.47 758.283 li
f
3288.72 408.019 mo
3517.08 762.141 li
3626.32 834.569 li
3638.19 842.439 3652.91 829.764 3646.9 816.856 cv
3580.31 673.936 li
3288.72 408.019 li
f
3580.31 673.936 mo
3592.74 383.11 li
3673.28 743.692 li
3670.58 804.668 li
3669.93 819.411 3649.94 823.379 3643.71 810.002 cv
3580.31 673.936 li
f
3673.28 743.692 mo
3953.75 307.394 li
3757.71 759.586 li
3694.53 831.906 li
3685.76 841.952 3669.23 835.329 3669.82 822.003 cv
3673.28 743.692 li
f
3671.59 769.055 mo
3868.65 465.923 li
3731.91 788.481 li
3731.08 790.44 3729.93 792.249 3728.51 793.834 cv
3702.21 823.208 li
3690.37 836.432 3668.46 828.057 3668.46 810.305 cv
3668.46 779.597 li
3668.46 775.854 3669.55 772.192 3671.59 769.055 cv
.984314 .752941 0 rgb
f
3915.4 667.76 mo
3732.68 790.085 li
3731.34 790.984 3730.11 792.05 3729.03 793.254 cv
3724.14 798.721 li
3710.47 813.99 3726.82 837.248 3745.81 829.547 cv
3759.4 824.043 li
3761.84 823.05 3764.06 821.566 3765.91 819.683 cv
3915.4 667.76 li
f
3765.73 822.237 mo
3975.38 798.199 li
3764.91 863.473 li
3762.82 864.121 3760.64 864.409 3758.45 864.327 cv
3737.63 863.534 3732.61 834.902 3751.92 827.074 cv
3760.66 823.528 li
3762.28 822.871 3763.99 822.437 3765.73 822.237 cv
f
3766.3 867.481 mo
3990.26 1016.85 li
3753.51 943.521 li
3750.48 942.582 3747.73 940.911 3745.49 938.657 cv
3702.94 895.707 li
3690.59 883.244 3699.88 862.1 3717.42 862.766 cv
3756.3 864.244 li
3759.87 864.38 3763.33 865.501 3766.3 867.481 cv
f
3750.34 946.172 mo
3879.22 1310.15 li
3702.73 1006.42 li
3684.19 927.703 li
3679.72 908.699 3703.02 895.785 3716.76 909.656 cv
3745.85 939.015 li
3747.85 941.04 3749.39 943.485 3750.34 946.172 cv
f
3683.72 925.678 mo
3702.73 1006.42 li
3652.02 1254.54 li
3636.88 956.104 li
3636.75 953.616 3637.11 951.127 3637.93 948.775 cv
3646.62 923.762 li
3652.97 905.474 3679.28 906.832 3683.72 925.678 cv
f
3634.45 955.035 mo
3470.29 1152.66 li
3590.52 917.473 li
3591.98 914.62 3594.13 912.174 3596.76 910.356 cv
3619.81 894.459 li
3635.2 883.845 3655.2 899.07 3649.06 916.73 cv
3637.84 949.025 li
3637.08 951.216 3635.93 953.251 3634.45 955.035 cv
f
3589.13 913.955 mo
3351.57 968.354 li
3562.55 872.643 li
3564.46 871.775 3566.5 871.224 3568.59 871.013 cv
3593.55 868.487 li
3613.45 866.472 3622.95 892.296 3606.48 903.652 cv
3595.8 911.022 li
3593.78 912.413 3591.52 913.408 3589.13 913.955 cv
f
3561.31 869.853 mo
3286.79 771.349 li
3550.09 784.979 li
3553.57 785.159 3556.94 786.279 3559.85 788.219 cv
3623.77 831.001 li
3638.84 841.084 3633 864.493 3614.97 866.319 cv
3569.79 870.892 li
3566.92 871.181 3564.02 870.827 3561.31 869.853 cv
f
3553.26 781.993 mo
3383.17 523.828 li
3613.94 752.854 li
3615.46 754.358 3616.71 756.104 3617.66 758.019 cv
3636.42 796.025 li
3645.19 813.779 3624.78 831.674 3608.33 820.662 cv
3558.66 787.426 li
3556.52 785.992 3554.68 784.146 3553.26 781.993 cv
f
3616.01 751.179 mo
3602.48 507.305 li
3667.89 771.573 li
3668.27 773.094 3668.46 774.654 3668.46 776.221 cv
3668.46 778.044 li
3668.46 798.507 3640.83 804.955 3631.78 786.608 cv
3617.98 758.672 li
3616.83 756.332 3616.16 753.783 3616.01 751.179 cv
f
3822.07 863.915 mo
3822.07 868.006 3810.63 871.625 3810.3 875.631 cv
3809.97 879.702 3817.84 884.668 3817.18 888.64 cv
3816.51 892.665 3808.29 895.034 3807.3 898.941 cv
3806.3 902.891 3804.36 906.116 3803.05 909.932 cv
3801.73 913.781 3810.74 921.677 3809.12 925.375 cv
3807.48 929.099 3796.93 928.542 3795.01 932.096 cv
3793.07 935.667 3799.26 944.182 3797.04 947.567 cv
3794.82 950.963 3783.53 947.914 3781.04 951.106 cv
3778.55 954.306 3781.33 961.806 3778.58 964.785 cv
3775.83 967.768 3772.34 970.18 3769.36 972.926 cv
3766.38 975.671 3764.96 980.593 3761.76 983.086 cv
3758.57 985.575 3755.94 989.548 3752.54 991.771 cv
3750.81 992.902 3748.02 992.345 3745.23 991.786 cv
3742.56 991.252 3739.88 990.718 3738.14 991.665 cv
3734.58 993.593 3734.14 1002.28 3730.42 1003.92 cv
3726.72 1005.54 3721.8 1005.17 3717.95 1006.49 cv
3714.14 1007.8 3709.38 1006.76 3705.43 1007.75 cv
3703.43 1008.26 3701.12 1007.21 3698.81 1006.16 cv
3696.62 1005.16 3694.43 1004.16 3692.47 1004.49 cv
3688.5 1005.15 3685.29 1010.93 3681.22 1011.27 cv
3677.21 1011.59 3673.1 1015.42 3669.01 1015.42 cv
3664.92 1015.42 3661.34 1005.07 3657.33 1004.74 cv
3655.33 1004.57 3653.1 1006.53 3650.88 1008.49 cv
3648.58 1010.52 3646.28 1012.54 3644.26 1012.21 cv
3640.24 1011.54 3637.28 1005.6 3633.37 1004.62 cv
3629.42 1003.62 3625.91 1001.89 3622.09 1000.58 cv
3618.24 999.255 3615.68 995.548 3611.99 993.924 cv
3610.19 993.135 3608.02 993.245 3605.86 993.356 cv
3603.53 993.475 3601.21 993.592 3599.37 992.595 cv
3595.8 990.658 3592.58 988.304 3589.19 986.087 cv
3585.8 983.864 3582.32 981.89 3579.12 979.401 cv
3575.92 976.906 3573.63 973.509 3570.65 970.764 cv
3567.66 968.018 3559.82 969.938 3557.08 966.956 cv
3554.33 963.976 3558.89 954.754 3556.4 951.554 cv
3553.91 948.36 3547.89 947.891 3545.66 944.495 cv
3543.45 941.11 3540.95 937.831 3539.02 934.26 cv
3537.09 930.707 3536.01 926.692 3534.37 922.97 cv
3532.75 919.272 3529.45 916.129 3528.13 912.28 cv
3526.82 908.464 3523.95 904.852 3522.95 900.902 cv
3521.96 896.994 3527.38 891.692 3526.71 887.667 cv
3526.05 883.696 3526.53 879.827 3526.19 875.755 cv
3525.87 871.749 3519.4 868.006 3519.4 863.915 cv
3519.4 859.825 3527.72 856.233 3528.05 852.227 cv
3528.39 848.155 3527.39 844.356 3528.05 840.386 cv
3528.72 836.361 3526.71 832.035 3527.7 828.128 cv
3528.7 824.178 3528.94 820.095 3530.25 816.278 cv
3531.57 812.428 3528.64 806.753 3530.27 803.055 cv
3531.9 799.332 3535.71 796.375 3537.64 792.821 cv
3539.58 789.25 3540.78 784.972 3543 781.587 cv
3545.22 778.191 3553.28 778.976 3555.77 775.783 cv
3558.27 772.583 3556.89 766.21 3559.64 763.23 cv
3562.38 760.248 3567.01 759.095 3569.99 756.349 cv
3572.97 753.604 3576.58 751.763 3579.78 749.269 cv
3582.97 746.78 3585.08 742.866 3588.48 740.642 cv
3591.86 738.426 3595.8 737.162 3599.37 735.225 cv
3602.92 733.299 3605.19 728.54 3608.91 726.904 cv
3612.61 725.279 3617.28 725.777 3621.13 724.455 cv
3623.09 723.784 3625.47 724.745 3627.87 725.707 cv
3630.14 726.621 3632.42 727.534 3634.34 727.049 cv
3638.25 726.062 3639.83 713.834 3643.86 713.168 cv
3645.87 712.832 3648.25 715.25 3650.63 717.668 cv
3652.94 720.013 3655.25 722.356 3657.26 722.193 cv
3661.26 721.866 3664.92 719.411 3669.01 719.411 cv
3673.1 719.411 3676.68 722.787 3680.68 723.115 cv
3682.69 723.278 3685.04 720.664 3687.37 718.051 cv
3689.78 715.363 3692.17 712.675 3694.18 713.009 cv
3698.21 713.676 3700.55 722.973 3704.45 723.96 cv
3708.41 724.957 3711.63 727.346 3715.44 728.656 cv
3719.29 729.978 3723.92 728.68 3727.61 730.305 cv
3731.34 731.94 3736.57 730.58 3740.12 732.507 cv
3743.7 734.445 3747.63 736.188 3751.01 738.403 cv
3754.41 740.627 3759.58 740.962 3762.77 743.451 cv
3765.97 745.945 3769 749.312 3771.98 752.057 cv
3774.97 754.804 3771.63 763.944 3774.37 766.925 cv
3777.12 769.906 3777.94 774.002 3780.43 777.202 cv
3782.92 780.394 3788.44 781.041 3790.67 784.438 cv
3792.88 787.824 3793.69 791.829 3795.63 795.4 cv
3797.55 798.953 3798.21 802.808 3799.84 806.531 cv
3801.47 810.229 3809.09 811.522 3810.41 815.372 cv
3811.72 819.188 3814.25 822.934 3815.24 826.884 cv
3816.23 830.791 3809.15 836.386 3809.82 840.411 cv
3810.47 844.381 3819.75 847.328 3820.08 851.399 cv
3820.41 855.406 3822.07 859.825 3822.07 863.915 cv
1 .870588 .45098 rgb
f
3800.61 863.915 mo
3800.61 868.019 3800.4 872.049 3800.03 876.058 cv
3799.66 880.138 3802.78 884.819 3802.05 888.783 cv
3801.3 892.804 3798.95 896.688 3797.84 900.572 cv
3796.73 904.502 3792.87 907.563 3791.41 911.334 cv
3789.93 915.137 3784.5 916.893 3782.69 920.516 cv
3780.87 924.161 3787.81 932.714 3785.68 936.158 cv
3783.53 939.616 3780.82 943.271 3778.37 946.507 cv
3775.92 949.75 3769.32 949.871 3766.59 952.87 cv
3763.85 955.872 3760.1 957.809 3757.1 960.547 cv
3754.1 963.283 3751.9 966.94 3748.66 969.393 cv
3745.42 971.84 3739.55 970.119 3736.09 972.265 cv
3732.64 974.402 3732.53 982.352 3728.89 984.171 cv
3727.03 985.097 3724.42 984.261 3721.8 983.426 cv
3719.31 982.632 3716.82 981.838 3714.97 982.557 cv
3711.2 984.019 3710.02 993.135 3706.09 994.251 cv
3702.21 995.354 3698.05 997.053 3694.03 997.8 cv
3691.99 998.179 3689.68 996.997 3687.37 995.815 cv
3685.2 994.706 3683.02 993.597 3681.05 993.778 cv
3677.04 994.145 3673.11 993.013 3669.01 993.013 cv
3664.9 993.013 3660.82 995.848 3656.82 995.482 cv
3654.86 995.301 3652.7 996.146 3650.56 996.991 cv
3648.24 997.904 3645.92 998.818 3643.87 998.436 cv
3639.84 997.689 3636.49 992.966 3632.6 991.863 cv
3628.67 990.747 3626.07 985.935 3622.3 984.472 cv
3620.45 983.754 3617.96 984.448 3615.48 985.14 cv
3612.86 985.872 3610.24 986.604 3608.38 985.676 cv
3604.73 983.857 3604.42 975.929 3600.98 973.792 cv
3597.52 971.646 3591.03 973.903 3587.8 971.456 cv
3584.55 969.002 3583.93 963.263 3580.94 960.527 cv
3577.93 957.789 3573.03 956.908 3570.29 953.906 cv
3567.55 950.905 3568.82 944.659 3566.37 941.416 cv
3563.92 938.18 3556.21 938.546 3554.06 935.087 cv
3551.92 931.643 3552.72 926.369 3550.9 922.722 cv
3549.09 919.1 3544.97 916.343 3543.49 912.54 cv
3542.03 908.77 3544.43 903.608 3543.32 899.68 cv
3542.21 895.795 3536.44 892.857 3535.69 888.835 cv
3534.95 884.871 3541.8 879.823 3541.43 875.744 cv
3541.06 871.735 3531.27 868.019 3531.27 863.915 cv
3531.27 859.811 3540.01 855.999 3540.38 851.991 cv
3540.75 847.911 3540.47 843.984 3541.21 840.021 cv
3541.95 835.998 3535.35 830.087 3536.46 826.202 cv
3537.57 822.274 3549.58 821.985 3551.04 818.215 cv
3552.51 814.412 3543.96 806.17 3545.77 802.547 cv
3547.59 798.901 3550.55 795.329 3552.68 791.886 cv
3554.83 788.427 3558.89 785.841 3561.34 782.605 cv
3563.79 779.361 3569.98 779.128 3572.71 776.129 cv
3575.45 773.127 3574.94 766.76 3577.94 764.022 cv
3580.94 761.285 3586.63 761.57 3589.87 759.116 cv
3593.11 756.669 3594 750.497 3597.45 748.352 cv
3599.24 747.243 3601.74 747.341 3604.25 747.437 cv
3606.58 747.527 3608.91 747.616 3610.67 746.741 cv
3614.29 744.934 3618.96 746.012 3622.76 744.538 cv
3626.53 743.076 3630.1 742.092 3634.03 740.976 cv
3637.91 739.873 3641.03 736.521 3645.05 735.773 cv
3649.01 735.037 3652.33 728.246 3656.41 727.873 cv
3660.41 727.506 3664.9 736.743 3669.01 736.743 cv
3673.11 736.743 3676.71 737.247 3680.72 737.613 cv
3682.42 737.768 3684.06 737.766 3685.69 737.763 cv
3687.97 737.76 3690.21 737.756 3692.52 738.187 cv
3694.45 738.545 3696.59 737.855 3698.73 737.164 cv
3701.03 736.418 3703.32 735.673 3705.33 736.246 cv
3707.22 736.782 3709.52 736.309 3711.82 735.835 cv
3714.3 735.324 3716.77 734.814 3718.73 735.573 cv
3722.53 737.048 3723.07 746.256 3726.69 748.063 cv
3730.34 749.882 3734.54 750.372 3737.99 752.509 cv
3741.44 754.655 3746.74 754.245 3749.98 756.692 cv
3753.22 759.145 3751.52 767.376 3754.52 770.113 cv
3755.99 771.455 3759.08 771.185 3762.16 770.914 cv
3765.36 770.632 3768.57 770.352 3769.97 771.882 cv
3772.7 774.881 3776.26 777.824 3778.71 781.068 cv
3781.16 784.303 3780.96 789.814 3783.1 793.272 cv
3785.24 796.716 3783.15 802.535 3784.96 806.18 cv
3786.77 809.804 3791.72 812.003 3793.19 815.807 cv
3794.65 819.577 3789.44 825.399 3790.56 829.328 cv
3791.66 833.212 3801.68 834.956 3802.42 838.977 cv
3803.16 842.941 3798.19 847.826 3798.56 851.907 cv
3798.93 855.914 3800.61 859.811 3800.61 863.915 cv
.984314 .772549 .0823529 rgb
f
3777.21 863.915 mo
3777.21 867.929 3783.45 871.994 3783.04 875.901 cv
3782.63 879.886 3777.67 882.994 3776.86 886.846 cv
3776.03 890.756 3775.73 894.446 3774.51 898.197 cv
3773.28 901.993 3779.31 908.703 3777.7 912.312 cv
3776.08 915.951 3774.16 920.059 3772.18 923.484 cv
3770.18 926.928 3762.86 927.203 3760.53 930.406 cv
3758.19 933.62 3757.03 937.831 3754.37 940.779 cv
3751.71 943.728 3746.62 944.18 3743.67 946.837 cv
3740.72 949.493 3736.85 950.534 3733.63 952.872 cv
3730.43 955.203 3730.6 962.641 3727.16 964.633 cv
3723.73 966.615 3718.41 965.087 3714.77 966.709 cv
3712.88 967.551 3710.65 967.258 3708.4 966.964 cv
3706.36 966.697 3704.32 966.43 3702.51 967.017 cv
3698.76 968.235 3695.66 970.049 3691.75 970.877 cv
3687.9 971.691 3684.81 975.944 3680.83 976.358 cv
3676.92 976.765 3673.02 972.999 3669.01 972.999 cv
3664.99 972.999 3660.93 978.374 3657.02 977.968 cv
3653.04 977.553 3649.99 972.279 3646.14 971.464 cv
3644.36 971.086 3642.52 971.135 3640.7 971.183 cv
3638.53 971.241 3636.37 971.299 3634.33 970.637 cv
3632.54 970.055 3630.47 970.183 3628.4 970.31 cv
3626.1 970.453 3623.79 970.596 3621.89 969.747 cv
3618.25 968.125 3614.31 966.56 3610.89 964.578 cv
3607.44 962.586 3604.01 960.114 3600.81 957.782 cv
3597.6 955.443 3598.47 948.186 3595.52 945.531 cv
3592.57 942.873 3588.61 941.641 3585.96 938.691 cv
3583.3 935.745 3582.48 931.686 3580.14 928.473 cv
3577.81 925.269 3576.94 921.655 3574.95 918.211 cv
3572.97 914.786 3564.05 915.006 3562.43 911.368 cv
3560.82 907.76 3562.75 902.638 3561.51 898.842 cv
3560.3 895.091 3555.77 892.071 3554.94 888.16 cv
3554.12 884.309 3553.74 880.057 3553.32 876.073 cv
3552.92 872.166 3560.55 867.93 3560.55 863.915 cv
3560.55 859.901 3555.27 855.909 3555.68 852.002 cv
3556.09 848.017 3561.53 845.088 3562.35 841.236 cv
3563.17 837.325 3560.96 832.954 3562.18 829.203 cv
3563.41 825.407 3566.15 822.444 3567.76 818.836 cv
3569.38 815.197 3567 809.589 3568.98 806.164 cv
3570.97 802.72 3574.79 800.356 3577.12 797.152 cv
3579.45 793.94 3584.33 793.008 3586.99 790.061 cv
3589.64 787.112 3587.28 779.078 3590.23 776.421 cv
3593.18 773.766 3599.43 774.909 3602.65 772.57 cv
3604.31 771.359 3606.67 771.38 3609.03 771.4 cv
3611.22 771.419 3613.42 771.437 3615.07 770.48 cv
3618.5 768.498 3621.04 765.974 3624.68 764.351 cv
3628.29 762.742 3629.59 755.502 3633.38 754.27 cv
3637.13 753.051 3641.27 752.637 3645.18 751.81 cv
3649.03 750.995 3652.7 746.999 3656.68 746.584 cv
3660.59 746.178 3664.99 751.683 3669.01 751.683 cv
3673.02 751.683 3677 750.262 3680.91 750.668 cv
3684.9 751.083 3688.5 753.303 3692.35 754.117 cv
3696.26 754.945 3699.62 756.933 3703.37 758.151 cv
3705.2 758.744 3707.46 758.214 3709.72 757.686 cv
3712.15 757.116 3714.57 756.545 3716.44 757.38 cv
3720.08 759.003 3721.78 764.595 3725.2 766.577 cv
3728.65 768.569 3730.13 773.039 3733.33 775.371 cv
3736.55 777.71 3742.08 776.83 3745.03 779.486 cv
3747.98 782.142 3749.72 785.905 3752.38 788.855 cv
3755.03 791.802 3758.61 793.904 3760.95 797.117 cv
3763.28 800.321 3768.96 801.615 3770.95 805.059 cv
3772.93 808.483 3769.75 814.704 3771.37 818.342 cv
3772.98 821.952 3781.41 823.199 3782.64 826.995 cv
3783.86 830.745 3780 836.234 3780.83 840.145 cv
3781.65 843.997 3786.42 847.55 3786.84 851.534 cv
3787.24 855.442 3777.21 859.901 3777.21 863.915 cv
.619608 .486275 .0509804 rgb
f
gsave
3700.8 1077.86 mo
3705.14 1055.19 li
3716.96 1074.69 li
3711.64 1075.95 3706.26 1077 3700.8 1077.86 cv
3629.5 1077.16 mo
3608.48 1073.45 3588.5 1066.69 3570.06 1057.36 cv
3616.26 996.769 li
3618.08 998.261 3619.87 999.815 3622.09 1000.58 cv
3624.13 1001.28 3626.09 1002.1 3628.07 1002.87 cv
3629.5 1077.16 li
3795.97 1037.83 mo
3771.12 971.374 li
3772.4 970.294 3773.72 969.241 3775 968.154 cv
3844.27 987.977 li
3830.95 1007.08 3814.63 1023.92 3795.97 1037.83 cv
3520.85 1023.14 mo
3500.3 1004.13 3483.46 981.156 3471.53 955.451 cv
3541.9 938.943 li
3543.14 940.806 3544.45 942.634 3545.66 944.495 cv
3547.89 947.891 3553.91 948.36 3556.4 951.554 cv
3557.08 952.422 3557.23 953.731 3557.16 955.239 cv
3520.85 1023.14 li
3874.09 925.94 mo
3816.95 889.424 li
3817.06 889.169 3817.14 888.908 3817.18 888.64 cv
3817.84 884.668 3809.97 879.702 3810.3 875.631 cv
3810.63 871.625 3822.07 868.006 3822.07 863.915 cv
3822.07 862.239 3821.8 860.508 3821.44 858.773 cv
3881.57 840.914 li
3882.43 848.766 3882.88 856.737 3882.88 864.82 cv
3882.88 886.052 3879.81 906.561 3874.09 925.94 cv
3799.11 804.698 mo
3799.08 804.611 3799.05 804.524 3799.01 804.436 cv
3850.85 751.692 li
3859 764.892 3865.77 779.035 3870.95 793.922 cv
3799.11 804.698 li
clp
3471.53 751.692 mo
3882.88 751.692 li
3882.88 1077.86 li
3471.53 1077.86 li
cp
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
grestore
3799.01 804.436 mo
3797.92 801.381 3797.19 798.29 3795.63 795.4 cv
3794.91 794.083 3794.35 792.707 3793.82 791.325 cv
3843.61 740.721 li
3846.13 744.299 3848.55 747.959 3850.85 751.692 cv
3799.01 804.436 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hg
qt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pc
o`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s82Hgqt'jbo)JUWs8)6bqX=I\mf3.Ms7u!\q<J"Ukl:G@s7k^UpZ2AKirAc2s7Y=Lp>#]@g]-s"s7P"D
o[X!6e,T$es7=S:o$.4*bQ%.Ts7+/0n\tOt_uK5As6m]%n%A\g])V3.s6[5omBciZZ2a0os6HfelDjmL
W;l+Zs66<Ykb8%?T)[uDs6#gMk*Q,1PlKj.s5]:AjGj3"MuVgns5Jb4iIh0hJH+PUs588(hg#1YG5pE?
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~qYL'bqYL'bqYL'bqYL'bqYBs_q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XUXp\4FVp\4CTp@e4Rp@e4R
p@e1Pp%A"Np%@tLo^qeJo^qeJo^qbHoCMSFoCMPDo()ABo()AAnaZ/>naZ/>naZ/=nF5r:nF5r9n*f`6
n*f`5mdBN2mdBN1mHs<.mHs<-m-O**m-O*)lg*m&lg*m%lK[[!l07Hsl07Hrkih6okih6okND$kkND$k
k2tggk2tggjlPUcjlPUcjQ,C_j5]1[j5]1[io8tWio8tWiSibSi8EPOi8EPOhr!>Khr!>KhVR,GhVR,G
~>
<~oCMSFoCDJCo'u8?naQ&;nF,i7n*]W3mdBK0m-O'(lg*j$lK[Wukih3mkND!ijlPRajQ,@]io8qUi8EMM
hVR)Egt^Z=gY:H9g"G$1f@SU)e^`1!e'landF$=fcd0n^c-=MWbfe2Pb/qcHaN)?@`l5p8`5BL0_8*k$
^V7Fq]tD"i]=PSa\[]/Y[^NTN['R*EZE^[=Yck75Y-"h-XK/A#WMlbnVl$>fV50l]U8"?TTV%gISXl:@
S!ob5R$a5,QBd]!PEV/mOcb`eO,f6[N/W[QMM[1GLPCP;KS4u1JqAQ(It)oqI!g9fH?sj]GB\4RF`heI
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
3770.38 750.535 mo
3768.36 748.574 3766.32 746.453 3764.2 744.624 cv
3789.2 686.963 li
3800.81 694.942 3811.6 704.029 3821.42 714.071 cv
3770.38 750.535 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
3773.21 762.951 mo
3773.05 759.064 3774.08 753.985 3771.98 752.057 cv
3771.45 751.566 3770.92 751.056 3770.38 750.535 cv
3821.42 714.071 li
3824.68 717.399 3827.82 720.826 3830.86 724.358 cv
3773.21 762.951 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3680.86 723.122 mo
3680.8 723.122 3680.74 723.12 3680.68 723.115 cv
3676.68 722.787 3673.1 719.411 3669.01 719.411 cv
3668.63 719.411 3668.25 719.433 3667.87 719.472 cv
3652.29 649.703 li
3657.23 649.364 3662.22 649.192 3667.25 649.192 cv
3688.48 649.192 3709 652.262 3728.38 657.98 cv
3692.91 713.157 li
3691.19 713.772 3689.29 715.912 3687.37 718.051 cv
3685.11 720.587 3682.83 723.122 3680.86 723.122 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
3821.44 858.773 mo
3820.94 856.273 3820.28 853.764 3820.08 851.399 cv
3819.96 849.923 3818.67 848.593 3817.03 847.31 cv
3879.72 827.867 li
3880.47 832.169 3881.08 836.53 3881.57 840.914 cv
3821.44 858.773 li
3811.05 817.04 mo
3810.82 816.485 3810.6 815.929 3810.41 815.372 cv
3809.09 811.522 3801.47 810.229 3799.84 806.531 cv
3799.57 805.923 3799.33 805.311 3799.11 804.698 cv
3870.95 793.922 li
3872.74 799.068 3874.34 804.307 3875.75 809.623 cv
3811.05 817.04 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3844.27 987.977 mo
3775 968.154 li
3776.26 967.084 3777.48 965.98 3778.58 964.785 cv
3781.12 962.03 3778.93 955.411 3780.56 951.899 cv
3853.03 974.346 li
3850.28 979.003 3847.35 983.554 3844.27 987.977 cv
3870.51 936.983 mo
3809.28 896.148 li
3811.8 893.911 3815.87 891.994 3816.95 889.424 cv
3874.09 925.94 li
3872.99 929.662 3871.8 933.347 3870.51 936.983 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3716.96 1074.69 mo
3705.14 1055.19 li
3699.14 1024 li
3702.49 1007.61 li
3702.85 1007.71 3703.2 1007.78 3703.55 1007.83 cv
3738.71 1068.33 li
3731.62 1070.82 3724.36 1072.94 3716.96 1074.69 cv
3785.41 1045.22 mo
3763 981.922 li
3765.38 979.271 3766.79 975.29 3769.36 972.926 cv
3769.93 972.398 3770.52 971.883 3771.12 971.374 cv
3795.97 1037.83 li
3792.53 1040.39 3789.01 1042.86 3785.41 1045.22 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3687.8 1079.48 mo
3699.14 1024 li
3705.14 1055.19 li
3700.8 1077.86 li
3696.51 1078.53 3692.17 1079.07 3687.8 1079.48 cv
3643.12 1079.12 mo
3638.53 1078.6 3634 1077.95 3629.5 1077.16 cv
3628.07 1002.87 li
3629.79 1003.53 3631.54 1004.16 3633.37 1004.62 cv
3635.63 1005.19 3637.57 1007.41 3639.58 1009.31 cv
3643.12 1079.12 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3570.06 1057.36 mo
3565.25 1054.92 3560.55 1052.32 3555.95 1049.54 cv
3602.58 993.404 li
3602.92 993.425 3603.26 993.433 3603.61 993.433 cv
3604.35 993.433 3605.1 993.395 3605.86 993.356 cv
3606.62 993.317 3607.38 993.279 3608.12 993.279 cv
3609.5 993.279 3610.82 993.411 3611.99 993.924 cv
3613.55 994.612 3614.91 995.674 3616.26 996.769 cv
3570.06 1057.36 li
3531.7 1032.53 mo
3527.98 1029.52 3524.36 1026.38 3520.85 1023.14 cv
3557.16 955.239 li
3556.96 959.294 3555.07 964.783 3557.08 966.956 cv
3558.52 968.524 3561.37 968.737 3564.19 968.985 cv
3531.7 1032.53 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3471.53 955.451 mo
3469.51 951.101 3467.64 946.672 3465.91 942.171 cv
3535.66 926.198 li
3536.69 928.937 3537.64 931.717 3539.02 934.26 cv
3539.89 935.868 3540.87 937.417 3541.9 938.943 cv
3471.53 955.451 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3657.06 722.201 mo
3656.58 722.201 3656.09 722.067 3655.58 721.831 cv
3638.09 651.147 li
3642.78 650.513 3647.51 650.03 3652.29 649.703 cv
3667.87 719.472 li
3664.23 719.853 3660.89 721.897 3657.26 722.193 cv
3657.19 722.199 3657.12 722.201 3657.06 722.201 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3764.2 744.624 mo
3763.73 744.217 3763.25 743.824 3762.77 743.451 cv
3760.09 741.356 3756 740.787 3752.74 739.334 cv
3778 679.767 li
3781.81 682.053 3785.54 684.453 3789.2 686.963 cv
3764.2 744.624 li
3702.02 722.233 mo
3699.41 719.236 3697.31 713.526 3694.18 713.009 cv
3694.07 712.99 3693.95 712.981 3693.84 712.981 cv
3693.54 712.981 3693.23 713.043 3692.91 713.157 cv
3728.38 657.98 li
3732.67 659.246 3736.9 660.64 3741.08 662.162 cv
3702.02 722.233 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3752.74 739.334 mo
3752.13 739.061 3751.55 738.756 3751.01 738.403 cv
3747.63 736.188 3743.7 734.445 3740.12 732.507 cv
3736.57 730.58 3731.34 731.94 3727.61 730.305 cv
3723.92 728.68 3719.29 729.978 3715.44 728.656 cv
3711.63 727.346 3708.41 724.957 3704.45 723.96 cv
3703.58 723.738 3702.78 723.099 3702.02 722.233 cv
3741.08 662.162 li
3754 666.873 3766.36 672.787 3778 679.767 cv
3752.74 739.334 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[
q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tT
li6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bGs7kp[q!7tTli6bG
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s7kp[q!.nRkl:D>s7YORp>Z,Fi;`K+s7G(Go@X*7ec53hrpeA7n]h(&b5UkLrpI]'m_Jhh^&IB/rp.#l
lE^ESYQ!derog<[kG8+>T`4&DroBLGj-BT'Oo=:!rS`V3i._-eJc4GRrS;btgi`SMEW+U.rRko`fOXs4
@/\Y]r7+mHe5Q:o:]/X5r6\"3cp@TU4oEPar6."qb:ie9/,[L9r5^&Y`uY&s)#M5bqnip@_@$1V"oH(8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~p\4FVp\4FVp\+=Sp@e4Rp@\+Op%A"Np%@tLo^qeJo^qbHoCMPDo()ABo()>@naZ,<nF5r:nF5o8n*f]4
mdBK0mHs<.mHs9,m-O'(lg*j$lK[Wul07Hsl07Eqkih3mkND$jk2tgfjlPUbjQ,C^j5]1Zio8tWio8tV
iSibRi8EPNhr!>JhVR,Fh;-oBgt^]>gY:K:g=k96g"G'2f\"j.f@SX*f%/F&e^`4#eC<!te'ldpdaHRl
dF$@hd*U.dcd0q`cHa\Zbfn;TbKJ)Pb0%lLaiVZHaN2HDa2c6@`l?$<`Pod6_o'C0_SX1,_83t(^qdb$
~>
<~lK[["lKRQski_-kk2k^cjQ#:[io/kSi8EMLh;-lAgY:H8f\"g,e^`1!e'lamd*U+acHXSVbK@rJa2Z*:
`5BI._8*h"^:h1k]",>\\$i]OZa-j@Yck43XK/A$WMl_lV50o^U7n6PSt2FBS!ob4Q^3o$PEM&iO,f3Y
Mi*@ILPCM9K7\Z)IsufnH[9s^GBS+NF)l8>Df0E.CMIQsB4b^b@UWYO?<pf?>$4s/<`N*t;Gg7d9h\2P
8Ou?@770C-5X.Fq4?>J^2`<NM1GUX;/hJV).Oc_l,pX]Y+<MXF*#fe5(D[`!&ePZc%1EUO#m^b?"9S]+
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
3793.82 791.325 mo
3792.9 788.959 3792.07 786.575 3790.67 784.438 cv
3788.44 781.041 3782.92 780.394 3780.43 777.202 cv
3777.94 774.002 3777.12 769.906 3774.37 766.925 cv
3773.55 766.037 3773.28 764.601 3773.21 762.951 cv
3830.86 724.358 li
3835.36 729.598 3839.62 735.062 3843.61 740.721 cv
3793.82 791.325 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3817.03 847.31 mo
3814.15 845.055 3810.24 842.941 3809.82 840.411 cv
3809.15 836.386 3816.23 830.791 3815.24 826.884 cv
3814.39 823.511 3812.43 820.286 3811.05 817.04 cv
3875.75 809.623 li
3877.33 815.61 3878.66 821.688 3879.72 827.867 cv
3817.03 847.31 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3853.03 974.346 mo
3780.56 951.899 li
3780.69 951.613 3780.85 951.348 3781.04 951.106 cv
3783.53 947.914 3794.82 950.963 3797.04 947.567 cv
3799.26 944.182 3793.07 935.667 3795.01 932.096 cv
3796.93 928.542 3807.48 929.099 3809.12 925.375 cv
3810.74 921.677 3801.73 913.781 3803.05 909.932 cv
3804.36 906.116 3806.3 902.891 3807.3 898.941 cv
3807.56 897.924 3808.3 897.012 3809.28 896.148 cv
3870.51 936.983 li
3865.86 950.065 3859.99 962.564 3853.03 974.346 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3738.71 1068.33 mo
3703.55 1007.83 li
3703.82 1007.86 3704.08 1007.88 3704.33 1007.88 cv
3704.71 1007.88 3705.08 1007.84 3705.43 1007.75 cv
3709.38 1006.76 3714.14 1007.8 3717.95 1006.49 cv
3721.8 1005.17 3726.72 1005.54 3730.42 1003.92 cv
3734.14 1002.28 3734.58 993.593 3738.14 991.665 cv
3738.84 991.287 3739.68 991.145 3740.62 991.145 cv
3742.02 991.145 3743.62 991.466 3745.23 991.786 cv
3746.83 992.107 3748.44 992.428 3749.84 992.428 cv
3750.88 992.428 3751.81 992.252 3752.54 991.771 cv
3755.94 989.548 3758.57 985.575 3761.76 983.086 cv
3762.21 982.741 3762.61 982.349 3763 981.922 cv
3785.41 1045.22 li
3770.96 1054.7 3755.29 1062.5 3738.71 1068.33 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3667.25 1080.45 mo
3659.09 1080.45 3651.04 1080 3643.12 1079.12 cv
3639.58 1009.31 li
3641.05 1010.71 3642.56 1011.93 3644.26 1012.21 cv
3644.41 1012.24 3644.56 1012.25 3644.71 1012.25 cv
3646.62 1012.25 3648.75 1010.37 3650.88 1008.49 cv
3653.01 1006.61 3655.16 1004.73 3657.09 1004.73 cv
3657.17 1004.73 3657.25 1004.73 3657.33 1004.74 cv
3661.34 1005.07 3664.92 1015.42 3669.01 1015.42 cv
3673.1 1015.42 3677.21 1011.59 3681.22 1011.27 cv
3685.29 1010.93 3688.5 1005.15 3692.47 1004.49 cv
3692.73 1004.45 3692.99 1004.43 3693.26 1004.43 cv
3695.01 1004.43 3696.91 1005.29 3698.81 1006.16 cv
3700.05 1006.72 3701.3 1007.29 3702.49 1007.61 cv
3699.14 1024 li
3687.8 1079.48 li
3681.03 1080.12 3674.18 1080.45 3667.25 1080.45 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3555.95 1049.54 mo
3547.47 1044.42 3539.37 1038.73 3531.7 1032.53 cv
3564.19 968.985 li
3566.73 969.209 3569.23 969.462 3570.65 970.764 cv
3573.63 973.509 3575.92 976.906 3579.12 979.401 cv
3582.32 981.89 3585.8 983.864 3589.19 986.087 cv
3592.58 988.304 3595.8 990.658 3599.37 992.595 cv
3600.33 993.115 3601.42 993.332 3602.58 993.404 cv
3555.95 1049.54 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3454.83 902.123 mo
3452.72 890.008 3451.62 877.54 3451.62 864.82 cv
3451.62 860.481 3451.75 856.179 3452 851.903 cv
3513.38 874.132 li
3454.83 902.123 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
3458.68 919.761 mo
3457.16 913.973 3455.87 908.091 3454.83 902.123 cv
3513.38 874.132 li
3525.27 873.218 li
3525.77 874.056 3526.12 874.9 3526.19 875.755 cv
3526.53 879.827 3526.05 883.696 3526.71 887.667 cv
3526.77 888.062 3526.78 888.469 3526.74 888.886 cv
3458.68 919.761 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3513.38 874.132 mo
3513.38 874.132 li
3452 851.903 li
3452.41 844.985 3453.14 838.143 3454.19 831.415 cv
3524.96 856.808 li
3522.47 859.129 3519.4 861.43 3519.4 863.915 cv
3519.4 867.132 3523.4 870.134 3525.27 873.218 cv
3513.38 874.132 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3544.42 780.271 mo
3517.08 762.141 li
3544.42 780.271 li
3544.42 780.271 3544.42 780.271 3544.42 780.271 cv
3517.08 762.141 mo
3477.84 761.674 li
3483.58 751.153 3490.17 741.174 3497.52 731.809 cv
3517.08 762.141 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
3541.37 784.528 mo
3468.62 780.761 li
3471.38 774.232 3474.47 767.855 3477.84 761.674 cv
3517.08 762.141 li
3544.42 780.271 li
3543.84 780.629 3543.35 781.057 3543 781.587 cv
3542.39 782.512 3541.86 783.503 3541.37 784.528 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3544.42 780.271 mo
3517.08 762.141 li
3497.52 731.809 li
3501.57 726.64 3505.86 721.658 3510.37 716.885 cv
3550.79 778.24 li
3548.53 778.818 3546.08 779.262 3544.42 780.271 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3605.96 728.982 mo
3580.31 673.936 li
3605.96 728.982 li
3605.96 728.982 li
3580.31 673.936 mo
3580.31 673.936 li
3575.56 669.6 li
3577.23 668.813 3578.9 668.053 3580.6 667.308 cv
3580.31 673.936 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
3597.25 736.29 mo
3546.63 686.054 li
3555.8 679.86 3565.47 674.348 3575.56 669.6 cv
3580.31 673.936 li
3605.96 728.982 li
3603.76 731.073 3601.89 733.86 3599.37 735.225 cv
3598.68 735.602 3597.97 735.953 3597.25 736.29 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3605.96 728.982 mo
3580.31 673.936 li
3580.6 667.308 li
3590.3 663.047 3600.38 659.475 3610.77 656.664 cv
3614.59 725.609 li
3612.61 725.845 3610.65 726.139 3608.91 726.904 cv
3607.83 727.38 3606.86 728.122 3605.96 728.982 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3465.91 942.171 mo
3463.1 934.88 3460.69 927.41 3458.68 919.761 cv
3526.74 888.886 li
3526.38 892.719 3522.06 897.378 3522.95 900.902 cv
3523.95 904.852 3526.82 908.464 3528.13 912.28 cv
3529.45 916.129 3532.75 919.272 3534.37 922.97 cv
3534.84 924.028 3535.26 925.11 3535.66 926.198 cv
3465.91 942.171 li
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3524.96 856.808 mo
3454.19 831.415 li
3456.94 813.724 3461.84 796.753 3468.62 780.761 cv
3541.37 784.528 li
3540.07 787.256 3539.05 790.226 3537.64 792.821 cv
3535.71 796.375 3531.9 799.332 3530.27 803.055 cv
3528.64 806.753 3531.57 812.428 3530.25 816.278 cv
3528.94 820.095 3528.7 824.178 3527.7 828.128 cv
3526.71 832.035 3528.72 836.361 3528.05 840.386 cv
3527.39 844.356 3528.39 848.155 3528.05 852.227 cv
3527.92 853.799 3526.56 855.308 3524.96 856.808 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3550.79 778.24 mo
3510.37 716.885 li
3521.27 705.33 3533.43 694.98 3546.63 686.054 cv
3597.25 736.29 li
3594.29 737.689 3591.2 738.857 3588.48 740.642 cv
3585.08 742.866 3582.97 746.78 3579.78 749.269 cv
3576.58 751.763 3572.97 753.604 3569.99 756.349 cv
3567.01 759.095 3562.38 760.248 3559.64 763.23 cv
3556.89 766.21 3558.27 772.583 3555.77 775.783 cv
3554.77 777.07 3552.86 777.711 3550.79 778.24 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3633.2 727.184 mo
3631.54 727.184 3629.7 726.445 3627.87 725.707 cv
3626.03 724.969 3624.2 724.231 3622.56 724.231 cv
3622.07 724.231 3621.59 724.299 3621.13 724.455 cv
3619.09 725.155 3616.83 725.345 3614.59 725.609 cv
3610.77 656.664 li
3619.66 654.257 3628.78 652.405 3638.09 651.147 cv
3655.58 721.831 li
3654.01 721.098 3652.32 719.383 3650.63 717.668 cv
3648.4 715.402 3646.17 713.136 3644.24 713.136 cv
3644.11 713.136 3643.98 713.146 3643.86 713.168 cv
3639.83 713.834 3638.25 726.062 3634.34 727.049 cv
3633.97 727.142 3633.59 727.184 3633.2 727.184 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
3669.01 1015.42 mo
3664.92 1015.42 3661.34 1005.07 3657.33 1004.74 cv
3657.25 1004.73 3657.17 1004.73 3657.09 1004.73 cv
3655.16 1004.73 3653.01 1006.61 3650.88 1008.49 cv
3648.75 1010.37 3646.62 1012.25 3644.71 1012.25 cv
3644.56 1012.25 3644.41 1012.24 3644.26 1012.21 cv
3642.56 1011.93 3641.05 1010.71 3639.58 1009.31 cv
3637.57 1007.41 3635.63 1005.19 3633.37 1004.62 cv
3631.54 1004.16 3629.79 1003.53 3628.07 1002.87 cv
3626.09 1002.1 3624.13 1001.28 3622.09 1000.58 cv
3619.87 999.815 3618.08 998.261 3616.26 996.769 cv
3614.91 995.674 3613.55 994.612 3611.99 993.924 cv
3610.82 993.411 3609.5 993.279 3608.12 993.279 cv
3607.38 993.279 3606.62 993.317 3605.86 993.356 cv
3605.1 993.395 3604.35 993.433 3603.61 993.433 cv
3603.26 993.433 3602.92 993.425 3602.58 993.404 cv
3601.42 993.332 3600.33 993.115 3599.37 992.595 cv
3595.8 990.658 3592.58 988.304 3589.19 986.087 cv
3585.8 983.864 3582.32 981.89 3579.12 979.401 cv
3575.92 976.906 3573.63 973.509 3570.65 970.764 cv
3569.23 969.462 3566.73 969.209 3564.19 968.985 cv
3561.37 968.737 3558.52 968.524 3557.08 966.956 cv
3555.07 964.783 3556.96 959.294 3557.16 955.239 cv
3557.23 953.731 3557.08 952.422 3556.4 951.554 cv
3553.91 948.36 3547.89 947.891 3545.66 944.495 cv
3544.45 942.634 3543.14 940.806 3541.9 938.943 cv
3540.87 937.417 3539.89 935.868 3539.02 934.26 cv
3537.64 931.717 3536.69 928.937 3535.66 926.198 cv
3535.26 925.11 3534.84 924.028 3534.37 922.97 cv
3532.75 919.272 3529.45 916.129 3528.13 912.28 cv
3526.82 908.464 3523.95 904.852 3522.95 900.902 cv
3522.06 897.378 3526.38 892.719 3526.74 888.886 cv
3526.78 888.469 3526.77 888.062 3526.71 887.667 cv
3526.05 883.696 3526.53 879.827 3526.19 875.755 cv
3526.12 874.9 3525.77 874.056 3525.27 873.218 cv
3523.4 870.134 3519.4 867.132 3519.4 863.915 cv
3519.4 861.43 3522.47 859.129 3524.96 856.808 cv
3526.56 855.308 3527.92 853.799 3528.05 852.227 cv
3528.39 848.155 3527.39 844.356 3528.05 840.386 cv
3528.72 836.361 3526.71 832.035 3527.7 828.128 cv
3528.7 824.178 3528.94 820.095 3530.25 816.278 cv
3531.57 812.428 3528.64 806.753 3530.27 803.055 cv
3531.9 799.332 3535.71 796.375 3537.64 792.821 cv
3539.05 790.226 3540.07 787.256 3541.37 784.528 cv
3541.86 783.503 3542.39 782.512 3543 781.587 cv
3543.35 781.057 3543.84 780.629 3544.42 780.271 cv
3544.42 780.271 3544.42 780.271 3544.42 780.271 cv
3546.08 779.262 3548.53 778.818 3550.79 778.24 cv
3552.86 777.711 3554.77 777.07 3555.77 775.783 cv
3558.27 772.583 3556.89 766.21 3559.64 763.23 cv
3562.38 760.248 3567.01 759.095 3569.99 756.349 cv
3572.97 753.604 3576.58 751.763 3579.78 749.269 cv
3582.97 746.78 3585.08 742.866 3588.48 740.642 cv
3591.2 738.857 3594.29 737.689 3597.25 736.29 cv
3597.97 735.953 3598.68 735.602 3599.37 735.225 cv
3601.89 733.86 3603.76 731.073 3605.96 728.982 cv
3605.96 728.982 li
3606.86 728.122 3607.83 727.38 3608.91 726.904 cv
3610.65 726.139 3612.61 725.845 3614.59 725.609 cv
3616.83 725.345 3619.09 725.155 3621.13 724.455 cv
3621.59 724.299 3622.07 724.231 3622.56 724.231 cv
3624.2 724.231 3626.03 724.969 3627.87 725.707 cv
3629.7 726.445 3631.54 727.184 3633.2 727.184 cv
3633.59 727.184 3633.97 727.142 3634.34 727.049 cv
3638.25 726.062 3639.83 713.834 3643.86 713.168 cv
3643.98 713.146 3644.11 713.136 3644.24 713.136 cv
3646.17 713.136 3648.4 715.402 3650.63 717.668 cv
3652.32 719.383 3654.01 721.098 3655.58 721.831 cv
3656.09 722.067 3656.58 722.201 3657.06 722.201 cv
3657.12 722.201 3657.19 722.199 3657.26 722.193 cv
3660.89 721.897 3664.23 719.853 3667.87 719.472 cv
3668.25 719.433 3668.63 719.411 3669.01 719.411 cv
3673.1 719.411 3676.68 722.787 3680.68 723.115 cv
3680.74 723.12 3680.8 723.122 3680.86 723.122 cv
3682.83 723.122 3685.11 720.587 3687.37 718.051 cv
3689.29 715.912 3691.19 713.772 3692.91 713.157 cv
3693.23 713.043 3693.54 712.981 3693.84 712.981 cv
3693.95 712.981 3694.07 712.99 3694.18 713.009 cv
3697.31 713.526 3699.41 719.236 3702.02 722.233 cv
3702.78 723.099 3703.58 723.738 3704.45 723.96 cv
3708.41 724.957 3711.63 727.346 3715.44 728.656 cv
3719.29 729.978 3723.92 728.68 3727.61 730.305 cv
3731.34 731.94 3736.57 730.58 3740.12 732.507 cv
3743.7 734.445 3747.63 736.188 3751.01 738.403 cv
3751.55 738.756 3752.13 739.061 3752.74 739.334 cv
3756 740.787 3760.09 741.356 3762.77 743.451 cv
3763.25 743.824 3763.73 744.217 3764.2 744.624 cv
3766.32 746.453 3768.36 748.574 3770.38 750.535 cv
3770.92 751.056 3771.45 751.566 3771.98 752.057 cv
3774.08 753.985 3773.05 759.064 3773.21 762.951 cv
3773.28 764.601 3773.55 766.037 3774.37 766.925 cv
3777.12 769.906 3777.94 774.002 3780.43 777.202 cv
3782.92 780.394 3788.44 781.041 3790.67 784.438 cv
3792.07 786.575 3792.9 788.959 3793.82 791.325 cv
3794.35 792.707 3794.91 794.083 3795.63 795.4 cv
3797.19 798.29 3797.92 801.381 3799.01 804.436 cv
3799.05 804.524 3799.08 804.611 3799.11 804.698 cv
3799.33 805.311 3799.57 805.923 3799.84 806.531 cv
3801.47 810.229 3809.09 811.522 3810.41 815.372 cv
3810.6 815.929 3810.82 816.485 3811.05 817.04 cv
3812.43 820.286 3814.39 823.511 3815.24 826.884 cv
3816.23 830.791 3809.15 836.386 3809.82 840.411 cv
3810.24 842.941 3814.15 845.055 3817.03 847.31 cv
3818.67 848.593 3819.96 849.923 3820.08 851.399 cv
3820.28 853.764 3820.94 856.273 3821.44 858.773 cv
3821.8 860.508 3822.07 862.239 3822.07 863.915 cv
3822.07 868.006 3810.63 871.625 3810.3 875.631 cv
3809.97 879.702 3817.84 884.668 3817.18 888.64 cv
3817.14 888.908 3817.06 889.169 3816.95 889.424 cv
3815.87 891.994 3811.8 893.911 3809.28 896.148 cv
3808.3 897.012 3807.56 897.924 3807.3 898.941 cv
3806.3 902.891 3804.36 906.116 3803.05 909.932 cv
3801.73 913.781 3810.74 921.677 3809.12 925.375 cv
3807.48 929.099 3796.93 928.542 3795.01 932.096 cv
3793.07 935.667 3799.26 944.182 3797.04 947.567 cv
3794.82 950.963 3783.53 947.914 3781.04 951.106 cv
3780.85 951.348 3780.69 951.613 3780.56 951.899 cv
3778.93 955.411 3781.12 962.03 3778.58 964.785 cv
3777.48 965.98 3776.26 967.084 3775 968.154 cv
3773.72 969.241 3772.4 970.294 3771.12 971.374 cv
3770.52 971.883 3769.93 972.398 3769.36 972.926 cv
3766.79 975.29 3765.38 979.271 3763 981.922 cv
3762.61 982.349 3762.21 982.741 3761.76 983.086 cv
3758.57 985.575 3755.94 989.548 3752.54 991.771 cv
3751.81 992.252 3750.88 992.428 3749.84 992.428 cv
3748.44 992.428 3746.83 992.107 3745.23 991.786 cv
3743.62 991.466 3742.02 991.145 3740.62 991.145 cv
3739.68 991.145 3738.84 991.287 3738.14 991.665 cv
3734.58 993.593 3734.14 1002.28 3730.42 1003.92 cv
3726.72 1005.54 3721.8 1005.17 3717.95 1006.49 cv
3714.14 1007.8 3709.38 1006.76 3705.43 1007.75 cv
3705.08 1007.84 3704.71 1007.88 3704.33 1007.88 cv
3704.08 1007.88 3703.82 1007.86 3703.55 1007.83 cv
3703.2 1007.78 3702.85 1007.71 3702.49 1007.61 cv
3701.3 1007.29 3700.05 1006.72 3698.81 1006.16 cv
3696.91 1005.29 3695.01 1004.43 3693.26 1004.43 cv
3692.99 1004.43 3692.73 1004.45 3692.47 1004.49 cv
3688.5 1005.15 3685.29 1010.93 3681.22 1011.27 cv
3677.21 1011.59 3673.1 1015.42 3669.01 1015.42 cv
3620.49 984.169 mo
3621.14 984.169 3621.75 984.257 3622.3 984.472 cv
3626.07 985.935 3628.67 990.747 3632.6 991.863 cv
3636.49 992.966 3639.84 997.689 3643.87 998.436 cv
3644.2 998.497 3644.53 998.525 3644.87 998.525 cv
3646.67 998.525 3648.61 997.758 3650.56 996.991 cv
3652.51 996.224 3654.46 995.457 3656.27 995.457 cv
3656.45 995.457 3656.63 995.465 3656.82 995.482 cv
3657.06 995.504 3657.3 995.515 3657.55 995.515 cv
3661.32 995.514 3665.15 993.013 3669.01 993.013 cv
3672.54 993.013 3675.94 993.851 3679.37 993.851 cv
3679.93 993.851 3680.49 993.829 3681.05 993.778 cv
3681.19 993.765 3681.34 993.759 3681.48 993.759 cv
3683.34 993.759 3685.36 994.787 3687.37 995.815 cv
3689.38 996.843 3691.39 997.872 3693.22 997.872 cv
3693.5 997.872 3693.77 997.849 3694.03 997.8 cv
3698.05 997.053 3702.21 995.354 3706.09 994.251 cv
3710.02 993.135 3711.2 984.019 3714.97 982.557 cv
3715.48 982.359 3716.04 982.276 3716.63 982.276 cv
3718.19 982.276 3720 982.851 3721.8 983.426 cv
3723.6 984.001 3725.4 984.577 3726.96 984.577 cv
3727.66 984.577 3728.31 984.459 3728.89 984.171 cv
3732.53 982.352 3732.64 974.402 3736.09 972.265 cv
3739.55 970.119 3745.42 971.84 3748.66 969.393 cv
3751.9 966.94 3754.1 963.283 3757.1 960.547 cv
3760.1 957.809 3763.85 955.872 3766.59 952.87 cv
3769.32 949.871 3775.92 949.75 3778.37 946.507 cv
3780.82 943.271 3783.53 939.616 3785.68 936.158 cv
3787.81 932.714 3780.87 924.161 3782.69 920.516 cv
3784.5 916.893 3789.93 915.137 3791.41 911.334 cv
3792.87 907.563 3796.73 904.502 3797.84 900.572 cv
3798.95 896.688 3801.3 892.804 3802.05 888.783 cv
3802.78 884.819 3799.66 880.138 3800.03 876.058 cv
3800.4 872.049 3800.61 868.019 3800.61 863.915 cv
3800.61 859.811 3798.93 855.914 3798.56 851.907 cv
3798.19 847.826 3803.16 842.941 3802.42 838.977 cv
3801.68 834.956 3791.66 833.212 3790.56 829.328 cv
3789.44 825.399 3794.65 819.577 3793.19 815.807 cv
3791.72 812.003 3786.77 809.804 3784.96 806.18 cv
3783.15 802.535 3785.24 796.716 3783.1 793.272 cv
3780.96 789.814 3781.16 784.303 3778.71 781.068 cv
3776.26 777.824 3772.7 774.881 3769.97 771.882 cv
3769.12 770.954 3767.61 770.692 3765.84 770.692 cv
3764.68 770.692 3763.42 770.803 3762.16 770.914 cv
3760.9 771.025 3759.63 771.135 3758.48 771.135 cv
3756.82 771.135 3755.39 770.905 3754.52 770.113 cv
3751.52 767.376 3753.22 759.145 3749.98 756.692 cv
3746.74 754.245 3741.44 754.655 3737.99 752.509 cv
3734.54 750.372 3730.34 749.882 3726.69 748.063 cv
3723.07 746.256 3722.53 737.048 3718.73 735.573 cv
3718.01 735.295 3717.23 735.187 3716.4 735.187 cv
3714.96 735.187 3713.39 735.511 3711.82 735.835 cv
3710.25 736.159 3708.67 736.484 3707.23 736.484 cv
3706.57 736.484 3705.93 736.415 3705.33 736.246 cv
3704.83 736.104 3704.32 736.043 3703.79 736.043 cv
3702.18 736.043 3700.46 736.603 3698.73 737.164 cv
3697 737.725 3695.26 738.285 3693.63 738.285 cv
3693.26 738.285 3692.88 738.254 3692.52 738.187 cv
3690.41 737.795 3688.37 737.763 3686.3 737.763 cv
3686.1 737.763 3685.89 737.763 3685.69 737.763 cv
3685.49 737.763 3685.29 737.764 3685.1 737.764 cv
3683.66 737.764 3682.21 737.749 3680.72 737.613 cv
3676.71 737.247 3673.11 736.743 3669.01 736.743 cv
3664.98 736.743 3660.59 727.862 3656.64 727.862 cv
3656.56 727.862 3656.48 727.866 3656.41 727.873 cv
3652.33 728.246 3649.01 735.037 3645.05 735.773 cv
3641.03 736.521 3637.91 739.873 3634.03 740.976 cv
3630.1 742.092 3626.53 743.076 3622.76 744.538 cv
3618.96 746.012 3614.29 744.934 3610.67 746.741 cv
3609.45 747.35 3607.95 747.492 3606.36 747.492 cv
3605.67 747.492 3604.96 747.465 3604.25 747.437 cv
3603.54 747.41 3602.83 747.382 3602.13 747.382 cv
3600.38 747.382 3598.73 747.558 3597.45 748.352 cv
3594 750.497 3593.11 756.669 3589.87 759.116 cv
3586.63 761.57 3580.94 761.285 3577.94 764.022 cv
3574.94 766.76 3575.45 773.127 3572.71 776.129 cv
3569.98 779.128 3563.79 779.361 3561.34 782.605 cv
3558.89 785.841 3554.83 788.427 3552.68 791.886 cv
3550.55 795.329 3547.59 798.901 3545.77 802.547 cv
3543.96 806.17 3552.51 814.412 3551.04 818.215 cv
3549.58 821.985 3537.57 822.274 3536.46 826.202 cv
3535.35 830.087 3541.95 835.998 3541.21 840.021 cv
3540.47 843.984 3540.75 847.911 3540.38 851.991 cv
3540.01 855.999 3531.27 859.811 3531.27 863.915 cv
3531.27 868.019 3541.06 871.735 3541.43 875.744 cv
3541.8 879.823 3534.95 884.871 3535.69 888.835 cv
3536.44 892.857 3542.21 895.795 3543.32 899.68 cv
3544.43 903.608 3542.03 908.77 3543.49 912.54 cv
3544.97 916.343 3549.09 919.1 3550.9 922.722 cv
3552.72 926.369 3551.92 931.643 3554.06 935.087 cv
3556.21 938.546 3563.92 938.18 3566.37 941.416 cv
3568.82 944.659 3567.55 950.905 3570.29 953.906 cv
3573.03 956.908 3577.93 957.789 3580.94 960.527 cv
3583.93 963.263 3584.55 969.002 3587.8 971.456 cv
3591.03 973.903 3597.52 971.646 3600.98 973.792 cv
3604.42 975.929 3604.73 983.857 3608.38 985.676 cv
3609 985.988 3609.71 986.112 3610.48 986.112 cv
3612 986.112 3613.74 985.626 3615.48 985.14 cv
3617.22 984.655 3618.97 984.169 3620.49 984.169 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
3644.87 998.525 mo
3644.53 998.525 3644.2 998.497 3643.87 998.436 cv
3639.84 997.689 3636.49 992.966 3632.6 991.863 cv
3628.67 990.747 3626.07 985.935 3622.3 984.472 cv
3621.75 984.257 3621.14 984.169 3620.49 984.169 cv
3618.97 984.169 3617.22 984.655 3615.48 985.14 cv
3613.74 985.626 3612 986.112 3610.48 986.112 cv
3609.71 986.112 3609 985.988 3608.38 985.676 cv
3604.73 983.857 3604.42 975.929 3600.98 973.792 cv
3597.52 971.646 3591.03 973.903 3587.8 971.456 cv
3584.55 969.002 3583.93 963.263 3580.94 960.527 cv
3577.93 957.789 3573.03 956.908 3570.29 953.906 cv
3567.55 950.905 3568.82 944.659 3566.37 941.416 cv
3563.92 938.18 3556.21 938.546 3554.06 935.087 cv
3551.92 931.643 3552.72 926.369 3550.9 922.722 cv
3549.09 919.1 3544.97 916.343 3543.49 912.54 cv
3542.03 908.77 3544.43 903.608 3543.32 899.68 cv
3542.21 895.795 3536.44 892.857 3535.69 888.835 cv
3534.95 884.871 3541.8 879.823 3541.43 875.744 cv
3541.06 871.735 3531.27 868.019 3531.27 863.915 cv
3531.27 859.811 3540.01 855.999 3540.38 851.991 cv
3540.75 847.911 3540.47 843.984 3541.21 840.021 cv
3541.95 835.998 3535.35 830.087 3536.46 826.202 cv
3537.57 822.274 3549.58 821.985 3551.04 818.215 cv
3552.51 814.412 3543.96 806.17 3545.77 802.547 cv
3547.59 798.901 3550.55 795.329 3552.68 791.886 cv
3554.83 788.427 3558.89 785.841 3561.34 782.605 cv
3563.79 779.361 3569.98 779.128 3572.71 776.129 cv
3575.45 773.127 3574.94 766.76 3577.94 764.022 cv
3580.94 761.285 3586.63 761.57 3589.87 759.116 cv
3593.11 756.669 3594 750.497 3597.45 748.352 cv
3598.73 747.558 3600.38 747.382 3602.13 747.382 cv
3602.83 747.382 3603.54 747.41 3604.25 747.437 cv
3604.96 747.465 3605.67 747.492 3606.36 747.492 cv
3607.95 747.492 3609.45 747.35 3610.67 746.741 cv
3614.29 744.934 3618.96 746.012 3622.76 744.538 cv
3626.53 743.076 3630.1 742.092 3634.03 740.976 cv
3637.91 739.873 3641.03 736.521 3645.05 735.773 cv
3649.01 735.037 3652.33 728.246 3656.41 727.873 cv
3656.48 727.866 3656.56 727.862 3656.64 727.862 cv
3660.59 727.862 3664.98 736.743 3669.01 736.743 cv
3673.11 736.743 3676.71 737.247 3680.72 737.613 cv
3682.21 737.749 3683.66 737.764 3685.1 737.764 cv
3685.29 737.764 3685.49 737.763 3685.69 737.763 cv
3685.89 737.763 3686.1 737.763 3686.3 737.763 cv
3688.37 737.763 3690.41 737.795 3692.52 738.187 cv
3692.88 738.254 3693.26 738.285 3693.63 738.285 cv
3695.26 738.285 3697 737.725 3698.73 737.164 cv
3700.46 736.603 3702.18 736.043 3703.79 736.043 cv
3704.32 736.043 3704.83 736.104 3705.33 736.246 cv
3705.93 736.415 3706.57 736.484 3707.23 736.484 cv
3708.67 736.484 3710.25 736.159 3711.82 735.835 cv
3713.39 735.511 3714.96 735.187 3716.4 735.187 cv
3717.23 735.187 3718.01 735.295 3718.73 735.573 cv
3722.53 737.048 3723.07 746.256 3726.69 748.063 cv
3730.34 749.882 3734.54 750.372 3737.99 752.509 cv
3741.44 754.655 3746.74 754.245 3749.98 756.692 cv
3753.22 759.145 3751.52 767.376 3754.52 770.113 cv
3755.39 770.905 3756.82 771.135 3758.48 771.135 cv
3759.63 771.135 3760.9 771.025 3762.16 770.914 cv
3763.42 770.803 3764.68 770.692 3765.84 770.692 cv
3767.61 770.692 3769.12 770.954 3769.97 771.882 cv
3772.7 774.881 3776.26 777.824 3778.71 781.068 cv
3781.16 784.303 3780.96 789.814 3783.1 793.272 cv
3785.24 796.716 3783.15 802.535 3784.96 806.18 cv
3786.77 809.804 3791.72 812.003 3793.19 815.807 cv
3794.65 819.577 3789.44 825.399 3790.56 829.328 cv
3791.66 833.212 3801.68 834.956 3802.42 838.977 cv
3803.16 842.941 3798.19 847.826 3798.56 851.907 cv
3798.93 855.914 3800.61 859.811 3800.61 863.915 cv
3800.61 868.019 3800.4 872.049 3800.03 876.058 cv
3799.66 880.138 3802.78 884.819 3802.05 888.783 cv
3801.3 892.804 3798.95 896.688 3797.84 900.572 cv
3796.73 904.502 3792.87 907.563 3791.41 911.334 cv
3789.93 915.137 3784.5 916.893 3782.69 920.516 cv
3780.87 924.161 3787.81 932.714 3785.68 936.158 cv
3783.53 939.616 3780.82 943.271 3778.37 946.507 cv
3775.92 949.75 3769.32 949.871 3766.59 952.87 cv
3763.85 955.872 3760.1 957.809 3757.1 960.547 cv
3754.1 963.283 3751.9 966.94 3748.66 969.393 cv
3745.42 971.84 3739.55 970.119 3736.09 972.265 cv
3732.64 974.402 3732.53 982.352 3728.89 984.171 cv
3728.31 984.459 3727.66 984.577 3726.96 984.577 cv
3725.4 984.577 3723.6 984.001 3721.8 983.426 cv
3720 982.851 3718.19 982.276 3716.63 982.276 cv
3716.04 982.276 3715.48 982.359 3714.97 982.557 cv
3711.2 984.019 3710.02 993.135 3706.09 994.251 cv
3702.21 995.354 3698.05 997.053 3694.03 997.8 cv
3693.77 997.849 3693.5 997.872 3693.22 997.872 cv
3691.39 997.872 3689.38 996.843 3687.37 995.815 cv
3685.36 994.787 3683.34 993.759 3681.48 993.759 cv
3681.34 993.759 3681.19 993.765 3681.05 993.778 cv
3680.49 993.829 3679.93 993.851 3679.37 993.851 cv
3675.94 993.851 3672.54 993.013 3669.01 993.013 cv
3665.15 993.013 3661.32 995.514 3657.55 995.515 cv
3657.3 995.515 3657.06 995.504 3656.82 995.482 cv
3656.63 995.465 3656.45 995.457 3656.27 995.457 cv
3654.46 995.457 3652.51 996.224 3650.56 996.991 cv
3648.61 997.758 3646.67 998.525 3644.87 998.525 cv
3642.54 971.151 mo
3643.75 971.151 3644.96 971.214 3646.14 971.464 cv
3649.99 972.279 3653.04 977.553 3657.02 977.968 cv
3657.16 977.982 3657.3 977.99 3657.45 977.99 cv
3661.22 977.989 3665.14 972.999 3669.01 972.999 cv
3672.82 972.999 3676.52 976.389 3680.23 976.389 cv
3680.43 976.389 3680.63 976.379 3680.83 976.358 cv
3684.81 975.944 3687.9 971.691 3691.75 970.877 cv
3695.66 970.049 3698.76 968.235 3702.51 967.017 cv
3703.31 966.758 3704.15 966.665 3705.02 966.665 cv
3706.12 966.665 3707.26 966.815 3708.4 966.964 cv
3709.54 967.113 3710.68 967.263 3711.78 967.263 cv
3712.83 967.263 3713.84 967.123 3714.77 966.709 cv
3718.41 965.087 3723.73 966.615 3727.16 964.633 cv
3730.6 962.641 3730.43 955.203 3733.63 952.872 cv
3736.85 950.534 3740.72 949.493 3743.67 946.837 cv
3746.62 944.18 3751.71 943.728 3754.37 940.779 cv
3757.03 937.831 3758.19 933.62 3760.53 930.406 cv
3762.86 927.203 3770.18 926.928 3772.18 923.484 cv
3774.16 920.059 3776.08 915.951 3777.7 912.312 cv
3779.31 908.703 3773.28 901.993 3774.51 898.197 cv
3775.73 894.446 3776.03 890.756 3776.86 886.846 cv
3777.67 882.994 3782.63 879.886 3783.04 875.901 cv
3783.45 871.994 3777.21 867.929 3777.21 863.915 cv
3777.21 859.901 3787.24 855.442 3786.84 851.534 cv
3786.42 847.55 3781.65 843.997 3780.83 840.145 cv
3780 836.234 3783.86 830.745 3782.64 826.995 cv
3781.41 823.199 3772.98 821.952 3771.37 818.342 cv
3769.75 814.704 3772.93 808.483 3770.95 805.059 cv
3768.96 801.615 3763.28 800.321 3760.95 797.117 cv
3758.61 793.904 3755.03 791.802 3752.38 788.855 cv
3749.72 785.905 3747.98 782.142 3745.03 779.486 cv
3742.08 776.83 3736.55 777.71 3733.33 775.371 cv
3730.13 773.039 3728.65 768.569 3725.2 766.577 cv
3721.78 764.595 3720.08 759.003 3716.44 757.38 cv
3715.76 757.077 3715.01 756.959 3714.21 756.959 cv
3712.81 756.959 3711.26 757.323 3709.72 757.686 cv
3708.17 758.049 3706.61 758.412 3705.2 758.412 cv
3704.56 758.412 3703.95 758.337 3703.37 758.151 cv
3699.62 756.933 3696.26 754.945 3692.35 754.117 cv
3688.5 753.303 3684.9 751.083 3680.91 750.668 cv
3680.42 750.618 3679.93 750.595 3679.44 750.595 cv
3676.01 750.595 3672.52 751.683 3669.01 751.683 cv
3665.14 751.683 3660.9 746.563 3657.1 746.563 cv
3656.96 746.563 3656.82 746.57 3656.68 746.584 cv
3652.7 746.999 3649.03 750.995 3645.18 751.81 cv
3641.27 752.637 3637.13 753.051 3633.38 754.27 cv
3629.59 755.502 3628.29 762.742 3624.68 764.351 cv
3621.04 765.974 3618.5 768.498 3615.07 770.48 cv
3613.65 771.305 3611.82 771.405 3609.94 771.405 cv
3609.64 771.405 3609.33 771.403 3609.03 771.4 cv
3608.73 771.397 3608.43 771.395 3608.13 771.395 cv
3606.08 771.395 3604.1 771.514 3602.65 772.57 cv
3599.43 774.909 3593.18 773.766 3590.23 776.421 cv
3587.28 779.078 3589.64 787.112 3586.99 790.061 cv
3584.33 793.008 3579.45 793.94 3577.12 797.152 cv
3574.79 800.356 3570.97 802.72 3568.98 806.164 cv
3567 809.589 3569.38 815.197 3567.76 818.836 cv
3566.15 822.444 3563.41 825.407 3562.18 829.203 cv
3560.96 832.954 3563.17 837.325 3562.35 841.236 cv
3561.53 845.088 3556.09 848.017 3555.68 852.002 cv
3555.27 855.909 3560.55 859.901 3560.55 863.915 cv
3560.55 867.93 3552.92 872.166 3553.32 876.073 cv
3553.74 880.057 3554.12 884.309 3554.94 888.16 cv
3555.77 892.071 3560.3 895.091 3561.51 898.842 cv
3562.75 902.638 3560.82 907.76 3562.43 911.368 cv
3564.05 915.006 3572.97 914.786 3574.95 918.211 cv
3576.94 921.655 3577.81 925.269 3580.14 928.473 cv
3582.48 931.686 3583.3 935.745 3585.96 938.691 cv
3588.61 941.641 3592.57 942.873 3595.52 945.531 cv
3598.47 948.186 3597.6 955.443 3600.81 957.782 cv
3604.01 960.114 3607.44 962.586 3610.89 964.578 cv
3614.31 966.56 3618.25 968.125 3621.89 969.747 cv
3623.07 970.274 3624.4 970.419 3625.8 970.419 cv
3626.65 970.419 3627.53 970.365 3628.4 970.31 cv
3629.28 970.256 3630.16 970.202 3631.01 970.202 cv
3632.17 970.202 3633.3 970.302 3634.33 970.637 cv
3635.79 971.111 3637.31 971.216 3638.85 971.216 cv
3639.46 971.216 3640.08 971.199 3640.7 971.183 cv
3641.31 971.167 3641.93 971.151 3642.54 971.151 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
3657.45 977.99 mo
3657.3 977.99 3657.16 977.982 3657.02 977.968 cv
3653.04 977.553 3649.99 972.279 3646.14 971.464 cv
3644.96 971.214 3643.75 971.151 3642.54 971.151 cv
3641.93 971.151 3641.31 971.167 3640.7 971.183 cv
3640.08 971.199 3639.46 971.216 3638.85 971.216 cv
3637.31 971.216 3635.79 971.111 3634.33 970.637 cv
3633.3 970.302 3632.17 970.202 3631.01 970.202 cv
3630.16 970.202 3629.28 970.256 3628.4 970.31 cv
3627.53 970.365 3626.65 970.419 3625.8 970.419 cv
3624.4 970.419 3623.07 970.274 3621.89 969.747 cv
3618.25 968.125 3614.31 966.56 3610.89 964.578 cv
3607.44 962.586 3604.01 960.114 3600.81 957.782 cv
3597.6 955.443 3598.47 948.186 3595.52 945.531 cv
3592.57 942.873 3588.61 941.641 3585.96 938.691 cv
3583.3 935.745 3582.48 931.686 3580.14 928.473 cv
3577.81 925.269 3576.94 921.655 3574.95 918.211 cv
3572.97 914.786 3564.05 915.006 3562.43 911.368 cv
3560.82 907.76 3562.75 902.638 3561.51 898.842 cv
3560.3 895.091 3555.77 892.071 3554.94 888.16 cv
3554.12 884.309 3553.74 880.057 3553.32 876.073 cv
3552.92 872.166 3560.55 867.93 3560.55 863.915 cv
3560.55 859.901 3555.27 855.909 3555.68 852.002 cv
3556.09 848.017 3561.53 845.088 3562.35 841.236 cv
3563.17 837.325 3560.96 832.954 3562.18 829.203 cv
3563.41 825.407 3566.15 822.444 3567.76 818.836 cv
3569.38 815.197 3567 809.589 3568.98 806.164 cv
3570.97 802.72 3574.79 800.356 3577.12 797.152 cv
3579.45 793.94 3584.33 793.008 3586.99 790.061 cv
3589.64 787.112 3587.28 779.078 3590.23 776.421 cv
3593.18 773.766 3599.43 774.909 3602.65 772.57 cv
3604.1 771.514 3606.08 771.395 3608.13 771.395 cv
3608.43 771.395 3608.73 771.397 3609.03 771.4 cv
3609.33 771.403 3609.64 771.405 3609.94 771.405 cv
3611.82 771.405 3613.65 771.305 3615.07 770.48 cv
3618.5 768.498 3621.04 765.974 3624.68 764.351 cv
3628.29 762.742 3629.59 755.502 3633.38 754.27 cv
3637.13 753.051 3641.27 752.637 3645.18 751.81 cv
3649.03 750.995 3652.7 746.999 3656.68 746.584 cv
3656.82 746.57 3656.96 746.563 3657.1 746.563 cv
3660.9 746.563 3665.14 751.683 3669.01 751.683 cv
3672.52 751.683 3676.01 750.595 3679.44 750.595 cv
3679.93 750.595 3680.42 750.618 3680.91 750.668 cv
3684.9 751.083 3688.5 753.303 3692.35 754.117 cv
3696.26 754.945 3699.62 756.933 3703.37 758.151 cv
3703.95 758.337 3704.56 758.412 3705.2 758.412 cv
3706.61 758.412 3708.17 758.049 3709.72 757.686 cv
3711.26 757.323 3712.81 756.959 3714.21 756.959 cv
3715.01 756.959 3715.76 757.077 3716.44 757.38 cv
3720.08 759.003 3721.78 764.595 3725.2 766.577 cv
3728.65 768.569 3730.13 773.039 3733.33 775.371 cv
3736.55 777.71 3742.08 776.83 3745.03 779.486 cv
3747.98 782.142 3749.72 785.905 3752.38 788.855 cv
3755.03 791.802 3758.61 793.904 3760.95 797.117 cv
3763.28 800.321 3768.96 801.615 3770.95 805.059 cv
3772.93 808.483 3769.75 814.704 3771.37 818.342 cv
3772.98 821.952 3781.41 823.199 3782.64 826.995 cv
3783.86 830.745 3780 836.234 3780.83 840.145 cv
3781.65 843.997 3786.42 847.55 3786.84 851.534 cv
3787.24 855.442 3777.21 859.901 3777.21 863.915 cv
3777.21 867.929 3783.45 871.994 3783.04 875.901 cv
3782.63 879.886 3777.67 882.994 3776.86 886.846 cv
3776.03 890.756 3775.73 894.446 3774.51 898.197 cv
3773.28 901.993 3779.31 908.703 3777.7 912.312 cv
3776.08 915.951 3774.16 920.059 3772.18 923.484 cv
3770.18 926.928 3762.86 927.203 3760.53 930.406 cv
3758.19 933.62 3757.03 937.831 3754.37 940.779 cv
3751.71 943.728 3746.62 944.18 3743.67 946.837 cv
3740.72 949.493 3736.85 950.534 3733.63 952.872 cv
3730.43 955.203 3730.6 962.641 3727.16 964.633 cv
3723.73 966.615 3718.41 965.087 3714.77 966.709 cv
3713.84 967.123 3712.83 967.263 3711.78 967.263 cv
3710.68 967.263 3709.54 967.113 3708.4 966.964 cv
3707.26 966.815 3706.12 966.665 3705.02 966.665 cv
3704.15 966.665 3703.31 966.758 3702.51 967.017 cv
3698.76 968.235 3695.66 970.049 3691.75 970.877 cv
3687.9 971.691 3684.81 975.944 3680.83 976.358 cv
3680.63 976.379 3680.43 976.389 3680.23 976.389 cv
3676.52 976.389 3672.82 972.999 3669.01 972.999 cv
3665.14 972.999 3661.22 977.989 3657.45 977.99 cv
3667.11 764.402 mo
3611.61 764.402 3566.62 809.393 3566.62 864.892 cv
3566.62 920.391 3611.61 965.382 3667.11 965.382 cv
3722.61 965.382 3767.6 920.391 3767.6 864.892 cv
3767.6 809.393 3722.61 764.402 3667.11 764.402 cv
level3{
gsave
clp
[215.629 0 0 215.629 3667.25 864.82 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1P
nEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,C
m/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?rUB1PnEg,Cm/?G?
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rUB1PnE^#@l20o3qX*D@m,Rp,iqVcqpZUH+kM#RifCS(Ro&J0giR%&Oc0jH1mG5eKgV`=0_!0Iakgm?-
e@+JeZfBH:im4^bc)KUDV;B@hgrQ)@`L>JuQe0*<f"d?r^5LFPLXE\dca\MN[X?<+Gfm=6aKT[)X_btW
BZ$f[_5C\UV-La0=M1;*\t2^.S4g>[8%"^NZ^*e[P<,n02Q_uoX,JU/MCGK[,c68;Uk9S[JJOo.&tXI[
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[215.629 0 0 215.629 3667.25 864.82 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~r;?Kjr;?Kjr;6Bgqtg0cqYBs_q>'j^q>'g\q"XUXp\4CTp%@tLo^qbHoCMPDo()>@naZ,<n*f]4mdBK0
mHs9,m-O'(lK[Wul07Eqkih3mk2tdejlPRaj5].Yio8qUiSibRi8<GKhVR,Fh;$f?gY1B7g"G'2f[na+
f%/F&e^W*te'c[ldF$@gd*L%`cHa_[c-4DTbK@uLaiMQDa2c6?`l5p8`5BL0_SO()^qd_"^:q=q]tM(k
]=YYc\[f8]\@B#W[^NTO['[0GZEga?Yct=7Y-+n/XK8J'WiE%tW2QYnVl-DhV59u`USFQXTqS-PT:_^H
~>
<~n*f`6n*f`6n*]W3md9E/mHj3+m-F!&lK[Wul07Eqkih3mkND!ijlPRajQ,@]j5].YiSi_Qi8EMMhVR)E
h;-lAgY:H9g"G$1f@SU)f%/C%eC;srdaHOjdF$=fcd0n^c-=MWbfe2Pb0%lKaiMQD`l5p8`5KU3_ns:,
_8*k$^V7Fq]tD"i]=PSa\[]/Y\$i`Q[C!<IZa-mAZ*:I9YHG"/XK/D%Wi;trW2HPkVP^2dUnjc\U7n6Q
T:_^HSXl:@S"#k8R@0G0Q^=#(Q'@MsP*1riOH5H_NK&mUMi3IMM2@%ELPLV<KS4u1JqAQ)J:N-!IXZ]m
~>
<~lg*m&lg!d"l0.?okN:pgjlGL_j5T(Xio8qThr!;Ih;-l@g=k64f@SU)e^`0udaHOjd*U+acHXSVb/q`F
a2Z*:`5BI._8*h"^:h1l]=PP_\$i]P['R'CYck44XfSS(Wi;trVl$;dUS=KVTV%gHS=>t8R$X/*Q'@Jq
OcYWaNJrdQM26qAKnY24Jq8H%IXQTjH?jaZG'.nJF)l8>Df0E-C2%?oAn>L_@UWYP?X@#C>?Y03<`N*t
;Gg7d:/+DT8kDQD7RTU15sRXu4Zkee3B/rU2)I'C0J>%0.k3"t-mp>e,9e9Q*ZZ4>)&O/*'bh;o&J,H_
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
3767.6 864.892 mo
3767.6 920.391 3722.61 965.382 3667.11 965.382 cv
3611.61 965.382 3566.62 920.391 3566.62 864.892 cv
3566.62 809.393 3611.61 764.402 3667.11 764.402 cv
3722.61 764.402 3767.6 809.393 3767.6 864.892 cv
.984314 .360784 .662745 rgb
f
3667.11 951.944 mo
3619.03 951.944 3580.06 912.97 3580.06 864.892 cv
3580.06 816.814 3619.03 777.839 3667.11 777.839 cv
3715.19 777.839 3754.16 816.814 3754.16 864.892 cv
3754.16 912.97 3715.19 951.944 3667.11 951.944 cv
3667.11 792.083 mo
3626.9 792.083 3594.3 824.68 3594.3 864.892 cv
3594.3 905.104 3626.9 937.702 3667.11 937.702 cv
3707.32 937.702 3739.92 905.104 3739.92 864.892 cv
3739.92 824.68 3707.32 792.083 3667.11 792.083 cv
.992157 .498039 .780392 rgb
f
3667.11 937.702 mo
3626.9 937.702 3594.3 905.104 3594.3 864.892 cv
3594.3 824.68 3626.9 792.083 3667.11 792.083 cv
3707.32 792.083 3739.92 824.68 3739.92 864.892 cv
3739.92 905.104 3707.32 937.702 3667.11 937.702 cv
3667.11 804.247 mo
3633.61 804.247 3606.46 831.399 3606.46 864.892 cv
3606.46 898.386 3633.61 925.538 3667.11 925.538 cv
3700.6 925.538 3727.75 898.386 3727.75 864.892 cv
3727.75 831.399 3700.6 804.247 3667.11 804.247 cv
.996078 .603922 .858823 rgb
f
3667.11 925.538 mo
3633.61 925.538 3606.46 898.386 3606.46 864.892 cv
3606.46 831.399 3633.61 804.247 3667.11 804.247 cv
3700.6 804.247 3727.75 831.399 3727.75 864.892 cv
3727.75 898.386 3700.6 925.538 3667.11 925.538 cv
3667.11 818.92 mo
3641.72 818.92 3621.14 839.503 3621.14 864.892 cv
3621.14 890.282 3641.72 910.864 3667.11 910.864 cv
3692.5 910.864 3713.08 890.282 3713.08 864.892 cv
3713.08 839.503 3692.5 818.92 3667.11 818.92 cv
1 .690196 .909804 rgb
f
3667.11 910.864 mo
3641.72 910.864 3621.14 890.282 3621.14 864.892 cv
3621.14 839.503 3641.72 818.92 3667.11 818.92 cv
3692.5 818.92 3713.08 839.503 3713.08 864.892 cv
3713.08 890.282 3692.5 910.864 3667.11 910.864 cv
3667.11 830.013 mo
3647.84 830.013 3632.23 845.629 3632.23 864.892 cv
3632.23 884.155 3647.84 899.772 3667.11 899.772 cv
3686.37 899.772 3701.99 884.155 3701.99 864.892 cv
3701.99 845.629 3686.37 830.013 3667.11 830.013 cv
1 .756863 .941176 rgb
f
3667.11 899.772 mo
3647.84 899.772 3632.23 884.155 3632.23 864.892 cv
3632.23 845.629 3647.84 830.013 3667.11 830.013 cv
3686.37 830.013 3701.99 845.629 3701.99 864.892 cv
3701.99 884.155 3686.37 899.772 3667.11 899.772 cv
3667.11 844.084 mo
3655.62 844.084 3646.3 853.4 3646.3 864.892 cv
3646.3 876.384 3655.62 885.701 3667.11 885.701 cv
3678.6 885.701 3687.92 876.384 3687.92 864.892 cv
3687.92 853.4 3678.6 844.084 3667.11 844.084 cv
1 .807843 .960784 rgb
f
3667.11 885.701 mo
3655.62 885.701 3646.3 876.384 3646.3 864.892 cv
3646.3 853.4 3655.62 844.084 3667.11 844.084 cv
3678.6 844.084 3687.92 853.4 3687.92 864.892 cv
3687.92 876.384 3678.6 885.701 3667.11 885.701 cv
1 .85098 .976471 rgb
f
3617.2 784.149 mo
3617.2 792.277 3610.61 798.867 3602.48 798.867 cv
3594.35 798.867 3587.77 792.277 3587.77 784.149 cv
3587.77 776.02 3594.35 769.43 3602.48 769.43 cv
3610.61 769.43 3617.2 776.02 3617.2 784.149 cv
cp
1 .921569 .921569 rgb
f
3719.52 776.058 mo
3719.52 779.718 3716.56 782.685 3712.9 782.685 cv
3709.24 782.685 3706.27 779.718 3706.27 776.058 cv
3706.27 772.397 3709.24 769.43 3712.9 769.43 cv
3716.56 769.43 3719.52 772.397 3719.52 776.058 cv
cp
f
3730.65 897.143 mo
3730.65 901.123 3727.43 904.349 3723.45 904.349 cv
3719.47 904.349 3716.24 901.123 3716.24 897.143 cv
3716.24 893.163 3719.47 889.937 3723.45 889.937 cv
3727.43 889.937 3730.65 893.163 3730.65 897.143 cv
cp
f
3583.46 1024.96 mo
3583.46 1026.7 3582.05 1028.11 3580.31 1028.11 cv
3578.57 1028.11 3577.16 1026.7 3577.16 1024.96 cv
3577.16 1023.22 3578.57 1021.81 3580.31 1021.81 cv
3582.05 1021.81 3583.46 1023.22 3583.46 1024.96 cv
cp
f
3537.38 846.864 mo
3537.38 850.032 3534.81 852.601 3531.64 852.601 cv
3528.47 852.601 3525.91 850.032 3525.91 846.864 cv
3525.91 843.696 3528.47 841.128 3531.64 841.128 cv
3534.81 841.128 3537.38 843.696 3537.38 846.864 cv
cp
f
3738.71 711.913 mo
3738.71 715.416 3735.87 718.255 3732.37 718.255 cv
3728.87 718.255 3726.03 715.416 3726.03 711.913 cv
3726.03 708.411 3728.87 705.571 3732.37 705.571 cv
3735.87 705.571 3738.71 708.411 3738.71 711.913 cv
cp
f
3566.29 932.873 mo
3566.29 936.979 3562.97 940.307 3558.86 940.307 cv
3554.76 940.307 3551.43 936.979 3551.43 932.873 cv
3551.43 928.768 3554.76 925.439 3558.86 925.439 cv
3562.97 925.439 3566.29 928.768 3566.29 932.873 cv
cp
f
3439.05 742.765 mo
3439.05 746.323 3436.17 749.207 3432.61 749.207 cv
3429.05 749.207 3426.17 746.323 3426.17 742.765 cv
3426.17 739.207 3429.05 736.322 3432.61 736.322 cv
3436.17 736.322 3439.05 739.207 3439.05 742.765 cv
cp
f
3683.36 523.828 mo
3683.36 527.522 3680.37 530.517 3676.67 530.517 cv
3672.98 530.517 3669.99 527.522 3669.99 523.828 cv
3669.99 520.134 3672.98 517.139 3676.67 517.139 cv
3680.37 517.139 3683.36 520.134 3683.36 523.828 cv
cp
f
3750.73 1150.48 mo
3750.73 1156.5 3745.85 1161.39 3739.82 1161.39 cv
3733.8 1161.39 3728.92 1156.5 3728.92 1150.48 cv
3728.92 1144.46 3733.8 1139.58 3739.82 1139.58 cv
3745.85 1139.58 3750.73 1144.46 3750.73 1150.48 cv
cp
f
4000.96 652.36 mo
4000.96 658.269 3996.17 663.06 3990.26 663.06 cv
3984.35 663.06 3979.56 658.269 3979.56 652.36 cv
3979.56 646.45 3984.35 641.66 3990.26 641.66 cv
3996.17 641.66 4000.96 646.45 4000.96 652.36 cv
cp
f
3403.54 1016.85 mo
3403.54 1018.61 3402.11 1020.04 3400.35 1020.04 cv
3398.59 1020.04 3397.16 1018.61 3397.16 1016.85 cv
3397.16 1015.09 3398.59 1013.67 3400.35 1013.67 cv
3402.11 1013.67 3403.54 1015.09 3403.54 1016.85 cv
cp
f
3938.4 1118.5 mo
3938.4 1124.85 3933.25 1130 3926.9 1130 cv
3920.55 1130 3915.4 1124.85 3915.4 1118.5 cv
3915.4 1112.15 3920.55 1107 3926.9 1107 cv
3933.25 1107 3938.4 1112.15 3938.4 1118.5 cv
cp
f
3817.92 907.761 mo
3817.92 913.625 3813.16 918.379 3807.3 918.379 cv
3801.44 918.379 3796.68 913.625 3796.68 907.761 cv
3796.68 901.897 3801.44 897.143 3807.3 897.143 cv
3813.16 897.143 3817.92 901.897 3817.92 907.761 cv
cp
f
3481.74 589.951 mo
3481.74 599.822 3473.74 607.823 3463.87 607.823 cv
3454 607.823 3446 599.822 3446 589.951 cv
3446 580.081 3454 572.08 3463.87 572.08 cv
3473.74 572.08 3481.74 580.081 3481.74 589.951 cv
cp
f
3452.02 1323.08 mo
3452.02 1330.21 3446.23 1336 3439.09 1336 cv
3431.95 1336 3426.17 1330.21 3426.17 1323.08 cv
3426.17 1315.94 3431.95 1310.15 3439.09 1310.15 cv
3446.23 1310.15 3452.02 1315.94 3452.02 1323.08 cv
cp
f
3436.73 752.197 mo
3455.83 795.764 3436 846.568 3392.43 865.67 cv
3348.86 884.772 3298.06 864.939 3278.96 821.372 cv
3259.85 777.805 3279.69 727.002 3323.25 707.9 cv
3366.82 688.798 3417.63 708.63 3436.73 752.197 cv
cp
1 .752941 .866667 rgb
f
3392.43 865.661 mo
3348.85 884.776 3298.06 864.938 3278.95 821.367 cv
3277.82 818.798 3276.83 816.203 3275.98 813.585 cv
3297.61 851.145 3344.52 867.162 3385.15 849.361 cv
3426.13 831.402 3446.1 785.361 3432.41 743.686 cv
3434 746.41 3435.43 749.257 3436.72 752.205 cv
3455.83 795.757 3436 846.566 3392.43 865.661 cv
cp
1 .4 .686275 rgb
f
3433.24 645.713 mo
3456.49 698.742 3432.35 760.58 3379.32 783.831 cv
3326.29 807.082 3264.45 782.942 3241.2 729.912 cv
3217.95 676.883 3242.09 615.045 3295.12 591.794 cv
3348.15 568.543 3409.99 592.684 3433.24 645.713 cv
cp
1 .752941 .866667 rgb
f
3828.05 429.099 mo
3863.98 470.851 3859.27 533.828 3817.52 569.763 cv
3775.76 605.697 3712.79 600.981 3676.85 559.229 cv
3640.92 517.478 3645.63 454.5 3687.39 418.566 cv
3729.14 382.631 3792.12 387.347 3828.05 429.099 cv
cp
f
3847.53 524.328 mo
3842.14 541.391 3832.08 557.224 3817.51 569.768 cv
3775.76 605.702 3712.79 600.986 3676.85 559.235 cv
3647.42 525.034 3645.25 476.584 3668.4 440.432 cv
3658.34 472.276 3664.5 508.445 3687.89 535.623 cv
3723.82 577.375 3786.81 582.104 3828.56 546.17 cv
3836.09 539.684 3842.43 532.319 3847.53 524.328 cv
cp
1 .4 .686275 rgb
f
3949.6 544.792 mo
3949.6 583.537 3918.19 614.947 3879.44 614.947 cv
3840.7 614.947 3809.29 583.537 3809.29 544.792 cv
3809.29 506.046 3840.7 474.637 3879.44 474.637 cv
3918.19 474.637 3949.6 506.046 3949.6 544.792 cv
cp
1 .752941 .866667 rgb
f
3948.53 557.084 mo
3942.71 589.98 3913.99 614.95 3879.44 614.95 cv
3840.7 614.95 3809.28 583.543 3809.28 544.796 cv
3809.28 533.94 3811.75 523.648 3816.16 514.471 cv
3815.46 518.462 3815.09 522.565 3815.09 526.759 cv
3815.09 565.505 3846.5 596.913 3885.24 596.913 cv
3913.12 596.913 3937.21 580.646 3948.53 557.084 cv
cp
1 .4 .686275 rgb
f
3928.42 463.609 mo
3928.42 498.215 3900.37 526.268 3865.76 526.268 cv
3831.16 526.268 3803.1 498.215 3803.1 463.609 cv
3803.1 429.004 3831.16 400.95 3865.76 400.95 cv
3900.37 400.95 3928.42 429.004 3928.42 463.609 cv
cp
1 .752941 .866667 rgb
f
4081.31 763.968 mo
4063.53 825.875 3998.94 861.647 3937.03 843.868 cv
3875.12 826.089 3839.35 761.49 3857.13 699.584 cv
3874.91 637.677 3939.51 601.905 4001.41 619.685 cv
4063.32 637.464 4099.09 702.062 4081.31 763.968 cv
cp
f
4014.29 839.315 mo
3990.65 849.266 3963.57 851.486 3937.03 843.863 cv
3875.13 826.086 3839.34 761.484 3857.12 699.588 cv
3869.76 655.554 3906.12 624.731 3948.32 617.027 cv
3916.86 630.199 3891.44 657.036 3881.29 692.385 cv
3863.5 754.3 3899.28 818.897 3961.17 836.673 cv
3979.05 841.808 3997.15 842.476 4014.29 839.315 cv
cp
1 .4 .686275 rgb
f
3959.78 969.821 mo
3959.78 1017.64 3921.02 1056.41 3873.2 1056.41 cv
3825.38 1056.41 3786.61 1017.64 3786.61 969.821 cv
3786.61 922.002 3825.38 883.236 3873.2 883.236 cv
3921.02 883.236 3959.78 922.002 3959.78 969.821 cv
cp
1 .752941 .866667 rgb
f
3805.65 972.639 mo
3805.65 1012.8 3832.99 1046.57 3870.06 1056.35 cv
3823.69 1054.7 3786.61 1016.58 3786.61 969.825 cv
3786.61 922.012 3825.39 883.234 3873.2 883.234 cv
3880.89 883.234 3888.37 884.245 3895.47 886.135 cv
3894.39 886.092 3893.31 886.07 3892.24 886.07 cv
3844.42 886.07 3805.65 924.826 3805.65 972.639 cv
cp
1 .4 .686275 rgb
f
3935.59 896.837 mo
3935.59 925.307 3912.51 948.387 3884.04 948.387 cv
3855.57 948.387 3832.49 925.307 3832.49 896.837 cv
3832.49 868.366 3855.57 845.286 3884.04 845.286 cv
3912.51 845.286 3935.59 868.366 3935.59 896.837 cv
cp
1 .752941 .866667 rgb
f
3934.16 884.839 mo
3924.84 871.759 3909.54 863.251 3892.24 863.251 cv
3863.77 863.251 3840.69 886.333 3840.69 914.802 cv
3840.69 918.956 3841.17 922.979 3842.12 926.826 cv
3836.05 918.385 3832.49 908.031 3832.49 896.841 cv
3832.49 868.373 3855.57 845.291 3884.04 845.291 cv
3908.37 845.291 3928.77 862.152 3934.16 884.839 cv
cp
1 .4 .686275 rgb
f
3593.26 1118.99 mo
3593.26 1173.73 3548.88 1218.1 3494.15 1218.1 cv
3439.41 1218.1 3395.04 1173.73 3395.04 1118.99 cv
3395.04 1064.25 3439.41 1019.88 3494.15 1019.88 cv
3548.88 1019.88 3593.26 1064.25 3593.26 1118.99 cv
cp
1 .752941 .866667 rgb
f
3593.26 1119 mo
3593.26 1122.42 3593.08 1125.79 3592.75 1129.13 cv
3587.63 1079.18 3545.45 1040.21 3494.15 1040.21 cv
3442.85 1040.21 3400.66 1079.18 3395.55 1129.13 cv
3395.22 1125.79 3395.04 1122.42 3395.04 1119 cv
3395.04 1064.26 3439.41 1019.89 3494.15 1019.89 cv
3548.89 1019.89 3593.26 1064.26 3593.26 1119 cv
cp
1 .4 .686275 rgb
f
3864.84 1138.01 mo
3869.16 1182.94 3836.24 1222.87 3791.31 1227.19 cv
3746.37 1231.51 3706.45 1198.59 3702.13 1153.65 cv
3697.8 1108.72 3730.73 1068.79 3775.66 1064.47 cv
3820.59 1060.15 3860.52 1093.07 3864.84 1138.01 cv
cp
1 .752941 .866667 rgb
f
3864.84 1138.01 mo
3865.3 1142.76 3865.35 1147.44 3865 1152.04 cv
3854.71 1114.34 3818.53 1088.41 3778.34 1092.28 cv
3738.14 1096.14 3707.56 1128.49 3704.66 1167.45 cv
3703.44 1163.01 3702.58 1158.4 3702.12 1153.65 cv
3697.8 1108.72 3730.73 1068.8 3775.67 1064.48 cv
3820.59 1060.16 3860.52 1093.07 3864.84 1138.01 cv
cp
1 .4 .686275 rgb
f
3783.5 1230.11 mo
3772.83 1264.64 3736.18 1283.99 3701.65 1273.31 cv
3667.12 1262.64 3647.78 1226 3658.45 1191.47 cv
3669.12 1156.94 3705.77 1137.6 3740.3 1148.27 cv
3774.83 1158.94 3794.17 1195.58 3783.5 1230.11 cv
cp
1 .752941 .866667 rgb
f
3780.96 1184.64 mo
3772.91 1172.84 3760.96 1163.59 3746.26 1159.04 cv
3711.74 1148.38 3675.09 1167.72 3664.42 1202.24 cv
3659.6 1217.84 3660.9 1233.86 3666.96 1247.73 cv
3656.09 1231.83 3652.33 1211.3 3658.46 1191.47 cv
3669.12 1156.94 3705.76 1137.59 3740.3 1148.27 cv
3759.24 1154.12 3773.61 1167.79 3780.96 1184.64 cv
cp
1 .4 .686275 rgb
f
3770.73 1212.68 mo
3769.25 1240.79 3745.24 1262.38 3717.12 1260.9 cv
3695.25 1259.74 3677.32 1244.97 3671.14 1225.24 cv
3679.73 1238.43 3694.28 1247.48 3711.2 1248.37 cv
3739.33 1249.86 3763.32 1228.27 3764.81 1200.14 cv
3765.14 1193.87 3764.33 1187.82 3762.55 1182.16 cv
3768.25 1190.9 3771.33 1201.46 3770.73 1212.68 cv
cp
1 .921569 .921569 rgb
f
3361.38 945.494 mo
3361.38 976.53 3336.22 1001.69 3305.18 1001.69 cv
3274.15 1001.69 3248.99 976.53 3248.99 945.494 cv
3248.99 914.459 3274.15 889.299 3305.18 889.299 cv
3336.22 889.299 3361.38 914.459 3361.38 945.494 cv
cp
1 .752941 .866667 rgb
f
3361.38 945.498 mo
3361.38 976.524 3336.22 1001.69 3305.18 1001.69 cv
3301.95 1001.69 3298.78 1001.41 3295.69 1000.89 cv
3322.21 996.379 3342.4 973.298 3342.4 945.498 cv
3342.4 917.683 3322.21 894.602 3295.69 890.094 cv
3298.78 889.567 3301.95 889.295 3305.18 889.295 cv
3336.22 889.295 3361.38 914.457 3361.38 945.498 cv
cp
1 .4 .686275 rgb
f
3541.49 642.807 mo
3566.35 699.497 3540.54 765.603 3483.85 790.459 cv
3427.16 815.315 3361.05 789.508 3336.2 732.818 cv
3311.34 676.128 3337.15 610.022 3393.84 585.166 cv
3450.53 560.311 3516.63 586.117 3541.49 642.807 cv
cp
1 .752941 .866667 rgb
f
3483.84 790.455 mo
3438.74 810.235 3387.7 797.956 3356.2 763.567 cv
3386.66 782.929 3425.9 787.252 3461.44 771.67 cv
3518.14 746.822 3543.94 680.719 3519.07 624.025 cv
3513.99 612.432 3507.17 602.119 3499.07 593.279 cv
3517.21 604.812 3532.21 621.651 3541.5 642.806 cv
3566.35 699.503 3540.54 765.606 3483.84 790.455 cv
cp
1 .4 .686275 rgb
f
3933.41 1018.95 mo
3914.18 1041.44 3884.59 1049.86 3857.68 1043.2 cv
3879.54 1043.65 3901.41 1034.66 3916.72 1016.75 cv
3943.87 985.009 3940.14 937.248 3908.4 910.101 cv
3899.15 902.187 3888.55 896.912 3877.48 894.167 cv
3894.38 894.496 3911.24 900.454 3925.09 912.299 cv
3956.83 939.446 3960.56 987.207 3933.41 1018.95 cv
cp
1 .921569 .921569 rgb
f
3264.94 931.926 mo
3270.48 917.24 3283.72 907.703 3298.34 906.173 cv
3287.36 909.891 3278.07 918.319 3273.66 930.012 cv
3265.85 950.739 3276.32 973.889 3297.04 981.706 cv
3303.09 983.984 3309.32 984.704 3315.34 984.077 cv
3306.85 986.961 3297.37 987.03 3288.32 983.619 cv
3267.59 975.802 3257.12 952.653 3264.94 931.926 cv
cp
f
3418.37 658.736 mo
3408 643.591 3392.69 631.634 3373.84 625.607 cv
3328.84 611.22 3280.69 636.022 3266.31 681.028 cv
3260.81 698.225 3261.03 715.866 3265.92 731.923 cv
3251.53 710.885 3246.66 683.672 3255.02 657.514 cv
3269.41 612.507 3317.55 587.705 3362.56 602.092 cv
3390.37 610.987 3410.47 632.771 3418.37 658.736 cv
cp
f
3648.82 1150.11 mo
3648.82 1188.06 3618.06 1218.83 3580.1 1218.83 cv
3542.15 1218.83 3511.39 1188.06 3511.39 1150.11 cv
3511.39 1112.16 3542.15 1081.4 3580.1 1081.4 cv
3618.06 1081.4 3648.82 1112.16 3648.82 1150.11 cv
cp
1 .752941 .866667 rgb
f
3645.84 1170.17 mo
3645.87 1169.41 3645.88 1168.63 3645.88 1167.86 cv
3645.88 1129.91 3615.11 1099.14 3577.16 1099.14 cv
3546.19 1099.14 3520.01 1119.63 3511.43 1147.78 cv
3512.66 1110.91 3542.93 1081.4 3580.1 1081.4 cv
3618.06 1081.4 3648.82 1112.16 3648.82 1150.11 cv
3648.82 1157.09 3647.78 1163.82 3645.84 1170.17 cv
cp
1 .4 .686275 rgb
f
3435.35 1083.25 mo
3431.54 1098.91 3432.71 1115.93 3439.84 1131.77 cv
3456.85 1169.6 3501.3 1186.49 3539.13 1169.48 cv
3553.59 1162.98 3564.98 1152.48 3572.6 1139.87 cv
3567.31 1161.61 3552.39 1180.76 3530.4 1190.65 cv
3492.57 1207.66 3448.12 1190.77 3431.1 1152.94 cv
3420.59 1129.56 3423.03 1103.65 3435.35 1083.25 cv
cp
1 .921569 .921569 rgb
f
4123.35 847.369 mo
4108.84 897.914 4056.1 927.121 4005.55 912.605 cv
3955 898.089 3925.8 845.346 3940.31 794.801 cv
3954.83 744.256 4007.57 715.049 4058.12 729.565 cv
4108.66 744.081 4137.87 796.824 4123.35 847.369 cv
cp
1 .752941 .866667 rgb
f
4074.86 906.024 mo
4054.17 916.52 4029.61 919.512 4005.55 912.603 cv
3955.01 898.087 3925.79 845.345 3940.31 794.797 cv
3949.63 762.35 3974.71 738.697 4004.85 729.755 cv
3982.05 741.301 3963.93 761.927 3956.32 788.435 cv
3941.81 838.972 3971.01 891.714 4021.56 906.23 cv
4039.66 911.426 4058.05 911.015 4074.86 906.024 cv
cp
1 .4 .686275 rgb
f
4097.05 872.883 mo
4077.68 895.53 4047.88 904.014 4020.78 897.308 cv
4042.79 897.758 4064.81 888.702 4080.24 870.669 cv
4107.58 838.704 4103.82 790.607 4071.86 763.268 cv
4062.54 755.299 4051.87 749.987 4040.72 747.221 cv
4057.74 747.553 4074.72 753.553 4088.67 765.481 cv
4120.63 792.82 4124.39 840.918 4097.05 872.883 cv
cp
1 .921569 .921569 rgb
f
3840.16 489.407 mo
3840.16 492.776 3839.96 496.098 3839.56 499.359 cv
3834.66 458.856 3800.15 427.471 3758.3 427.471 cv
3716.47 427.471 3681.97 458.856 3677.07 499.359 cv
3676.67 496.098 3676.46 492.776 3676.46 489.407 cv
3676.46 444.207 3713.1 407.568 3758.3 407.568 cv
3803.52 407.568 3840.16 444.207 3840.16 489.407 cv
cp
f
3894.12 497.001 mo
3892.53 497.958 3890.92 498.808 3889.27 499.546 cv
3906.89 485.739 3911.82 460.624 3899.93 440.981 cv
3888.05 421.344 3863.51 414.063 3843.11 423.271 cv
3844.52 422.156 3846.03 421.118 3847.61 420.161 cv
3868.83 407.319 3896.43 414.108 3909.28 435.326 cv
3922.12 456.551 3915.33 484.159 3894.12 497.001 cv
cp
f
3551.98 489.431 mo
3558.67 516.259 3542.35 543.432 3515.52 550.122 cv
3488.69 556.812 3461.52 540.487 3454.83 513.658 cv
3448.14 486.829 3464.46 459.657 3491.29 452.967 cv
3518.12 446.277 3545.29 462.602 3551.98 489.431 cv
cp
1 .752941 .866667 rgb
f
3515.52 550.12 mo
3490.97 556.24 3466.15 543.1 3456.98 520.28 cv
3468.25 537.85 3489.85 547.13 3511.23 541.8 cv
3538.06 535.11 3554.38 507.94 3547.69 481.11 cv
3547.12 478.83 3546.4 476.62 3545.54 474.49 cv
3548.42 478.97 3550.62 483.98 3551.98 489.43 cv
3558.67 516.26 3542.35 543.43 3515.52 550.12 cv
cp
1 .4 .686275 rgb
f
3671.52 504.312 mo
3682.3 547.535 3656 591.313 3612.77 602.091 cv
3569.55 612.87 3525.77 586.568 3514.99 543.344 cv
3504.21 500.12 3530.52 456.343 3573.74 445.564 cv
3616.96 434.786 3660.74 461.088 3671.52 504.312 cv
cp
1 .752941 .866667 rgb
f
3656.63 523.833 mo
3656.31 521.167 3655.83 518.502 3655.17 515.837 cv
3646.63 481.649 3612 460.844 3577.81 469.377 cv
3551.35 475.967 3532.87 498.234 3529.87 523.851 cv
3526.13 492.385 3546.29 462.325 3577.81 454.477 cv
3612 445.944 3646.63 466.749 3655.17 500.955 cv
3657.09 508.655 3657.52 516.392 3656.63 523.833 cv
cp
1 .921569 .921569 rgb
f
3612.77 602.081 mo
3584.22 609.195 3555.44 600.162 3536.09 580.742 cv
3554.08 592.207 3576.57 596.536 3598.91 590.967 cv
3642.13 580.203 3668.43 536.425 3657.64 493.184 cv
3653.99 478.513 3646.53 465.784 3636.54 455.793 cv
3653.39 466.486 3666.3 483.427 3671.52 504.322 cv
3682.31 547.539 3656.01 591.318 3612.77 602.081 cv
cp
1 .4 .686275 rgb
f
1293.22 1906.96 mo
1258.76 1931.57 1224.29 1956.19 1189.83 1980.81 cv
1163.05 1999.95 1136.26 2019.08 1109.48 2038.21 cv
1070.57 2066.01 1023.63 2087.42 998.571 2129.6 cv
994.43 2136.57 999.741 2152.82 1008.71 2156.3 cv
1032.41 2165.49 1064.19 2139.98 1080.14 2123.76 cv
1080.23 2123.66 1293.22 1906.96 1293.22 1906.96 cv
.847059 .737255 .380392 rgb
f
1436.61 2119.61 mo
1396.08 2125.69 1355.55 2131.77 1315.02 2137.84 cv
1252.31 2147.25 1189.6 2156.64 1126.9 2166.06 cv
1090.69 2171.5 1055.92 2177.78 1025.84 2200 cv
1019.66 2204.56 1014.95 2213.03 1022.61 2219.41 cv
1025.15 2221.52 1028.38 2222.61 1031.56 2223.52 cv
1050.89 2229.05 1070.52 2228.47 1089.65 2222.67 cv
1096.88 2220.47 1104.14 2218.36 1111.38 2216.21 cv
1134.55 2209.33 1157.71 2202.45 1180.87 2195.57 cv
1238.37 2178.49 1295.86 2161.41 1353.35 2144.34 cv
1381.1 2136.09 1408.86 2127.85 1436.61 2119.61 cv
f
1314.66 2445.74 mo
1269.71 2414.44 1224.76 2383.13 1179.81 2351.83 cv
1165.17 2341.63 1150.52 2331.43 1135.88 2321.22 cv
1126.6 2314.75 1117.92 2307.1 1107.64 2302.2 cv
1087.98 2292.83 1066.41 2293.01 1045.23 2294.99 cv
1035.99 2295.85 1010.62 2297.77 1013.14 2312.31 cv
1016.86 2333.73 1041.66 2346.77 1056.03 2360.13 cv
1064.97 2368.44 1074.98 2376.36 1086.62 2380.48 cv
1092.73 2382.65 1099.21 2384.09 1105.44 2385.87 cv
1128.29 2392.41 1151.14 2398.95 1174 2405.49 cv
1218.67 2418.27 1263.35 2431.06 1308.02 2443.84 cv
1309.86 2444.37 1313.07 2444.63 1314.66 2445.74 cv
f
1036.64 2438.12 mo
1036.78 2438.34 1036.93 2438.57 1037.07 2438.79 cv
1051.47 2461.07 1055.11 2487.64 1063.77 2512.28 cv
1073.48 2539.9 1083.19 2567.51 1092.9 2595.13 cv
1111.27 2647.41 1129.65 2699.69 1148.03 2751.97 cv
1151.75 2762.55 1154.24 2776.2 1159.97 2785.92 cv
982.648 2485.22 li
973.822 2467.87 968.286 2448.9 966.069 2429.58 cv
964.714 2417.77 960.777 2400.28 967.237 2389.4 cv
972.513 2380.53 982.958 2386.23 989.065 2390.86 cv
1006.7 2404.23 1024.27 2419.28 1036.64 2438.12 cv
f
872.961 2755.4 mo
883.753 2703.3 894.545 2651.2 905.337 2599.1 cv
908.609 2583.3 911.88 2567.51 915.152 2551.72 cv
920.941 2523.77 930.434 2497.19 922.501 2468.59 cv
917.711 2451.32 908.73 2434.36 898.462 2419.73 cv
896.152 2416.43 892.214 2413.64 888.333 2414.69 cv
879.624 2417.05 873.346 2434.86 870.118 2442.1 cv
865.07 2453.42 861.14 2465.84 861.652 2478.38 cv
872.961 2755.4 li
f
577.476 2717.07 mo
805.976 2417.37 li
814.753 2403.88 821.918 2388.86 825.304 2373.06 cv
827.15 2364.45 831.022 2347.7 822.586 2341.28 cv
816.372 2336.56 806.454 2342.01 800.297 2344.53 cv
783.912 2351.25 767.582 2361.69 758.975 2377.67 cv
577.476 2717.07 li
f
429.57 2388.9 mo
472.631 2378.79 515.693 2368.69 558.755 2358.59 cv
585.948 2352.21 613.139 2345.83 640.331 2339.45 cv
669.965 2332.5 703.008 2328.24 721.316 2300.83 cv
727.115 2292.15 726.4 2284.55 714.501 2282.05 cv
690.842 2277.08 662.419 2278.1 640.105 2288.25 cv
429.57 2388.9 li
f
442.356 2143.43 mo
442.356 2143.43 643.236 2216.17 643.352 2216.21 cv
656.384 2220.94 685.251 2225.81 698.918 2223.95 cv
709.13 2222.56 727.433 2219.5 734.788 2211.46 cv
745.549 2199.71 718.853 2180.39 711.537 2174.81 cv
697.011 2163.72 664.709 2146.08 645.673 2145.85 cv
442.356 2143.43 li
f
515.391 1784.83 mo
690.041 2055.66 li
713.672 2086.03 742.094 2102.88 773.59 2111.06 cv
782.667 2117.07 793.93 2107.38 789.331 2097.51 cv
781.147 2058.3 764.663 2021.71 738.404 1988.2 cv
515.391 1784.83 li
f
811.359 1990.21 mo
810.645 1985.43 810.308 1980.6 810.363 1975.78 cv
810.483 1965.17 810.612 1954.57 810.737 1943.96 cv
811.091 1913.83 811.445 1883.7 811.799 1853.57 cv
812.234 1816.64 812.668 1779.72 813.102 1742.79 cv
821.861 1782.01 830.621 1821.23 839.38 1860.45 cv
850.19 1908.85 861.989 1957.14 871.788 2005.76 cv
874.291 2018.18 876.108 2031.24 872.495 2043.64 cv
866.29 2064.93 847.596 2051.09 837.13 2041.08 cv
823.128 2027.69 814.219 2009.36 811.359 1990.21 cv
cp
f
972.321 2012.8 mo
979.104 1998.39 988.799 1985.1 997.403 1971.71 cv
1010.1 1951.97 1022.79 1932.22 1035.48 1912.48 cv
1064.26 1867.72 1093.03 1822.96 1121.8 1778.2 cv
1135.62 1756.7 1149.45 1735.2 1163.27 1713.69 cv
1029.09 2023.21 li
1023.15 2036.86 1008.6 2060.27 997.534 2070.54 cv
991.772 2075.88 981.763 2083.88 973.509 2083.93 cv
958.726 2084.03 959.952 2060.17 960.763 2050.64 cv
961.659 2040.12 967.966 2022.06 972.321 2012.8 cv
f
970.137 2029.69 mo
1105.02 1822.2 li
1011.43 2042.98 li
1010.86 2044.32 1010.07 2045.56 1009.1 2046.65 cv
991.1 2066.75 li
982.995 2075.81 967.998 2070.07 967.998 2057.92 cv
967.998 2036.9 li
967.998 2034.34 968.741 2031.83 970.137 2029.69 cv
cp
.831373 .635294 0 rgb
f
1181.37 2004.92 mo
1022.87 2111.03 li
1021.71 2111.81 1020.64 2112.73 1019.71 2113.78 cv
1015.46 2118.52 li
1003.6 2131.76 1017.79 2151.94 1034.27 2145.26 cv
1046.05 2140.48 li
1048.17 2139.62 1050.09 2138.34 1051.7 2136.7 cv
1181.37 2004.92 li
f
1063 2186.14 mo
1238.52 2166.02 li
1062.32 2220.66 li
1060.57 2221.2 1058.74 2221.45 1056.91 2221.38 cv
1039.48 2220.71 1035.27 2196.74 1051.44 2190.19 cv
1058.76 2187.22 li
1060.12 2186.67 1061.55 2186.31 1063 2186.14 cv
f
1079.86 2305.94 mo
1090.62 2309.62 1099.18 2316.49 1108.52 2322.72 cv
1126.78 2334.9 1145.05 2347.08 1163.31 2359.26 cv
1192.21 2378.54 1221.12 2397.82 1250.02 2417.09 cv
1250.32 2417.29 1250.61 2417.49 1250.91 2417.69 cv
1214.58 2406.43 1178.24 2395.18 1141.91 2383.92 cv
1130.61 2380.42 1119.31 2376.92 1108.01 2373.42 cv
1092.82 2368.72 1076.07 2365.55 1062.89 2355.61 cv
1051.19 2346.78 1035.71 2334.66 1029.42 2321.17 cv
1025.02 2311.74 1032.13 2302.51 1041.48 2300.69 cv
1052.83 2298.47 1069.02 2302.25 1079.83 2305.93 cv
1079.86 2305.94 li
f
1015.43 2422.47 mo
1021.49 2432.48 1023.87 2444.05 1027.75 2455 cv
1030.87 2463.81 1033.99 2472.61 1037.1 2481.42 cv
1044.64 2502.71 1052.18 2524 1059.72 2545.29 cv
1072.99 2582.76 1086.26 2620.23 1099.52 2657.7 cv
1101.31 2662.76 1103.1 2667.81 1104.89 2672.86 cv
983.294 2463.6 li
970.521 2409.36 li
969.248 2403.95 971.731 2398.05 976.45 2395.11 cv
991.545 2385.71 1007.97 2410.9 1014.63 2421.19 cv
1014.9 2421.61 1015.17 2422.04 1015.43 2422.47 cv
f
903.61 2445.44 mo
904.219 2446.58 904.733 2447.76 905.142 2448.95 cv
909.638 2462.03 911.692 2476.99 912.865 2490.73 cv
915.376 2520.14 905.228 2548.59 899.466 2577.1 cv
894.165 2603.32 889.017 2629.58 883.66 2655.79 cv
883.104 2658.51 882.548 2661.23 881.991 2663.95 cv
879.389 2612.66 878.076 2561.12 874.535 2509.91 cv
873.474 2494.58 863.857 2438.41 889.316 2435.89 cv
895.417 2435.29 900.638 2439.87 903.61 2445.44 cv
cp
f
810.189 2395.11 mo
809.244 2396.79 808.259 2398.45 807.229 2400.08 cv
799.824 2411.8 789.74 2421.94 780.898 2432.58 cv
764.542 2452.27 748.185 2471.96 731.83 2491.65 cv
714.295 2512.76 696.762 2533.88 679.225 2554.99 cv
692.46 2529.1 705.695 2503.2 718.931 2477.31 cv
736.666 2442.62 755.007 2408.17 772.163 2373.18 cv
777.76 2361.77 789.317 2354.15 799.647 2347.03 cv
812.041 2338.48 828.148 2350.74 823.206 2364.96 cv
819.615 2375.3 815.561 2385.56 810.189 2395.11 cv
f
694.167 2316.15 mo
685.32 2319.75 675.77 2321.83 666.489 2323.59 cv
650.746 2326.57 635.167 2330.36 619.544 2333.94 cv
593.664 2339.86 567.783 2345.79 541.902 2351.72 cv
535.968 2353.08 530.034 2354.43 524.1 2355.79 cv
564.824 2337.32 605.625 2319.01 646.278 2300.38 cv
663.65 2292.42 678.457 2286.13 697.577 2284.2 cv
711.843 2282.76 718.649 2301.27 706.846 2309.41 cv
702.879 2312.15 698.612 2314.34 694.167 2316.15 cv
cp
f
673.513 2213.24 mo
660.865 2211.09 647.338 2204.15 636.289 2200.18 cv
615.429 2192.7 594.57 2185.21 573.71 2177.73 cv
549.47 2169.03 525.229 2160.33 500.989 2151.64 cv
535.978 2153.45 570.967 2155.26 605.955 2157.07 cv
618.222 2157.7 630.487 2158.34 642.752 2158.97 cv
654.137 2159.56 665.711 2160.28 676.222 2165.12 cv
686.133 2169.68 733.324 2193.59 714.089 2208.21 cv
704.173 2215.75 685.204 2215.23 673.513 2213.24 cv
f
718.082 2070.52 mo
716.579 2068.86 715.175 2067.05 713.891 2065.04 cv
711.291 2060.95 708.559 2056.94 705.894 2052.9 cv
697.455 2040.09 689.015 2027.28 680.576 2014.47 cv
659.716 1982.81 638.858 1951.15 618 1919.5 cv
607.875 1904.13 597.752 1888.76 587.628 1873.4 cv
764.123 2048.56 li
765.283 2049.71 766.244 2051.04 766.967 2052.51 cv
766.967 2052.51 781.259 2081.46 781.319 2081.58 cv
784.276 2087.57 782.308 2094.93 777.501 2099.35 cv
771.38 2104.98 764.563 2103.37 758.221 2099.23 cv
745.043 2090.61 728.759 2082.26 718.082 2070.52 cv
f
829.961 2009.47 mo
820.158 1832.78 li
867.551 2024.25 li
867.823 2025.35 867.961 2026.48 867.961 2027.61 cv
867.961 2028.93 li
867.961 2043.76 847.945 2048.43 841.381 2035.14 cv
831.387 2014.9 li
830.551 2013.2 830.065 2011.36 829.961 2009.47 cv
cp
f
994.62 2240.09 mo
994.62 2244.96 1000.96 2249.44 1000.35 2254.14 cv
999.724 2258.95 995.393 2262.42 994.165 2267.02 cv
992.915 2271.69 1003.56 2280.44 1001.73 2284.84 cv
999.88 2289.3 989.039 2289.61 986.643 2293.75 cv
984.232 2297.92 977.457 2298.31 974.537 2302.11 cv
971.608 2305.92 975.204 2314.81 971.81 2318.2 cv
968.416 2321.6 968.239 2329.33 964.427 2332.26 cv
962.465 2333.77 959.001 2333.13 955.536 2332.49 cv
952.289 2331.89 949.039 2331.29 947.023 2332.46 cv
942.883 2334.86 939.873 2338.95 935.414 2340.8 cv
931.008 2342.63 928.824 2352.49 924.15 2353.74 cv
921.791 2354.37 918.743 2351.9 915.684 2349.42 cv
912.779 2347.07 909.866 2344.71 907.522 2345.02 cv
902.819 2345.63 898.571 2355.68 893.701 2355.68 cv
888.832 2355.68 883.237 2355.95 878.535 2355.33 cv
873.723 2354.71 867.911 2354.74 863.313 2353.51 cv
858.639 2352.26 858.22 2338.22 853.813 2336.4 cv
851.655 2335.5 848.601 2336.51 845.554 2337.52 cv
842.301 2338.6 839.056 2339.67 836.92 2338.44 cv
832.752 2336.02 835.468 2323.87 831.669 2320.95 cv
827.856 2318.02 825.756 2314.82 822.362 2311.43 cv
818.969 2308.04 812.729 2308.28 809.799 2304.47 cv
806.88 2300.67 803.534 2297.7 801.122 2293.54 cv
798.728 2289.4 792.824 2287.1 790.976 2282.64 cv
789.148 2278.23 786.502 2273.82 785.253 2269.15 cv
784.025 2264.55 781.772 2259.72 781.145 2254.91 cv
780.532 2250.21 787.862 2244.96 787.862 2240.09 cv
787.862 2235.22 775.135 2229.28 775.748 2224.57 cv
776.375 2219.76 779.914 2214.53 781.143 2209.94 cv
782.392 2205.26 784.723 2200.11 786.551 2195.71 cv
788.4 2191.25 800.734 2191.95 803.13 2187.81 cv
805.542 2183.64 810.614 2182.39 813.533 2178.59 cv
816.463 2174.78 805.942 2159.12 809.336 2155.73 cv
811.095 2153.97 814.628 2153.97 818.154 2153.97 cv
821.429 2153.97 824.7 2153.97 826.536 2152.56 cv
830.335 2149.64 835.604 2149.09 839.773 2146.68 cv
843.912 2144.28 844.698 2134.41 849.157 2132.56 cv
851.506 2131.58 854.472 2131.93 857.44 2132.28 cv
860.039 2132.59 862.637 2132.89 864.821 2132.31 cv
869.417 2131.08 873.977 2127.43 878.79 2126.8 cv
883.492 2126.19 888.832 2134.71 893.701 2134.71 cv
898.571 2134.71 904.521 2121.49 909.225 2122.11 cv
914.037 2122.74 916.4 2137.01 920.998 2138.24 cv
923.266 2138.85 926.316 2137.19 929.359 2135.54 cv
932.586 2133.79 935.803 2132.04 938.072 2132.98 cv
942.53 2134.83 945.969 2140 950.109 2142.4 cv
954.277 2144.81 951.265 2157.19 955.064 2160.11 cv
958.876 2163.04 961.736 2165.27 965.13 2168.67 cv
966.783 2170.32 970.499 2170.05 974.212 2169.78 cv
978.117 2169.5 982.02 2169.22 983.523 2171.17 cv
986.442 2174.97 981.739 2183.71 984.151 2187.88 cv
986.546 2192.02 995.548 2192.68 997.397 2197.14 cv
999.225 2201.55 1005.68 2205.08 1006.93 2209.76 cv
1008.16 2214.35 1008.76 2220.06 1009.39 2224.87 cv
1010 2229.57 994.62 2235.22 994.62 2240.09 cv
.984314 .858824 .466667 rgb
f
984.54 2239.98 mo
984.54 2244.37 990.259 2248.4 989.706 2252.63 cv
989.14 2256.97 985.238 2260.1 984.131 2264.24 cv
983.005 2268.45 992.595 2276.33 990.947 2280.31 cv
989.281 2284.32 979.511 2284.6 977.352 2288.33 cv
975.179 2292.09 969.072 2292.45 966.441 2295.87 cv
963.801 2299.31 967.042 2307.31 963.983 2310.37 cv
960.925 2313.43 960.765 2320.4 957.329 2323.04 cv
955.561 2324.4 952.439 2323.82 949.316 2323.25 cv
946.389 2322.71 943.461 2322.17 941.644 2323.22 cv
937.914 2325.38 935.2 2329.07 931.182 2330.74 cv
927.211 2332.39 925.244 2341.28 921.03 2342.4 cv
918.904 2342.97 916.157 2340.74 913.4 2338.5 cv
910.783 2336.38 908.156 2334.26 906.045 2334.54 cv
901.807 2335.09 897.977 2344.15 893.59 2344.15 cv
889.201 2344.15 884.159 2344.39 879.921 2343.84 cv
875.583 2343.27 870.346 2343.3 866.204 2342.19 cv
861.99 2341.07 861.613 2328.42 857.641 2326.77 cv
855.697 2325.96 852.945 2326.87 850.197 2327.78 cv
847.266 2328.75 844.342 2329.72 842.417 2328.61 cv
838.659 2326.43 841.108 2315.48 837.683 2312.84 cv
834.247 2310.2 832.355 2307.33 829.297 2304.27 cv
826.238 2301.21 820.615 2301.43 817.974 2297.99 cv
815.342 2294.57 812.328 2291.9 810.154 2288.14 cv
807.996 2284.41 802.676 2282.34 801.01 2278.32 cv
799.362 2274.35 796.978 2270.38 795.853 2266.17 cv
794.745 2262.02 792.716 2257.67 792.15 2253.33 cv
791.597 2249.09 798.204 2244.37 798.204 2239.98 cv
798.204 2235.59 786.734 2230.23 787.286 2225.99 cv
787.852 2221.65 791.04 2216.94 792.148 2212.8 cv
793.274 2208.58 795.374 2203.95 797.022 2199.97 cv
798.688 2195.96 809.804 2196.59 811.962 2192.86 cv
814.137 2189.1 818.708 2187.97 821.34 2184.55 cv
823.98 2181.11 814.498 2167 817.557 2163.94 cv
819.142 2162.36 822.326 2162.36 825.504 2162.36 cv
828.456 2162.36 831.402 2162.36 833.058 2161.09 cv
836.482 2158.46 841.23 2157.96 844.987 2155.79 cv
848.717 2153.63 849.427 2144.73 853.445 2143.06 cv
855.562 2142.18 858.235 2142.5 860.909 2142.81 cv
863.252 2143.09 865.594 2143.37 867.562 2142.84 cv
871.704 2141.73 875.814 2138.44 880.15 2137.87 cv
884.388 2137.32 889.201 2145.01 893.59 2145.01 cv
897.977 2145.01 903.342 2133.09 907.579 2133.65 cv
911.917 2134.21 914.047 2147.08 918.189 2148.18 cv
920.233 2148.73 922.982 2147.24 925.724 2145.75 cv
928.632 2144.17 931.533 2142.59 933.577 2143.44 cv
937.595 2145.11 940.695 2149.77 944.425 2151.93 cv
948.182 2154.1 945.467 2165.26 948.891 2167.9 cv
952.327 2170.53 954.903 2172.55 957.962 2175.6 cv
959.453 2177.09 962.802 2176.85 966.148 2176.61 cv
969.668 2176.36 973.185 2176.1 974.539 2177.86 cv
977.171 2181.29 972.932 2189.16 975.105 2192.92 cv
977.264 2196.65 985.377 2197.25 987.044 2201.27 cv
988.69 2205.24 994.511 2208.42 995.638 2212.64 cv
996.744 2216.78 997.287 2221.92 997.852 2226.26 cv
998.405 2230.49 984.54 2235.59 984.54 2239.98 cv
.984314 .360784 .662745 rgb
f
901.448 2424.11 mo
900.466 2422.62 899.471 2421.16 898.462 2419.73 cv
896.489 2416.92 893.33 2414.47 890.032 2414.47 cv
889.468 2414.47 888.9 2414.54 888.333 2414.69 cv
884.748 2415.66 881.576 2419.25 878.858 2423.64 cv
855.387 2421.74 833.159 2415.43 813.003 2405.55 cv
818.512 2395.3 822.878 2384.38 825.304 2373.06 cv
827.15 2364.45 831.022 2347.7 822.586 2341.28 cv
820.821 2339.94 818.755 2339.42 816.564 2339.42 cv
811.04 2339.42 804.705 2342.73 800.297 2344.53 cv
786.575 2350.16 772.891 2358.4 763.751 2370.31 cv
744.667 2351.23 729.752 2327.97 720.49 2302.04 cv
720.769 2301.64 721.043 2301.24 721.316 2300.83 cv
727.096 2292.18 726.405 2284.61 714.621 2282.08 cv
711.475 2268.59 709.813 2254.54 709.813 2240.09 cv
709.813 2233.98 710.111 2227.93 710.693 2221.97 cv
719.803 2220.07 729.807 2216.9 734.788 2211.46 cv
742.932 2202.57 729.62 2189.34 719.494 2181.01 cv
728.862 2153.34 744.633 2128.61 765.041 2108.6 cv
767.864 2109.49 770.714 2110.31 773.59 2111.06 cv
775.534 2112.35 777.579 2112.91 779.546 2112.91 cv
786.765 2112.91 792.945 2105.27 789.331 2097.51 cv
788.788 2094.91 788.209 2092.32 787.593 2089.75 cv
817.638 2068.45 854.343 2055.93 893.974 2055.93 cv
917.576 2055.93 940.136 2060.37 960.874 2068.46 cv
962.015 2076.61 965.265 2083.94 973.417 2083.94 cv
973.447 2083.94 973.479 2083.93 973.509 2083.93 cv
977.206 2083.91 981.255 2082.29 985.117 2080.03 cv
997.068 2086.85 1008.17 2094.97 1018.26 2104.19 cv
1010.83 2111.83 1004.16 2120.2 998.571 2129.6 cv
994.43 2136.57 999.741 2152.82 1008.71 2156.3 cv
1012.16 2157.64 1015.8 2158.24 1019.53 2158.24 cv
1030.32 2158.24 1041.93 2153.19 1052.56 2146.42 cv
1058.59 2156.6 1063.67 2167.42 1067.67 2178.75 cv
1053.01 2183.63 1038.98 2190.29 1025.84 2200 cv
1019.66 2204.56 1014.95 2213.03 1022.61 2219.41 cv
1025.15 2221.52 1028.38 2222.61 1031.56 2223.52 cv
1040.62 2226.11 1049.74 2227.36 1058.84 2227.36 cv
1065.1 2227.36 1071.36 2226.77 1077.57 2225.62 cv
1077.95 2230.39 1078.14 2235.22 1078.14 2240.09 cv
1078.14 2258.83 1075.34 2276.92 1070.13 2293.96 cv
1068.71 2293.92 1067.28 2293.9 1065.86 2293.9 cv
1058.99 2293.9 1052.09 2294.35 1045.23 2294.99 cv
1035.99 2295.85 1010.62 2297.77 1013.14 2312.31 cv
1015.84 2327.85 1029.63 2338.98 1042.49 2349.02 cv
1029.26 2367.02 1012.84 2382.52 994.067 2394.7 cv
992.403 2393.41 990.734 2392.13 989.065 2390.86 cv
985.298 2388.01 979.882 2384.74 975.046 2384.74 cv
972.04 2384.74 969.259 2386 967.237 2389.4 cv
963.796 2395.19 963.305 2402.87 963.803 2410.55 cv
944.449 2418.49 923.444 2423.23 901.448 2424.11 cv
851.871 2336.05 mo
852.573 2336.05 853.226 2336.15 853.813 2336.4 cv
858.22 2338.22 858.639 2352.26 863.313 2353.51 cv
867.911 2354.74 873.723 2354.71 878.535 2355.33 cv
881.066 2355.66 883.856 2355.74 886.652 2355.74 cv
889.05 2355.74 891.453 2355.68 893.701 2355.68 cv
898.571 2355.68 902.819 2345.63 907.522 2345.02 cv
907.661 2345 907.802 2344.99 907.945 2344.99 cv
910.211 2344.99 912.952 2347.21 915.684 2349.42 cv
918.415 2351.63 921.139 2353.84 923.37 2353.84 cv
923.637 2353.84 923.897 2353.81 924.15 2353.74 cv
928.824 2352.49 931.008 2342.63 935.414 2340.8 cv
939.873 2338.95 942.883 2334.86 947.023 2332.46 cv
947.866 2331.97 948.923 2331.79 950.106 2331.79 cv
951.754 2331.79 953.646 2332.14 955.536 2332.49 cv
957.427 2332.84 959.317 2333.19 960.963 2333.19 cv
962.334 2333.19 963.536 2332.95 964.427 2332.26 cv
968.239 2329.33 968.416 2321.6 971.81 2318.2 cv
975.204 2314.81 971.608 2305.92 974.537 2302.11 cv
977.457 2298.31 984.232 2297.92 986.643 2293.75 cv
989.039 2289.61 999.88 2289.3 1001.73 2284.84 cv
1003.56 2280.44 992.915 2271.69 994.165 2267.02 cv
995.393 2262.42 999.724 2258.95 1000.35 2254.14 cv
1000.96 2249.44 994.62 2244.96 994.62 2240.09 cv
994.62 2235.22 1010 2229.57 1009.39 2224.87 cv
1008.76 2220.06 1008.16 2214.35 1006.93 2209.76 cv
1005.68 2205.08 999.225 2201.55 997.397 2197.14 cv
995.548 2192.68 986.546 2192.02 984.151 2187.88 cv
981.739 2183.71 986.442 2174.97 983.523 2171.17 cv
982.555 2169.91 980.591 2169.58 978.271 2169.58 cv
976.99 2169.58 975.601 2169.68 974.212 2169.78 cv
972.823 2169.88 971.435 2169.98 970.153 2169.98 cv
968.008 2169.98 966.165 2169.7 965.13 2168.67 cv
961.736 2165.27 958.876 2163.04 955.064 2160.11 cv
951.265 2157.19 954.277 2144.81 950.109 2142.4 cv
945.969 2140 942.53 2134.83 938.072 2132.98 cv
937.633 2132.8 937.159 2132.72 936.656 2132.72 cv
934.558 2132.72 931.961 2134.13 929.359 2135.54 cv
926.757 2136.95 924.148 2138.37 922.029 2138.37 cv
921.67 2138.37 921.326 2138.33 920.998 2138.24 cv
916.4 2137.01 914.037 2122.74 909.225 2122.11 cv
909.118 2122.09 909.011 2122.09 908.903 2122.09 cv
904.252 2122.09 898.46 2134.71 893.701 2134.71 cv
889.001 2134.71 883.862 2126.77 879.282 2126.77 cv
879.117 2126.77 878.953 2126.78 878.79 2126.8 cv
873.977 2127.43 869.417 2131.08 864.821 2132.31 cv
863.919 2132.55 862.945 2132.64 861.93 2132.64 cv
860.49 2132.64 858.965 2132.46 857.44 2132.28 cv
855.915 2132.1 854.392 2131.92 852.952 2131.92 cv
851.588 2131.92 850.3 2132.08 849.157 2132.56 cv
844.698 2134.41 843.912 2144.28 839.773 2146.68 cv
835.604 2149.09 830.335 2149.64 826.536 2152.56 cv
824.751 2153.93 821.611 2153.97 818.428 2153.97 cv
818.337 2153.97 818.245 2153.97 818.154 2153.97 cv
814.628 2153.97 811.095 2153.97 809.336 2155.73 cv
805.942 2159.12 816.463 2174.78 813.533 2178.59 cv
810.614 2182.39 805.542 2183.64 803.13 2187.81 cv
800.734 2191.95 788.4 2191.25 786.551 2195.71 cv
784.723 2200.11 782.392 2205.26 781.143 2209.94 cv
779.914 2214.53 776.375 2219.76 775.748 2224.57 cv
775.135 2229.28 787.862 2235.22 787.862 2240.09 cv
787.862 2244.96 780.532 2250.21 781.145 2254.91 cv
781.772 2259.72 784.025 2264.55 785.253 2269.15 cv
786.502 2273.82 789.148 2278.23 790.976 2282.64 cv
792.824 2287.1 798.728 2289.4 801.122 2293.54 cv
803.534 2297.7 806.88 2300.67 809.799 2304.47 cv
812.729 2308.28 818.969 2308.04 822.362 2311.43 cv
825.756 2314.82 827.856 2318.02 831.669 2320.95 cv
835.468 2323.87 832.752 2336.02 836.92 2338.44 cv
837.599 2338.83 838.389 2338.99 839.256 2338.99 cv
841.119 2338.99 843.335 2338.25 845.554 2337.52 cv
847.772 2336.78 849.994 2336.05 851.871 2336.05 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1019.53 2158.24 mo
1015.8 2158.24 1012.16 2157.64 1008.71 2156.3 cv
999.741 2152.82 994.43 2136.57 998.571 2129.6 cv
1004.16 2120.2 1010.83 2111.83 1018.26 2104.19 cv
1020.33 2106.09 1022.37 2108.04 1024.36 2110.03 cv
1022.87 2111.03 li
1021.71 2111.81 1020.64 2112.73 1019.71 2113.78 cv
1015.46 2118.52 li
1005.22 2129.96 1014.41 2146.58 1027.73 2146.58 cv
1029.83 2146.58 1032.02 2146.17 1034.27 2145.26 cv
1046.05 2140.48 li
1046.79 2140.18 1047.52 2139.83 1048.21 2139.42 cv
1049.71 2141.72 1051.16 2144.05 1052.56 2146.42 cv
1041.93 2153.19 1030.32 2158.24 1019.53 2158.24 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`
p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCY
oD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LUrqH$`p[eCYoD\LU
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rqH$`p[\=Xnbr1NrV#[Xp$M\Lm/6M@r:B1MoB6#AjneN.qXNS@nDO-2hY?Noq!Hf0mF_1"f(SFZp?L*!
l-K"cc1L2BoB+0dk/[&R`:E!+n`.FSik=j?]C4[fmbbJ@hQuV*Z0^8Km+\W-g8XAjVs;p2l.;ZneXu'T
SEJ@ik0fUXd?Nb>P2srMj3EVDc&(H(LZ-C/i5pQ.aF<$eI,;hfh8FHl_fOVME8/3Gg;%IW^1Z-4AD"P'
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVc]nrVc]nrVc]nrVZTkr;?Kjr;?Kjr;?Hhqtp9fqtp9fqtp6dqYL'bqYL$`q>'j^q>'g\q"XXZq"XUX
p\4FVp\4CTp@e4Rp@e1Pp%A"Np%@tLo^qbHoCMSFoCMPDo()ABo()AAnaZ/>naZ/=nF5r9n*f`6n*f`5
mdBN1mHs<.mHs<-m-O*)lg*m&lg*m%lK[[!l07Hsl07Hrkih6nkND$kkND$jk2tggjlPUcjQ,C_jQ,C_
j5]1[io8tWio8tWiSibSi8EPOhr!>Khr!>KhVR,Gh;-oCgt^]?gt^]?gY:K;g=k97g"G'3g"G'3f\"j/
~>
<~p@e4Rp@e4Rp@e4Rp@\+Op%A"Np%7nKo^qbHoCMSFoCMPDo()ABo()>@naZ,<nF5r:nF5o8n*f]4mdBK0
mHs9,m-O**m-O'(lg*j$lK[Wul07Eqkih3mkND!ik2tdejlPUcjlGL_j5]1[j5]1Zio8tViSibRi8EPN
hr!>JhVR,Fh;-oBgt^]>gY:K:g=k96g"G'2f\"j.f@SX*f%&=#eC<!se'ldodaHRldF$@hd*U.dcd0q`
cHa_\c-=MXbfn;TbKJ&NaiVZHaN2HDa2c6@`l?!:`5KU4_o'C0_SX1,_83t(^qdb$^V@Ls]tM+m]Y(ni
~>
<~o()ABo'u8?naQ&;nF,i6md9E/mHj3+m-O'(lK[Wul07EqkND!ijlPRajQ,@]io8qUi8EMMhVR)Egt^Z=
g=k65f\"g-f%/C%eC;srdaHOjd*L"_c-=JVbKJ&NaiVWFa2c6?`Pf^4_ns:,_8*k$^:h4m]Xtee\[]/Y
\$i`Q['[0FZE^[=YHP+2XfSV)WiE%sW2HPjVPU,bUnaZXTqJ$LSt2C@S!oe6R@'>-QBd]!PEV/mOcYWb
NfB!VMi*@JLkphAL4t>7K7\]+J:E&tI=6KjH[:!`G^"=RFEDSFEcQ/=Df9N1Ci!m%Bk_6nAnGUb@q/tV
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
1058.84 2227.36 mo
1049.74 2227.36 1040.62 2226.11 1031.56 2223.52 cv
1028.38 2222.61 1025.15 2221.52 1022.61 2219.41 cv
1014.95 2213.03 1019.66 2204.56 1025.84 2200 cv
1038.98 2190.29 1053.01 2183.63 1067.67 2178.75 cv
1068.44 2180.93 1069.17 2183.13 1069.86 2185.35 cv
1063 2186.14 li
1061.55 2186.31 1060.12 2186.67 1058.76 2187.22 cv
1051.44 2190.19 li
1035.27 2196.74 1039.48 2220.71 1056.91 2221.38 cv
1057.11 2221.38 1057.32 2221.39 1057.52 2221.39 cv
1059.15 2221.39 1060.77 2221.14 1062.32 2220.66 cv
1076.6 2216.23 li
1077.01 2219.34 1077.33 2222.46 1077.57 2225.62 cv
1071.36 2226.77 1065.1 2227.36 1058.84 2227.36 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
1042.49 2349.02 mo
1029.63 2338.98 1015.84 2327.85 1013.14 2312.31 cv
1010.62 2297.77 1035.99 2295.85 1045.23 2294.99 cv
1052.09 2294.35 1058.99 2293.9 1065.86 2293.9 cv
1067.28 2293.9 1068.71 2293.92 1070.13 2293.96 cv
1069.27 2296.8 1068.33 2299.6 1067.34 2302.38 cv
1061.31 2301 1054.9 2300.02 1049.05 2300.02 cv
1046.38 2300.02 1043.83 2300.23 1041.48 2300.69 cv
1032.13 2302.51 1025.02 2311.74 1029.42 2321.17 cv
1033.04 2328.92 1039.69 2336.23 1046.92 2342.71 cv
1045.48 2344.84 1044 2346.95 1042.49 2349.02 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
963.803 2410.55 mo
963.305 2402.87 963.796 2395.19 967.237 2389.4 cv
969.259 2386 972.04 2384.74 975.046 2384.74 cv
979.882 2384.74 985.298 2388.01 989.065 2390.86 cv
990.734 2392.13 992.403 2393.41 994.067 2394.7 cv
993.485 2395.08 992.896 2395.46 992.31 2395.83 cv
989.415 2394.1 986.419 2393.05 983.411 2393.05 cv
981.087 2393.05 978.752 2393.68 976.45 2395.11 cv
972.193 2397.76 969.755 2402.83 970.254 2407.76 cv
968.122 2408.73 965.977 2409.66 963.803 2410.55 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
893.974 2424.25 mo
888.883 2424.25 883.844 2424.05 878.858 2423.64 cv
881.576 2419.25 884.748 2415.66 888.333 2414.69 cv
888.9 2414.54 889.468 2414.47 890.032 2414.47 cv
893.33 2414.47 896.489 2416.92 898.462 2419.73 cv
899.471 2421.16 900.466 2422.62 901.448 2424.11 cv
898.97 2424.2 896.475 2424.25 893.974 2424.25 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
813.003 2405.55 mo
810.648 2404.39 808.322 2403.19 806.025 2401.94 cv
806.434 2401.32 806.835 2400.7 807.229 2400.08 cv
808.259 2398.45 809.244 2396.79 810.189 2395.11 cv
815.561 2385.56 819.615 2375.3 823.206 2364.96 cv
827.015 2354 818.319 2344.2 808.455 2344.2 cv
805.523 2344.2 802.487 2345.07 799.647 2347.03 cv
789.317 2354.15 777.76 2361.77 772.163 2373.18 cv
771.592 2374.35 771.017 2375.52 770.443 2376.68 cv
768.16 2374.61 765.927 2372.49 763.751 2370.31 cv
772.891 2358.4 786.575 2350.16 800.297 2344.53 cv
804.705 2342.73 811.04 2339.42 816.564 2339.42 cv
818.755 2339.42 820.821 2339.94 822.586 2341.28 cv
831.022 2347.7 827.15 2364.45 825.304 2373.06 cv
822.878 2384.38 818.512 2395.3 813.003 2405.55 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
720.49 2302.04 mo
718.172 2295.54 716.208 2288.89 714.621 2282.08 cv
726.405 2284.61 727.096 2292.18 721.316 2300.83 cv
721.043 2301.24 720.769 2301.64 720.49 2302.04 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
710.693 2221.97 mo
711.107 2217.73 711.665 2213.54 712.361 2209.39 cv
712.963 2209.02 713.54 2208.63 714.089 2208.21 cv
720.041 2203.68 719.634 2198.27 715.937 2192.82 cv
716.994 2188.83 718.181 2184.89 719.494 2181.01 cv
729.62 2189.34 742.932 2202.57 734.788 2211.46 cv
729.807 2216.9 719.803 2220.07 710.693 2221.97 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
779.546 2112.91 mo
777.579 2112.91 775.534 2112.35 773.59 2111.06 cv
770.714 2110.31 767.864 2109.49 765.041 2108.6 cv
767.086 2106.59 769.182 2104.63 771.319 2102.72 cv
773.427 2102.26 775.501 2101.19 777.501 2099.35 cv
778.968 2098 780.171 2096.38 781.05 2094.61 cv
783.192 2092.94 785.377 2091.32 787.593 2089.75 cv
788.209 2092.32 788.788 2094.91 789.331 2097.51 cv
792.945 2105.27 786.765 2112.91 779.546 2112.91 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
973.417 2083.94 mo
965.265 2083.94 962.015 2076.61 960.874 2068.46 cv
969.269 2071.73 977.374 2075.61 985.117 2080.03 cv
981.255 2082.29 977.206 2083.91 973.509 2083.93 cv
973.479 2083.93 973.447 2083.94 973.417 2083.94 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
1027.73 2146.58 mo
1014.41 2146.58 1005.22 2129.96 1015.46 2118.52 cv
1019.71 2113.78 li
1020.64 2112.73 1021.71 2111.81 1022.87 2111.03 cv
1024.36 2110.03 li
1033.27 2118.97 1041.27 2128.81 1048.21 2139.42 cv
1047.52 2139.83 1046.79 2140.18 1046.05 2140.48 cv
1034.27 2145.26 li
1032.02 2146.17 1029.83 2146.58 1027.73 2146.58 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OU
o]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMK
li-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PBrq,OUo]uMKli-PB
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rq,OUo]lGIkl(,8rUT%Jo&BT:i;E*#qsW;:mb%C'eb\X]q<QE'lHT+gb4t2?pZKHfjhUTN^%LErp#<FP
iNi(4YOgVOo%g88gnaJoT^^X*n(=&ses5[ROmUYXmF$jXd=po4Ja1O/lHOV=bB<$kETkJ\kJq<!`FS)K
@-,71jM=pX^Jj.+:Z8rYi4;D9\O#,_4l3V,h6]#oZ7k"</).6Sg9)UPX<#rn(tY`#f;B,0V$bbK"k97H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVc]nrVc]nrVc]nrVZTkr;?Kjr;?Kjr;?Hhqtp9fqtp6dqYL'bqYL$`q>'j^q>'g\q"XXZq"XUXp\4FV
p\4CTp@e1Pp%A"Np%@tLo^qeJo^qbHoCMPDo()ABo()>@naZ/>naZ/=nF5r9n*f`5mdBN2mdBN1mHs<-
m-O**m-O*)lg*m%lK[[!l07Hsl07Hrkih6nkND$kkND$jk2tgfjlPUbjQ,C_jQ,C_j5]1[io8tWiSibS
i8EPOhr!>Khr!>KhVR,Gh;-oCgt^]?gY:K;gY:K;g=k97g"G'3f\"j/f@SX+f%/F'f%/F'e^`4#eC<!t
~>
<~oCMSFoCMSFoCDJCo()ABo'u8?naZ/=nF5o8n*f`6n*f]4mdBK0mHs9,m-O'(lg*j$lK[Wul07Eqkih3m
kND!ijlPRajQ,@]j5].Yio8qUiSi_Qhr!;IhVR)Eh;-lAgt^]>gY1B7g"G'2f\"j.f@JO'e^`4"eC<!s
e'c[ldF$@gd*L%`cHa_[c-=MWbfe2Pb0%lKaiMQDa2c6?`l5p8`5KU3_ns:,_83t(^qd_"^:q=q]tM(k
]=YYc\[f8]\@B&Y\$rfS[C*BKZa6sCZ*CR=Yct=7Y-+q1Xf\\+X/i8#WMukrW2QVlVP^2dUnjf^USFQX
~>
<~lK[["lKRQski_-kk2k^cjQ#:[io/kSi8EMLh;-lAgY:H8f\"g,e^`1!e'lamd*U+acHXSVbK@rJa2Z*:
`5BI._8*h"^:h1k]",>\\$i]OZa-j@Yck43XK/A$WMl_lV50o^U7n6PSt2FBS!ob4Q^3o$PEM&iO,f3Y
Mi*@ILPCM9K7\Z)IsufnH[9s^GBS+NF)l8>Df0E.CMIQsB4b^b@UWYO?<pf?>$4s/<`N*t;Gg7d9h\2P
8Ou?@770C-5X.Fq4?>J^2`<NM1GUX;/hJV).Oc_l,pX]Y+<MXF*#fe5(D[`!&ePZc%1EUO#m^b?"9S]+
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
1057.52 2221.39 mo
1057.32 2221.39 1057.11 2221.38 1056.91 2221.38 cv
1039.48 2220.71 1035.27 2196.74 1051.44 2190.19 cv
1058.76 2187.22 li
1060.12 2186.67 1061.55 2186.31 1063 2186.14 cv
1069.86 2185.35 li
1072.96 2195.31 1075.23 2205.63 1076.6 2216.23 cv
1062.32 2220.66 li
1060.77 2221.14 1059.15 2221.39 1057.52 2221.39 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
1046.92 2342.71 mo
1039.69 2336.23 1033.04 2328.92 1029.42 2321.17 cv
1025.02 2311.74 1032.13 2302.51 1041.48 2300.69 cv
1043.83 2300.23 1046.38 2300.02 1049.05 2300.02 cv
1054.9 2300.02 1061.31 2301 1067.34 2302.38 cv
1062.18 2316.73 1055.29 2330.26 1046.92 2342.71 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
970.254 2407.76 mo
969.755 2402.83 972.193 2397.76 976.45 2395.11 cv
978.752 2393.68 981.087 2393.05 983.411 2393.05 cv
986.419 2393.05 989.415 2394.1 992.31 2395.83 cv
985.266 2400.29 977.9 2404.28 970.254 2407.76 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
806.025 2401.94 mo
793.159 2394.93 781.221 2386.43 770.443 2376.68 cv
771.017 2375.52 771.592 2374.35 772.163 2373.18 cv
777.76 2361.77 789.317 2354.15 799.647 2347.03 cv
802.487 2345.07 805.523 2344.2 808.455 2344.2 cv
818.319 2344.2 827.015 2354 823.206 2364.96 cv
819.615 2375.3 815.561 2385.56 810.189 2395.11 cv
809.244 2396.79 808.259 2398.45 807.229 2400.08 cv
806.835 2400.7 806.434 2401.32 806.025 2401.94 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
712.361 2209.39 mo
713.304 2203.77 714.498 2198.25 715.937 2192.82 cv
719.634 2198.27 720.041 2203.68 714.089 2208.21 cv
713.54 2208.63 712.963 2209.02 712.361 2209.39 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
771.319 2102.72 mo
774.469 2099.9 777.711 2097.2 781.05 2094.61 cv
780.171 2096.38 778.968 2098 777.501 2099.35 cv
775.501 2101.19 773.427 2102.26 771.319 2102.72 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
886.652 2355.74 mo
883.856 2355.74 881.066 2355.66 878.535 2355.33 cv
873.723 2354.71 867.911 2354.74 863.313 2353.51 cv
858.639 2352.26 858.22 2338.22 853.813 2336.4 cv
853.226 2336.15 852.573 2336.05 851.871 2336.05 cv
849.994 2336.05 847.772 2336.78 845.554 2337.52 cv
843.335 2338.25 841.119 2338.99 839.256 2338.99 cv
838.389 2338.99 837.599 2338.83 836.92 2338.44 cv
832.752 2336.02 835.468 2323.87 831.669 2320.95 cv
827.856 2318.02 825.756 2314.82 822.362 2311.43 cv
818.969 2308.04 812.729 2308.28 809.799 2304.47 cv
806.88 2300.67 803.534 2297.7 801.122 2293.54 cv
798.728 2289.4 792.824 2287.1 790.976 2282.64 cv
789.148 2278.23 786.502 2273.82 785.253 2269.15 cv
784.025 2264.55 781.772 2259.72 781.145 2254.91 cv
780.532 2250.21 787.862 2244.96 787.862 2240.09 cv
787.862 2235.22 775.135 2229.28 775.748 2224.57 cv
776.375 2219.76 779.914 2214.53 781.143 2209.94 cv
782.392 2205.26 784.723 2200.11 786.551 2195.71 cv
788.4 2191.25 800.734 2191.95 803.13 2187.81 cv
805.542 2183.64 810.614 2182.39 813.533 2178.59 cv
816.463 2174.78 805.942 2159.12 809.336 2155.73 cv
811.095 2153.97 814.628 2153.97 818.154 2153.97 cv
818.245 2153.97 818.337 2153.97 818.428 2153.97 cv
821.611 2153.97 824.751 2153.93 826.536 2152.56 cv
830.335 2149.64 835.604 2149.09 839.773 2146.68 cv
843.912 2144.28 844.698 2134.41 849.157 2132.56 cv
850.3 2132.08 851.588 2131.92 852.952 2131.92 cv
854.392 2131.92 855.915 2132.1 857.44 2132.28 cv
858.965 2132.46 860.49 2132.64 861.93 2132.64 cv
862.945 2132.64 863.919 2132.55 864.821 2132.31 cv
869.417 2131.08 873.977 2127.43 878.79 2126.8 cv
878.953 2126.78 879.117 2126.77 879.282 2126.77 cv
883.862 2126.77 889.001 2134.71 893.701 2134.71 cv
898.46 2134.71 904.252 2122.09 908.903 2122.09 cv
909.011 2122.09 909.118 2122.09 909.225 2122.11 cv
914.037 2122.74 916.4 2137.01 920.998 2138.24 cv
921.326 2138.33 921.67 2138.37 922.029 2138.37 cv
924.148 2138.37 926.757 2136.95 929.359 2135.54 cv
931.961 2134.13 934.558 2132.72 936.656 2132.72 cv
937.159 2132.72 937.633 2132.8 938.072 2132.98 cv
942.53 2134.83 945.969 2140 950.109 2142.4 cv
954.277 2144.81 951.265 2157.19 955.064 2160.11 cv
958.876 2163.04 961.736 2165.27 965.13 2168.67 cv
966.165 2169.7 968.008 2169.98 970.153 2169.98 cv
971.435 2169.98 972.823 2169.88 974.212 2169.78 cv
975.601 2169.68 976.99 2169.58 978.271 2169.58 cv
980.591 2169.58 982.555 2169.91 983.523 2171.17 cv
986.442 2174.97 981.739 2183.71 984.151 2187.88 cv
986.546 2192.02 995.548 2192.68 997.397 2197.14 cv
999.225 2201.55 1005.68 2205.08 1006.93 2209.76 cv
1008.16 2214.35 1008.76 2220.06 1009.39 2224.87 cv
1010 2229.57 994.62 2235.22 994.62 2240.09 cv
994.62 2244.96 1000.96 2249.44 1000.35 2254.14 cv
999.724 2258.95 995.393 2262.42 994.165 2267.02 cv
992.915 2271.69 1003.56 2280.44 1001.73 2284.84 cv
999.88 2289.3 989.039 2289.61 986.643 2293.75 cv
984.232 2297.92 977.457 2298.31 974.537 2302.11 cv
971.608 2305.92 975.204 2314.81 971.81 2318.2 cv
968.416 2321.6 968.239 2329.33 964.427 2332.26 cv
963.536 2332.95 962.334 2333.19 960.963 2333.19 cv
959.317 2333.19 957.427 2332.84 955.536 2332.49 cv
953.646 2332.14 951.754 2331.79 950.106 2331.79 cv
948.923 2331.79 947.866 2331.97 947.023 2332.46 cv
942.883 2334.86 939.873 2338.95 935.414 2340.8 cv
931.008 2342.63 928.824 2352.49 924.15 2353.74 cv
923.897 2353.81 923.637 2353.84 923.37 2353.84 cv
921.139 2353.84 918.415 2351.63 915.684 2349.42 cv
912.952 2347.21 910.211 2344.99 907.945 2344.99 cv
907.802 2344.99 907.661 2345 907.522 2345.02 cv
902.819 2345.63 898.571 2355.68 893.701 2355.68 cv
891.453 2355.68 889.05 2355.74 886.652 2355.74 cv
855.892 2326.46 mo
856.524 2326.46 857.112 2326.55 857.641 2326.77 cv
861.613 2328.42 861.99 2341.07 866.204 2342.19 cv
870.346 2343.3 875.583 2343.27 879.921 2343.84 cv
882.206 2344.13 884.724 2344.2 887.248 2344.2 cv
889.406 2344.2 891.567 2344.15 893.59 2344.15 cv
897.977 2344.15 901.807 2335.09 906.045 2334.54 cv
906.17 2334.52 906.297 2334.52 906.426 2334.52 cv
908.468 2334.52 910.938 2336.51 913.4 2338.5 cv
915.862 2340.5 918.317 2342.49 920.328 2342.49 cv
920.568 2342.49 920.803 2342.46 921.03 2342.4 cv
925.244 2341.28 927.211 2332.39 931.182 2330.74 cv
935.2 2329.07 937.914 2325.38 941.644 2323.22 cv
942.403 2322.78 943.356 2322.62 944.421 2322.62 cv
945.907 2322.62 947.612 2322.93 949.316 2323.25 cv
951.02 2323.56 952.724 2323.88 954.208 2323.88 cv
955.443 2323.88 956.526 2323.66 957.329 2323.04 cv
960.765 2320.4 960.925 2313.43 963.983 2310.37 cv
966.124 2308.23 965.179 2303.67 965.324 2299.94 cv
967.232 2297.67 969.033 2295.3 970.72 2292.85 cv
973.276 2291.64 976.036 2290.61 977.352 2288.33 cv
979.511 2284.6 989.281 2284.32 990.947 2280.31 cv
992.595 2276.33 983.005 2268.45 984.131 2264.24 cv
985.238 2260.1 989.14 2256.97 989.706 2252.63 cv
990.009 2250.31 988.422 2248.04 986.929 2245.75 cv
987.041 2243.88 987.098 2241.99 987.098 2240.09 cv
987.098 2238.82 987.073 2237.55 987.022 2236.29 cv
990.984 2232.9 998.255 2229.35 997.852 2226.26 cv
997.287 2221.92 996.744 2216.78 995.638 2212.64 cv
994.511 2208.42 988.69 2205.24 987.044 2201.27 cv
985.377 2197.25 977.264 2196.65 975.105 2192.92 cv
972.932 2189.16 977.171 2181.29 974.539 2177.86 cv
973.666 2176.73 971.895 2176.43 969.804 2176.43 cv
968.65 2176.43 967.399 2176.52 966.148 2176.61 cv
964.897 2176.7 963.646 2176.79 962.492 2176.79 cv
962.419 2176.79 962.347 2176.79 962.275 2176.79 cv
957.716 2171.87 952.632 2167.45 947.114 2163.61 cv
946.521 2159.3 947.037 2153.44 944.425 2151.93 cv
940.695 2149.77 937.595 2145.11 933.577 2143.44 cv
933.182 2143.28 932.754 2143.21 932.301 2143.21 cv
930.41 2143.21 928.069 2144.48 925.724 2145.75 cv
923.378 2147.03 921.028 2148.3 919.117 2148.3 cv
918.795 2148.3 918.484 2148.26 918.189 2148.18 cv
914.047 2147.08 911.917 2134.21 907.579 2133.65 cv
907.483 2133.63 907.387 2133.63 907.289 2133.63 cv
903.099 2133.63 897.878 2145.01 893.59 2145.01 cv
889.353 2145.01 884.722 2137.85 880.594 2137.85 cv
880.445 2137.85 880.297 2137.86 880.15 2137.87 cv
875.814 2138.44 871.704 2141.73 867.562 2142.84 cv
866.748 2143.06 865.87 2143.14 864.955 2143.14 cv
863.657 2143.14 862.283 2142.98 860.909 2142.81 cv
859.535 2142.65 858.161 2142.49 856.862 2142.49 cv
855.634 2142.49 854.474 2142.64 853.445 2143.06 cv
849.427 2144.73 848.717 2153.63 844.987 2155.79 cv
841.23 2157.96 836.482 2158.46 833.058 2161.09 cv
831.402 2162.36 828.456 2162.36 825.504 2162.36 cv
822.326 2162.36 819.142 2162.36 817.557 2163.94 cv
815.106 2166.39 820.704 2175.93 821.67 2181.4 cv
819.767 2183.74 817.979 2186.17 816.307 2188.69 cv
814.625 2189.84 813.014 2191.04 811.962 2192.86 cv
809.804 2196.59 798.688 2195.96 797.022 2199.97 cv
795.374 2203.95 793.274 2208.58 792.148 2212.8 cv
791.04 2216.94 787.852 2221.65 787.286 2225.99 cv
786.734 2230.23 798.204 2235.59 798.204 2239.98 cv
798.204 2244.37 791.597 2249.09 792.15 2253.33 cv
792.716 2257.67 794.745 2262.02 795.853 2266.17 cv
796.978 2270.38 799.362 2274.35 801.01 2278.32 cv
802.676 2282.34 807.996 2284.41 810.154 2288.14 cv
812.328 2291.9 815.342 2294.57 817.974 2297.99 cv
819.38 2299.82 821.631 2300.61 823.89 2301.42 cv
828.442 2306.62 833.565 2311.3 839.158 2315.38 cv
840.362 2319.62 839.434 2326.88 842.417 2328.61 cv
843.028 2328.96 843.741 2329.1 844.522 2329.1 cv
846.201 2329.1 848.198 2328.44 850.197 2327.78 cv
852.198 2327.12 854.2 2326.46 855.892 2326.46 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/12 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hg
qt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pc
o`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\s82Hgqt0pco`+g\
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s82Hgqt0pboDe[Xs8)9cqXFO\mf3+Ms7u$]q!.nSl2UPBrqGRSpZ2>Ij8Sc2rq>7Kp"fW?h#?s"rq+kB
o@Ep4eGf$erpnJ9n]q.(bl7+Trp\&.n&G=p`;T,@rU.K"mCrPd]`%3.rTq&mla?]VZi00orTUNal)ajI
Wr;+Zr9'pSk+hk:U&=#Dr8aCGjI6#,R/H!0r8Nq<iK3urNr7gnr8<G/hhM$bK_sVWqqZ_ugjK"SHMcH@
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~qYL'bqYL'bqYBs_q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XUXp\4FVp\4FVp\4CTp@e4Rp@e1Pp%A"N
p%A"Np%@tLo^qeJo^qbHoCMSFoCMPDo()ABo()>@naZ/>naZ/=nF5r:nF5r9n*f`6n*f`5mdBN2mdBN1
mHs<.mHs<-m-O**m-O*)lg*m&lg*m%lK[[!l07Hsl07Hrkih6okih6nkND$jk2tggk2tggjlPUcjlPUc
jQ,C_j5]1[j5]1[io8tWio8tWiSibSi8EPOi8EPOhr!>Khr!>KhVR,Gh;-oCh;-oCgt^]?gY:K;gY:K;
~>
<~oCMSFoCMSFoCDJCo'u8?naQ&;nF,i6mdBK0mHs9,m-O'(lK[Wul07Eqkih3mk2tdejQ,@]j5].YiSi_Q
hr!;Ih;-lAgt^Z=g=k65f\"g-f%/C%eC;srdaHOjdF$=fcd'h\c-4DTbKJ)Ob/qcHa2Z-<`Pf^4_ns:,
_8*k$^V7Fq]tD"i]=PSa\[]/Y[^NTN['R*EZE^[=Yck75Y-"e+X/`2!WMlbnVl$;eUnjc\U8"?TTV%gI
SXl:@S"#k8R@0G0Q^3r&Pa%AqP*(lgO,o<]NJrgSMMd7ILkgb?KnY25K7ec,J:N,uI=6KjH[C'bH$OXY
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
887.248 2344.2 mo
884.724 2344.2 882.206 2344.13 879.921 2343.84 cv
875.583 2343.27 870.346 2343.3 866.204 2342.19 cv
861.99 2341.07 861.613 2328.42 857.641 2326.77 cv
857.112 2326.55 856.524 2326.46 855.892 2326.46 cv
854.2 2326.46 852.198 2327.12 850.197 2327.78 cv
848.198 2328.44 846.201 2329.1 844.522 2329.1 cv
843.741 2329.1 843.028 2328.96 842.417 2328.61 cv
839.434 2326.88 840.362 2319.62 839.158 2315.38 cv
854.537 2326.6 873.481 2333.22 893.974 2333.22 cv
922.618 2333.22 948.241 2320.29 965.324 2299.94 cv
965.179 2303.67 966.124 2308.23 963.983 2310.37 cv
960.925 2313.43 960.765 2320.4 957.329 2323.04 cv
956.526 2323.66 955.443 2323.88 954.208 2323.88 cv
952.724 2323.88 951.02 2323.56 949.316 2323.25 cv
947.612 2322.93 945.907 2322.62 944.421 2322.62 cv
943.356 2322.62 942.403 2322.78 941.644 2323.22 cv
937.914 2325.38 935.2 2329.07 931.182 2330.74 cv
927.211 2332.39 925.244 2341.28 921.03 2342.4 cv
920.803 2342.46 920.568 2342.49 920.328 2342.49 cv
918.317 2342.49 915.862 2340.5 913.4 2338.5 cv
910.938 2336.51 908.468 2334.52 906.426 2334.52 cv
906.297 2334.52 906.17 2334.52 906.045 2334.54 cv
901.807 2335.09 897.977 2344.15 893.59 2344.15 cv
891.567 2344.15 889.406 2344.2 887.248 2344.2 cv
823.89 2301.42 mo
821.631 2300.61 819.38 2299.82 817.974 2297.99 cv
815.342 2294.57 812.328 2291.9 810.154 2288.14 cv
807.996 2284.41 802.676 2282.34 801.01 2278.32 cv
799.362 2274.35 796.978 2270.38 795.853 2266.17 cv
794.745 2262.02 792.716 2257.67 792.15 2253.33 cv
791.597 2249.09 798.204 2244.37 798.204 2239.98 cv
798.204 2235.59 786.734 2230.23 787.286 2225.99 cv
787.852 2221.65 791.04 2216.94 792.148 2212.8 cv
793.274 2208.58 795.374 2203.95 797.022 2199.97 cv
798.688 2195.96 809.804 2196.59 811.962 2192.86 cv
813.014 2191.04 814.625 2189.84 816.307 2188.69 cv
806.54 2203.42 800.849 2221.09 800.849 2240.09 cv
800.849 2263.58 809.543 2285.04 823.89 2301.42 cv
970.72 2292.85 mo
980.049 2279.31 985.885 2263.17 986.929 2245.75 cv
988.422 2248.04 990.009 2250.31 989.706 2252.63 cv
989.14 2256.97 985.238 2260.1 984.131 2264.24 cv
983.005 2268.45 992.595 2276.33 990.947 2280.31 cv
989.281 2284.32 979.511 2284.6 977.352 2288.33 cv
976.036 2290.61 973.276 2291.64 970.72 2292.85 cv
987.022 2236.29 mo
986.1 2213.35 976.877 2192.54 962.275 2176.79 cv
962.347 2176.79 962.419 2176.79 962.492 2176.79 cv
963.646 2176.79 964.897 2176.7 966.148 2176.61 cv
967.399 2176.52 968.65 2176.43 969.804 2176.43 cv
971.895 2176.43 973.666 2176.73 974.539 2177.86 cv
977.171 2181.29 972.932 2189.16 975.105 2192.92 cv
977.264 2196.65 985.377 2197.25 987.044 2201.27 cv
988.69 2205.24 994.511 2208.42 995.638 2212.64 cv
996.744 2216.78 997.287 2221.92 997.852 2226.26 cv
998.255 2229.35 990.984 2232.9 987.022 2236.29 cv
821.67 2181.4 mo
820.704 2175.93 815.106 2166.39 817.557 2163.94 cv
819.142 2162.36 822.326 2162.36 825.504 2162.36 cv
828.456 2162.36 831.402 2162.36 833.058 2161.09 cv
836.482 2158.46 841.23 2157.96 844.987 2155.79 cv
848.717 2153.63 849.427 2144.73 853.445 2143.06 cv
854.474 2142.64 855.634 2142.49 856.862 2142.49 cv
858.161 2142.49 859.535 2142.65 860.909 2142.81 cv
862.283 2142.98 863.657 2143.14 864.955 2143.14 cv
865.87 2143.14 866.748 2143.06 867.562 2142.84 cv
871.704 2141.73 875.814 2138.44 880.15 2137.87 cv
880.297 2137.86 880.445 2137.85 880.594 2137.85 cv
884.722 2137.85 889.353 2145.01 893.59 2145.01 cv
897.878 2145.01 903.099 2133.63 907.289 2133.63 cv
907.387 2133.63 907.483 2133.63 907.579 2133.65 cv
911.917 2134.21 914.047 2147.08 918.189 2148.18 cv
918.484 2148.26 918.795 2148.3 919.117 2148.3 cv
921.028 2148.3 923.378 2147.03 925.724 2145.75 cv
928.069 2144.48 930.41 2143.21 932.301 2143.21 cv
932.754 2143.21 933.182 2143.28 933.577 2143.44 cv
937.595 2145.11 940.695 2149.77 944.425 2151.93 cv
947.037 2153.44 946.521 2159.3 947.114 2163.61 cv
932.044 2153.12 913.728 2146.97 893.974 2146.97 cv
864.792 2146.97 838.745 2160.39 821.67 2181.4 cv
level3{
gsave
clp
[184.161 0 0 184.161 893.974 2240.09 ]ct
/13 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\
m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVI
q#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^Us6TO\m.gVIq#B^U
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s6TO\m.gVHp]'OQs697WkOnl:p&F+Fs5NYMiU[$+nc.G7rnQuAg@"smmJb]'rm^95dd$hYl2JukrljO(
b2rWCjSm-Yrkmap_;P=,hu:=Grjpqa\(gkhgASA2rNOoPY1EQPebuJrrMS*BUsT(7ci'K]rLM12REPPq
ao.IFr0#(tO2_$V`;GJ/r.i,dKYRG:^ANJnr-Z-SH+Eir\GUEVr,B%?D6s+TZ284<qdlr-@]]H6X8?/$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.00268097 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[184.161 0 0 184.161 893.974 2240.09 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~lg*m&lg*m&lg!d#lKRQtl0.?okN:pgjlPRajQ,@]io8qUiSi_Qhr!;Ih;-lAgt^Z=g=k65f\"g-f%/C%
eC;srdaHOjd*U+bcHa\Zbfn8Rb0%iJaN)<?`Pod6_o'@._83t'^V7Fq]tM+l]=PSa\@8rU[^ENM['R*E
Z*CO:YHG%1XK8J&Wi;trW2HPjV59u_US=KVTqJ$LSt2FBS!ob4R$X/*QBd\uPEM)lOcYWbNfK*YN/NRM
LkphAL4t;6K7ec-JUi9#IXQWlH[:!`G^"@TF`__HEcH)<Df0H0Ci!m&C2.HrB4kgfA7T1Z@:<PN?=$oB
~>
<~p\4FVp\4FVp\+=Sp@e4Rp@\+Op%7nKo^qeJo^qbHoCMPDo()>@naZ,<nF5o8n*f]4mdBK0mHs9,m-O'(
lg*j$lK[Wul07EqkND!ik2tdejlPRajQ,@]j5].Yio8qUi8EPNhr!>JhVR,Fh;-oBgtUT;g=k96g"G'2
f[na+f%/F&e^`4"eC2mpdaHRkdEp7dcd0q_cHa_[c-4DTbKJ)Ob/qcHaN2HCa2Z-=`Pog8`5KU4_o'@.
_83t(^qd_"^:q=q]tM(k]=Y\e]"5G_\@B&Y\$rfS[C*BKZa7!EZEga?Yct=7Y-+q1Xf\\+X/i;%WiE%t
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
987.098 2240.09 mo
987.098 2291.52 945.405 2333.22 893.974 2333.22 cv
842.542 2333.22 800.849 2291.52 800.849 2240.09 cv
800.849 2188.66 842.542 2146.97 893.974 2146.97 cv
945.405 2146.97 987.098 2188.66 987.098 2240.09 cv
.984314 .360784 .662745 rgb
f
893.974 2320.76 mo
849.42 2320.76 813.303 2284.65 813.303 2240.09 cv
813.303 2195.54 849.42 2159.42 893.974 2159.42 cv
938.528 2159.42 974.646 2195.54 974.646 2240.09 cv
974.646 2284.65 938.528 2320.76 893.974 2320.76 cv
893.974 2172.62 mo
856.71 2172.62 826.501 2202.83 826.501 2240.09 cv
826.501 2277.36 856.71 2307.57 893.974 2307.57 cv
931.238 2307.57 961.447 2277.36 961.447 2240.09 cv
961.447 2202.83 931.238 2172.62 893.974 2172.62 cv
.988235 .443137 .733333 rgb
f
893.974 2307.57 mo
856.71 2307.57 826.501 2277.36 826.501 2240.09 cv
826.501 2202.83 856.71 2172.62 893.974 2172.62 cv
931.238 2172.62 961.447 2202.83 961.447 2240.09 cv
961.447 2277.36 931.238 2307.57 893.974 2307.57 cv
893.974 2183.89 mo
862.935 2183.89 837.774 2209.05 837.774 2240.09 cv
837.774 2271.13 862.935 2296.29 893.974 2296.29 cv
925.013 2296.29 950.174 2271.13 950.174 2240.09 cv
950.174 2209.05 925.013 2183.89 893.974 2183.89 cv
.992157 .513725 .788235 rgb
f
893.974 2296.29 mo
862.935 2296.29 837.774 2271.13 837.774 2240.09 cv
837.774 2209.05 862.935 2183.89 893.974 2183.89 cv
925.013 2183.89 950.174 2209.05 950.174 2240.09 cv
950.174 2271.13 925.013 2296.29 893.974 2296.29 cv
893.974 2197.49 mo
870.445 2197.49 851.372 2216.56 851.372 2240.09 cv
851.372 2263.62 870.445 2282.7 893.974 2282.7 cv
917.502 2282.7 936.577 2263.62 936.577 2240.09 cv
936.577 2216.56 917.502 2197.49 893.974 2197.49 cv
.996078 .576471 .831372 rgb
f
893.974 2282.7 mo
870.445 2282.7 851.372 2263.62 851.372 2240.09 cv
851.372 2216.56 870.445 2197.49 893.974 2197.49 cv
917.502 2197.49 936.577 2216.56 936.577 2240.09 cv
936.577 2263.62 917.502 2282.7 893.974 2282.7 cv
893.974 2207.77 mo
876.123 2207.77 861.652 2222.24 861.652 2240.09 cv
861.652 2257.94 876.123 2272.42 893.974 2272.42 cv
911.825 2272.42 926.297 2257.94 926.297 2240.09 cv
926.297 2222.24 911.825 2207.77 893.974 2207.77 cv
.996078 .631373 .866667 rgb
f
893.974 2272.42 mo
876.123 2272.42 861.652 2257.94 861.652 2240.09 cv
861.652 2222.24 876.123 2207.77 893.974 2207.77 cv
911.825 2207.77 926.297 2222.24 926.297 2240.09 cv
926.297 2257.94 911.825 2272.42 893.974 2272.42 cv
893.974 2220.81 mo
883.325 2220.81 874.691 2229.44 874.691 2240.09 cv
874.691 2250.74 883.325 2259.38 893.974 2259.38 cv
904.624 2259.38 913.256 2250.74 913.256 2240.09 cv
913.256 2229.44 904.624 2220.81 893.974 2220.81 cv
.996078 .678431 .894118 rgb
f
893.974 2259.38 mo
883.325 2259.38 874.691 2250.74 874.691 2240.09 cv
874.691 2229.44 883.325 2220.81 893.974 2220.81 cv
904.624 2220.81 913.256 2229.44 913.256 2240.09 cv
913.256 2250.74 904.624 2259.38 893.974 2259.38 cv
.996078 .721569 .917647 rgb
f
938.638 2304.53 mo
938.638 2312.66 932.048 2319.25 923.92 2319.25 cv
915.791 2319.25 909.201 2312.66 909.201 2304.53 cv
909.201 2296.41 915.791 2289.82 923.92 2289.82 cv
932.048 2289.82 938.638 2296.41 938.638 2304.53 cv
cp
1 .921569 .921569 rgb
f
946.251 2151.33 mo
946.251 2154.99 943.284 2157.96 939.624 2157.96 cv
935.963 2157.96 932.996 2154.99 932.996 2151.33 cv
932.996 2147.67 935.963 2144.7 939.624 2144.7 cv
943.284 2144.7 946.251 2147.67 946.251 2151.33 cv
cp
f
953.457 2434.87 mo
953.457 2438.85 950.231 2442.08 946.251 2442.08 cv
942.271 2442.08 939.045 2438.85 939.045 2434.87 cv
939.045 2430.89 942.271 2427.67 946.251 2427.67 cv
950.231 2427.67 953.457 2430.89 953.457 2434.87 cv
cp
f
854.523 2539.81 mo
854.523 2541.55 853.112 2542.96 851.372 2542.96 cv
849.631 2542.96 848.221 2541.55 848.221 2539.81 cv
848.221 2538.07 849.631 2536.66 851.372 2536.66 cv
853.112 2536.66 854.523 2538.07 854.523 2539.81 cv
cp
f
609.961 2564.07 mo
609.961 2567.24 607.393 2569.8 604.225 2569.8 cv
601.057 2569.8 598.489 2567.24 598.489 2564.07 cv
598.489 2560.9 601.057 2558.33 604.225 2558.33 cv
607.393 2558.33 609.961 2560.9 609.961 2564.07 cv
cp
f
1055.93 2159.91 mo
1055.93 2163.41 1053.09 2166.25 1049.59 2166.25 cv
1046.08 2166.25 1043.24 2163.41 1043.24 2159.91 cv
1043.24 2156.41 1046.08 2153.57 1049.59 2153.57 cv
1053.09 2153.57 1055.93 2156.41 1055.93 2159.91 cv
cp
f
817.625 2475.16 mo
817.625 2479.26 814.297 2482.59 810.191 2482.59 cv
806.085 2482.59 802.757 2479.26 802.757 2475.16 cv
802.757 2471.05 806.085 2467.72 810.191 2467.72 cv
814.297 2467.72 817.625 2471.05 817.625 2475.16 cv
cp
f
624.932 2238.91 mo
624.932 2242.47 622.048 2245.36 618.49 2245.36 cv
614.932 2245.36 612.047 2242.47 612.047 2238.91 cv
612.047 2235.36 614.932 2232.47 618.49 2232.47 cv
622.048 2232.47 624.932 2235.36 624.932 2238.91 cv
cp
f
937.298 1956.07 mo
937.298 1959.76 934.303 1962.75 930.609 1962.75 cv
926.915 1962.75 923.92 1959.76 923.92 1956.07 cv
923.92 1952.37 926.915 1949.38 930.609 1949.38 cv
934.303 1949.38 937.298 1952.37 937.298 1956.07 cv
cp
f
950.529 2709.25 mo
950.529 2715.28 945.646 2720.16 939.623 2720.16 cv
933.6 2720.16 928.718 2715.28 928.718 2709.25 cv
928.718 2703.23 933.6 2698.35 939.623 2698.35 cv
945.646 2698.35 950.529 2703.23 950.529 2709.25 cv
cp
f
1227.69 2027.63 mo
1227.69 2033.54 1222.9 2038.33 1216.99 2038.33 cv
1211.08 2038.33 1206.29 2033.54 1206.29 2027.63 cv
1206.29 2021.72 1211.08 2016.93 1216.99 2016.93 cv
1222.9 2016.93 1227.69 2021.72 1227.69 2027.63 cv
cp
f
630.262 2392.13 mo
630.262 2393.89 628.835 2395.31 627.075 2395.31 cv
625.314 2395.31 623.887 2393.89 623.887 2392.13 cv
623.887 2390.37 625.314 2388.94 627.075 2388.94 cv
628.835 2388.94 630.262 2390.37 630.262 2392.13 cv
cp
f
1192.87 2593.57 mo
1192.87 2599.92 1187.72 2605.07 1181.37 2605.07 cv
1175.01 2605.07 1169.86 2599.92 1169.86 2593.57 cv
1169.86 2587.21 1175.01 2582.06 1181.37 2582.06 cv
1187.72 2582.06 1192.87 2587.21 1192.87 2593.57 cv
cp
f
1121.47 2442.08 mo
1121.47 2447.94 1116.71 2452.7 1110.85 2452.7 cv
1104.99 2452.7 1100.23 2447.94 1100.23 2442.08 cv
1100.23 2436.21 1104.99 2431.46 1110.85 2431.46 cv
1116.71 2431.46 1121.47 2436.21 1121.47 2442.08 cv
cp
f
730.751 2099.35 mo
730.751 2109.22 722.749 2117.22 712.879 2117.22 cv
703.009 2117.22 695.008 2109.22 695.008 2099.35 cv
695.008 2089.48 703.009 2081.48 712.879 2081.48 cv
722.749 2081.48 730.751 2089.48 730.751 2099.35 cv
cp
f
678.742 2698.35 mo
678.742 2705.49 672.955 2711.27 665.817 2711.27 cv
658.679 2711.27 652.892 2705.49 652.892 2698.35 cv
652.892 2691.21 658.679 2685.42 665.817 2685.42 cv
672.955 2685.42 678.742 2691.21 678.742 2698.35 cv
cp
f
602.737 2075.04 mo
616.164 2105.66 602.224 2141.37 571.6 2154.8 cv
540.976 2168.23 505.266 2154.28 491.838 2123.66 cv
478.411 2093.04 492.352 2057.33 522.976 2043.9 cv
553.6 2030.47 589.31 2044.41 602.737 2075.04 cv
cp
.960784 .682353 .811765 rgb
f
571.597 2154.79 mo
540.97 2168.23 505.269 2154.28 491.833 2123.66 cv
491.036 2121.85 490.345 2120.03 489.747 2118.19 cv
504.947 2144.59 537.923 2155.85 566.48 2143.33 cv
595.289 2130.71 609.328 2098.35 599.704 2069.05 cv
600.818 2070.97 601.824 2072.97 602.734 2075.04 cv
616.168 2105.66 602.226 2141.37 571.597 2154.79 cv
cp
1 .4 .686275 rgb
f
600.286 2000.19 mo
616.63 2037.46 599.661 2080.93 562.386 2097.27 cv
525.111 2113.62 481.644 2096.65 465.301 2059.37 cv
448.957 2022.1 465.926 1978.63 503.201 1962.29 cv
540.476 1945.94 583.943 1962.91 600.286 2000.19 cv
cp
.960784 .682353 .811765 rgb
f
1062.55 1820.47 mo
1087.38 1849.31 1084.12 1892.82 1055.27 1917.65 cv
1026.43 1942.48 982.916 1939.22 958.089 1910.37 cv
933.262 1881.53 936.52 1838.02 965.366 1813.19 cv
994.212 1788.36 1037.72 1791.62 1062.55 1820.47 cv
cp
f
1076.01 1886.26 mo
1072.28 1898.05 1065.34 1908.99 1055.27 1917.65 cv
1026.42 1942.48 982.915 1939.22 958.088 1910.38 cv
937.751 1886.75 936.254 1853.27 952.249 1828.3 cv
945.297 1850.3 949.552 1875.29 965.712 1894.06 cv
990.539 1922.91 1034.05 1926.18 1062.9 1901.35 cv
1068.11 1896.87 1072.48 1891.78 1076.01 1886.26 cv
cp
1 .4 .686275 rgb
f
1146.53 1900.4 mo
1146.53 1927.17 1124.83 1948.87 1098.06 1948.87 cv
1071.29 1948.87 1049.59 1927.17 1049.59 1900.4 cv
1049.59 1873.63 1071.29 1851.93 1098.06 1851.93 cv
1124.83 1851.93 1146.53 1873.63 1146.53 1900.4 cv
cp
.960784 .682353 .811765 rgb
f
1145.79 1908.89 mo
1141.77 1931.62 1121.92 1948.87 1098.05 1948.87 cv
1071.29 1948.87 1049.58 1927.17 1049.58 1900.4 cv
1049.58 1892.9 1051.29 1885.79 1054.33 1879.45 cv
1053.85 1882.21 1053.59 1885.04 1053.59 1887.94 cv
1053.59 1914.71 1075.29 1936.41 1102.06 1936.41 cv
1121.33 1936.41 1137.97 1925.17 1145.79 1908.89 cv
cp
1 .4 .686275 rgb
f
1131.9 1844.31 mo
1131.9 1868.22 1112.51 1887.6 1088.61 1887.6 cv
1064.7 1887.6 1045.31 1868.22 1045.31 1844.31 cv
1045.31 1820.4 1064.7 1801.02 1088.61 1801.02 cv
1112.51 1801.02 1131.9 1820.4 1131.9 1844.31 cv
cp
.960784 .682353 .811765 rgb
f
1321.49 2095.5 mo
1308.94 2139.21 1263.32 2164.47 1219.61 2151.91 cv
1175.9 2139.36 1150.64 2093.75 1163.19 2050.03 cv
1175.75 2006.32 1221.36 1981.06 1265.07 1993.62 cv
1308.78 2006.17 1334.04 2051.78 1321.49 2095.5 cv
cp
f
1274.16 2148.7 mo
1257.47 2155.72 1238.35 2157.29 1219.61 2151.91 cv
1175.91 2139.36 1150.63 2093.74 1163.19 2050.04 cv
1172.11 2018.94 1197.78 1997.18 1227.58 1991.74 cv
1205.37 2001.04 1187.42 2019.99 1180.25 2044.95 cv
1167.69 2088.67 1192.95 2134.28 1236.66 2146.83 cv
1249.28 2150.46 1262.06 2150.93 1274.16 2148.7 cv
cp
1 .4 .686275 rgb
f
1186.51 2358.62 mo
1186.51 2394.06 1157.78 2422.78 1122.35 2422.78 cv
1086.91 2422.78 1058.18 2394.06 1058.18 2358.62 cv
1058.18 2323.18 1086.91 2294.46 1122.35 2294.46 cv
1157.78 2294.46 1186.51 2323.18 1186.51 2358.62 cv
cp
.960784 .682353 .811765 rgb
f
1072.29 2360.71 mo
1072.29 2390.47 1092.55 2415.49 1120.02 2422.74 cv
1085.66 2421.52 1058.18 2393.27 1058.18 2358.62 cv
1058.18 2323.19 1086.92 2294.45 1122.35 2294.45 cv
1128.05 2294.45 1133.59 2295.2 1138.85 2296.6 cv
1138.05 2296.57 1137.25 2296.56 1136.46 2296.56 cv
1101.02 2296.56 1072.29 2325.28 1072.29 2360.71 cv
cp
1 .4 .686275 rgb
f
1168.58 2304.53 mo
1168.58 2325.63 1151.48 2342.74 1130.38 2342.74 cv
1109.28 2342.74 1092.18 2325.63 1092.18 2304.53 cv
1092.18 2283.44 1109.28 2266.33 1130.38 2266.33 cv
1151.48 2266.33 1168.58 2283.44 1168.58 2304.53 cv
cp
.960784 .682353 .811765 rgb
f
1167.52 2295.64 mo
1160.62 2285.95 1149.28 2279.65 1136.46 2279.65 cv
1115.36 2279.65 1098.26 2296.75 1098.26 2317.85 cv
1098.26 2320.93 1098.61 2323.91 1099.31 2326.76 cv
1094.82 2320.5 1092.18 2312.83 1092.18 2304.54 cv
1092.18 2283.44 1109.28 2266.34 1130.38 2266.34 cv
1148.41 2266.34 1163.53 2278.83 1167.52 2295.64 cv
cp
1 .4 .686275 rgb
f
767.475 2520.71 mo
767.475 2560.95 734.856 2593.57 694.619 2593.57 cv
654.382 2593.57 621.763 2560.95 621.763 2520.71 cv
621.763 2480.47 654.382 2447.85 694.619 2447.85 cv
734.856 2447.85 767.475 2480.47 767.475 2520.71 cv
cp
.960784 .682353 .811765 rgb
f
767.477 2520.71 mo
767.477 2523.23 767.344 2525.71 767.1 2528.16 cv
763.344 2491.45 732.335 2462.8 694.622 2462.8 cv
656.908 2462.8 625.9 2491.45 622.143 2528.16 cv
621.899 2525.71 621.766 2523.23 621.766 2520.71 cv
621.766 2480.47 654.382 2447.86 694.622 2447.86 cv
734.862 2447.86 767.477 2480.47 767.477 2520.71 cv
cp
1 .4 .686275 rgb
f
1091.63 2536.6 mo
1095.23 2573.95 1067.86 2607.14 1030.5 2610.74 cv
993.149 2614.33 959.957 2586.96 956.365 2549.61 cv
952.773 2512.25 980.142 2479.06 1017.5 2475.47 cv
1054.85 2471.88 1088.04 2499.24 1091.63 2536.6 cv
cp
.960784 .682353 .811765 rgb
f
1091.63 2536.6 mo
1092.01 2540.55 1092.05 2544.44 1091.77 2548.26 cv
1083.21 2516.93 1053.13 2495.37 1019.72 2498.58 cv
986.303 2501.8 960.885 2528.69 958.468 2561.08 cv
957.459 2557.39 956.742 2553.55 956.362 2549.61 cv
952.77 2512.25 980.146 2479.06 1017.5 2475.47 cv
1054.84 2471.88 1088.04 2499.24 1091.63 2536.6 cv
cp
1 .4 .686275 rgb
f
1024.01 2613.17 mo
1015.14 2641.87 984.677 2657.95 955.971 2649.08 cv
927.266 2640.21 911.187 2609.75 920.059 2581.04 cv
928.93 2552.34 959.392 2536.26 988.098 2545.13 cv
1016.8 2554 1032.88 2584.46 1024.01 2613.17 cv
cp
.960784 .682353 .811765 rgb
f
1021.9 2575.36 mo
1015.21 2565.56 1005.27 2557.87 993.057 2554.09 cv
964.354 2545.22 933.888 2561.3 925.019 2590 cv
921.013 2602.96 922.095 2616.28 927.132 2627.81 cv
918.096 2614.59 914.966 2597.53 920.062 2581.04 cv
928.931 2552.34 959.389 2536.26 988.101 2545.13 cv
1003.84 2549.99 1015.79 2561.35 1021.9 2575.36 cv
cp
1 .4 .686275 rgb
f
1013.4 2598.67 mo
1012.17 2622.05 992.204 2639.99 968.831 2638.76 cv
950.648 2637.8 935.747 2625.52 930.609 2609.11 cv
937.744 2620.08 949.845 2627.61 963.906 2628.35 cv
987.29 2629.58 1007.24 2611.64 1008.48 2588.25 cv
1008.75 2583.04 1008.08 2578.01 1006.59 2573.31 cv
1011.34 2580.57 1013.89 2589.35 1013.4 2598.67 cv
cp
1 .921569 .921569 rgb
f
569.896 2334.36 mo
569.896 2355.85 552.475 2373.27 530.985 2373.27 cv
509.496 2373.27 492.075 2355.85 492.075 2334.36 cv
492.075 2312.87 509.496 2295.45 530.985 2295.45 cv
552.475 2295.45 569.896 2312.87 569.896 2334.36 cv
cp
.960784 .682353 .811765 rgb
f
569.896 2334.36 mo
569.896 2355.84 552.474 2373.26 530.981 2373.26 cv
528.747 2373.26 526.555 2373.08 524.415 2372.71 cv
542.777 2369.59 556.754 2353.61 556.754 2334.36 cv
556.754 2315.1 542.777 2299.12 524.415 2296 cv
526.555 2295.63 528.747 2295.44 530.981 2295.44 cv
552.474 2295.44 569.896 2312.87 569.896 2334.36 cv
cp
1 .4 .686275 rgb
f
676.376 1998.14 mo
693.848 2037.99 675.708 2084.46 635.86 2101.93 cv
596.012 2119.4 549.545 2101.26 532.073 2061.41 cv
514.602 2021.57 532.741 1975.1 572.59 1957.63 cv
612.438 1940.16 658.905 1958.3 676.376 1998.14 cv
cp
.960784 .682353 .811765 rgb
f
635.856 2101.93 mo
604.155 2115.83 568.273 2107.2 546.133 2083.03 cv
567.546 2096.64 595.128 2099.68 620.108 2088.72 cv
659.96 2071.26 678.099 2024.79 660.62 1984.94 cv
657.044 1976.79 652.251 1969.54 646.561 1963.33 cv
659.309 1971.44 669.854 1983.27 676.382 1998.14 cv
693.848 2038 675.709 2084.46 635.856 2101.93 cv
cp
1 .4 .686275 rgb
f
1166.97 2395.02 mo
1152.72 2411.69 1130.79 2417.93 1110.85 2413 cv
1127.05 2413.33 1143.25 2406.67 1154.6 2393.4 cv
1174.72 2369.87 1171.96 2334.48 1148.43 2314.36 cv
1141.58 2308.5 1133.72 2304.59 1125.52 2302.56 cv
1138.04 2302.8 1150.54 2307.21 1160.8 2315.99 cv
1184.33 2336.11 1187.09 2371.5 1166.97 2395.02 cv
cp
1 .921569 .921569 rgb
f
503.121 2324.96 mo
506.956 2314.79 516.124 2308.19 526.246 2307.13 cv
518.643 2309.7 512.214 2315.54 509.16 2323.64 cv
503.748 2337.99 510.998 2354.02 525.349 2359.43 cv
529.533 2361.01 533.852 2361.51 538.018 2361.07 cv
532.14 2363.07 525.572 2363.12 519.31 2360.75 cv
504.958 2355.34 497.708 2339.31 503.121 2324.96 cv
cp
f
589.833 2009.34 mo
582.547 1998.7 571.785 1990.29 558.536 1986.05 cv
526.9 1975.94 493.058 1993.37 482.946 2025.01 cv
479.085 2037.1 479.239 2049.5 482.671 2060.79 cv
472.556 2046 469.135 2026.87 475.012 2008.48 cv
485.124 1976.85 518.966 1959.41 550.602 1969.53 cv
570.15 1975.78 584.28 1991.09 589.833 2009.34 cv
cp
f
808.322 2543.59 mo
808.322 2571.49 785.706 2594.1 757.808 2594.1 cv
729.91 2594.1 707.294 2571.49 707.294 2543.59 cv
707.294 2515.69 729.91 2493.07 757.808 2493.07 cv
785.706 2493.07 808.322 2515.69 808.322 2543.59 cv
cp
.960784 .682353 .811765 rgb
f
806.13 2558.33 mo
806.153 2557.77 806.16 2557.2 806.16 2556.63 cv
806.16 2528.74 783.541 2506.12 755.643 2506.12 cv
732.877 2506.12 713.632 2521.18 707.325 2541.87 cv
708.229 2514.77 730.481 2493.08 757.805 2493.08 cv
785.709 2493.08 808.321 2515.69 808.321 2543.59 cv
808.321 2548.72 807.557 2553.66 806.13 2558.33 cv
cp
1 .4 .686275 rgb
f
651.396 2494.44 mo
648.596 2505.95 649.46 2518.46 654.697 2530.1 cv
667.204 2557.92 699.878 2570.33 727.69 2557.83 cv
738.315 2553.04 746.69 2545.33 752.292 2536.06 cv
748.399 2552.04 737.434 2566.12 721.27 2573.39 cv
693.458 2585.89 660.784 2573.48 648.277 2545.67 cv
640.551 2528.48 642.338 2509.43 651.396 2494.44 cv
cp
1 .921569 .921569 rgb
f
1351.18 2154.39 mo
1340.93 2190.08 1303.68 2210.7 1267.99 2200.45 cv
1232.3 2190.2 1211.68 2152.96 1221.93 2117.27 cv
1232.18 2081.58 1269.42 2060.95 1305.11 2071.2 cv
1340.8 2081.45 1361.43 2118.7 1351.18 2154.39 cv
cp
.960784 .682353 .811765 rgb
f
1316.93 2195.8 mo
1302.32 2203.21 1284.98 2205.33 1267.99 2200.45 cv
1232.31 2190.2 1211.68 2152.96 1221.93 2117.26 cv
1228.51 2094.35 1246.22 2077.65 1267.5 2071.34 cv
1251.4 2079.49 1238.6 2094.05 1233.23 2112.77 cv
1222.98 2148.46 1243.6 2185.7 1279.3 2195.95 cv
1292.08 2199.62 1305.06 2199.33 1316.93 2195.8 cv
cp
1 .4 .686275 rgb
f
1332.6 2172.4 mo
1318.92 2188.39 1297.88 2194.38 1278.75 2189.65 cv
1294.29 2189.97 1309.84 2183.57 1320.73 2170.84 cv
1340.03 2148.27 1337.38 2114.31 1314.81 2095 cv
1308.23 2089.37 1300.7 2085.62 1292.83 2083.67 cv
1304.84 2083.91 1316.84 2088.14 1326.68 2096.56 cv
1349.25 2115.87 1351.9 2149.83 1332.6 2172.4 cv
cp
1 .921569 .921569 rgb
f
1070.92 1862.13 mo
1070.92 1864.46 1070.78 1866.76 1070.5 1869.01 cv
1067.11 1841.03 1043.27 1819.34 1014.36 1819.34 cv
985.462 1819.34 961.621 1841.03 958.237 1869.01 cv
957.959 1866.76 957.82 1864.46 957.82 1862.13 cv
957.82 1830.9 983.134 1805.59 1014.36 1805.59 cv
1045.6 1805.59 1070.92 1830.9 1070.92 1862.13 cv
cp
f
1108.19 1867.38 mo
1107.1 1868.04 1105.99 1868.63 1104.85 1869.14 cv
1117.02 1859.6 1120.43 1842.25 1112.21 1828.68 cv
1104 1815.11 1087.05 1810.08 1072.95 1816.44 cv
1073.93 1815.67 1074.97 1814.95 1076.06 1814.29 cv
1090.72 1805.42 1109.8 1810.11 1118.67 1824.77 cv
1127.54 1839.43 1122.85 1858.51 1108.19 1867.38 cv
cp
f
781.295 1860.82 mo
786.504 1881.71 773.795 1902.86 752.909 1908.07 cv
732.023 1913.28 710.87 1900.57 705.662 1879.68 cv
700.454 1858.8 713.163 1837.64 734.048 1832.44 cv
754.934 1827.23 776.087 1839.94 781.295 1860.82 cv
cp
.960784 .682353 .811765 rgb
f
752.909 1908.07 mo
733.797 1912.83 714.475 1902.6 707.336 1884.84 cv
716.11 1898.52 732.925 1905.74 749.569 1901.59 cv
770.456 1896.38 783.161 1875.23 777.953 1854.35 cv
777.509 1852.57 776.949 1850.85 776.279 1849.19 cv
778.521 1852.68 780.234 1856.58 781.292 1860.82 cv
786.5 1881.71 773.796 1902.86 752.909 1908.07 cv
cp
1 .4 .686275 rgb
f
874.353 1872.41 mo
882.744 1906.06 862.268 1940.14 828.619 1948.53 cv
794.97 1956.92 760.89 1936.44 752.499 1902.79 cv
744.108 1869.14 764.584 1835.06 798.233 1826.67 cv
831.882 1818.28 865.962 1838.76 874.353 1872.41 cv
cp
.960784 .682353 .811765 rgb
f
862.76 1887.6 mo
862.514 1885.53 862.14 1883.45 861.621 1881.38 cv
854.978 1854.76 828.018 1838.57 801.404 1845.21 cv
780.798 1850.34 766.417 1867.68 764.083 1887.62 cv
761.172 1863.12 776.864 1839.72 801.404 1833.61 cv
828.018 1826.97 854.978 1843.17 861.621 1869.79 cv
863.12 1875.79 863.451 1881.81 862.76 1887.6 cv
cp
1 .921569 .921569 rgb
f
828.613 1948.52 mo
806.39 1954.06 783.985 1947.03 768.921 1931.91 cv
782.929 1940.83 800.434 1944.2 817.83 1939.87 cv
851.474 1931.49 871.948 1897.41 863.551 1863.74 cv
860.709 1852.32 854.898 1842.41 847.12 1834.64 cv
860.235 1842.96 870.29 1856.15 874.352 1872.42 cv
882.75 1906.06 862.275 1940.14 828.613 1948.52 cv
cp
1 .4 .686275 rgb
f
2757.89 2116.27 mo
2727.6 2120.82 2697.31 2125.36 2667.02 2129.9 cv
2620.16 2136.93 2573.29 2143.95 2526.43 2150.99 cv
2499.37 2155.06 2473.38 2159.75 2450.9 2176.35 cv
2446.28 2179.76 2442.76 2186.1 2448.49 2190.86 cv
2450.38 2192.44 2452.8 2193.25 2455.17 2193.93 cv
2469.62 2198.07 2484.29 2197.63 2498.59 2193.3 cv
2503.99 2191.66 2509.42 2190.08 2514.83 2188.47 cv
2532.14 2183.33 2549.45 2178.19 2566.77 2173.05 cv
2609.73 2160.28 2652.7 2147.52 2695.67 2134.76 cv
2716.41 2128.6 2737.15 2122.44 2757.89 2116.27 cv
cp
.647059 .517647 .290196 rgb
f
2642.05 2427.32 mo
2611.09 2405.76 2580.13 2384.2 2549.17 2362.64 cv
2539.08 2355.61 2529 2348.59 2518.91 2341.55 cv
2512.52 2337.1 2506.54 2331.83 2499.46 2328.45 cv
2485.91 2322 2471.06 2322.12 2456.47 2323.49 cv
2450.11 2324.08 2432.63 2325.4 2434.37 2335.42 cv
2436.93 2350.17 2454.01 2359.15 2463.91 2368.35 cv
2470.07 2374.08 2476.96 2379.54 2484.98 2382.37 cv
2489.19 2383.86 2493.65 2384.86 2497.94 2386.08 cv
2513.68 2390.59 2529.42 2395.09 2545.17 2399.6 cv
2575.94 2408.4 2606.71 2417.21 2637.48 2426.02 cv
2638.75 2426.38 2640.96 2426.56 2642.05 2427.32 cv
cp
f
2398.75 2474.3 mo
2398.86 2474.46 2398.97 2474.63 2399.07 2474.8 cv
2409.79 2491.38 2412.49 2511.15 2418.94 2529.49 cv
2426.17 2550.04 2433.39 2570.6 2440.62 2591.15 cv
2454.3 2630.06 2467.97 2668.97 2481.65 2707.87 cv
2484.42 2715.74 2486.27 2725.91 2490.53 2733.14 cv
2358.57 2509.35 li
2352 2496.44 2347.88 2482.32 2346.23 2467.94 cv
2345.22 2459.15 2342.29 2446.13 2347.1 2438.04 cv
2351.02 2431.43 2358.8 2435.68 2363.34 2439.12 cv
2376.47 2449.07 2389.55 2460.27 2398.75 2474.3 cv
cp
f
1949.27 2675.71 mo
2115.43 2457.78 li
2121.81 2447.97 2127.02 2437.05 2129.49 2425.56 cv
2130.83 2419.29 2133.64 2407.12 2127.51 2402.45 cv
2122.99 2399.01 2115.78 2402.98 2111.3 2404.81 cv
2099.39 2409.7 2087.51 2417.29 2081.25 2428.91 cv
1949.27 2675.71 li
cp
f
1778.42 2376.33 mo
1815 2367.74 1851.59 2359.16 1888.17 2350.58 cv
1911.27 2345.16 1934.38 2339.74 1957.48 2334.32 cv
1982.65 2328.41 2010.73 2324.79 2026.28 2301.51 cv
2031.21 2294.13 2030.6 2287.68 2020.49 2285.56 cv
2000.39 2281.33 1976.24 2282.2 1957.29 2290.82 cv
1778.42 2376.33 li
cp
f
1906.4 1811.48 mo
2022.97 1992.24 li
2038.74 2012.51 2057.71 2023.76 2078.73 2029.22 cv
2084.79 2033.23 2092.31 2026.76 2089.24 2020.17 cv
2083.78 1994.01 2072.78 1969.58 2055.25 1947.22 cv
1906.4 1811.48 li
cp
f
2347.54 1964.96 mo
2352.05 1955.36 2358.5 1946.52 2364.23 1937.62 cv
2372.68 1924.48 2381.12 1911.34 2389.57 1898.2 cv
2408.72 1868.41 2427.87 1838.62 2447.01 1808.84 cv
2456.21 1794.53 2465.41 1780.22 2474.61 1765.91 cv
2385.31 1971.88 li
2381.36 1980.97 2371.68 1996.55 2364.32 2003.38 cv
2360.48 2006.94 2353.82 2012.26 2348.33 2012.29 cv
2338.49 2012.36 2339.31 1996.48 2339.85 1990.14 cv
2340.44 1983.14 2344.64 1971.12 2347.54 1964.96 cv
cp
f
2346.08 1976.19 mo
2435.85 1838.12 li
2373.56 1985.04 li
2373.18 1985.94 2372.66 1986.76 2372.01 1987.48 cv
2360.04 2000.86 li
2354.64 2006.89 2344.66 2003.07 2344.66 1994.98 cv
2344.66 1981 li
2344.66 1979.29 2345.16 1977.62 2346.08 1976.19 cv
cp
.631373 .407843 0 rgb
f
2478.67 2166 mo
2609.85 2150.96 li
2478.16 2191.8 li
2476.85 2192.2 2475.49 2192.38 2474.12 2192.33 cv
2461.09 2191.84 2457.95 2173.92 2470.03 2169.02 cv
2475.5 2166.81 li
2476.52 2166.39 2477.58 2166.12 2478.67 2166 cv
cp
f
2480.32 2331.03 mo
2487.73 2333.56 2493.63 2338.3 2500.06 2342.59 cv
2512.64 2350.98 2525.22 2359.37 2537.8 2367.76 cv
2557.71 2381.03 2577.62 2394.31 2597.53 2407.59 cv
2597.73 2407.73 2597.94 2407.86 2598.14 2408 cv
2573.12 2400.25 2548.09 2392.49 2523.06 2384.74 cv
2515.28 2382.33 2507.5 2379.92 2499.72 2377.51 cv
2489.25 2374.27 2477.71 2372.09 2468.64 2365.24 cv
2460.58 2359.16 2449.92 2350.81 2445.58 2341.52 cv
2442.55 2335.03 2447.45 2328.67 2453.89 2327.41 cv
2461.71 2325.88 2472.86 2328.49 2480.3 2331.02 cv
2480.32 2331.03 li
cp
f
2382.97 2462.65 mo
2387.48 2470.1 2389.25 2478.71 2392.13 2486.86 cv
2394.45 2493.41 2396.78 2499.97 2399.1 2506.52 cv
2404.71 2522.37 2410.32 2538.21 2415.93 2554.06 cv
2425.8 2581.94 2435.68 2609.83 2445.55 2637.72 cv
2446.88 2641.48 2448.21 2645.24 2449.55 2649 cv
2359.05 2493.26 li
2349.54 2452.89 li
2348.6 2448.87 2350.44 2444.48 2353.96 2442.29 cv
2365.19 2435.29 2377.41 2454.04 2382.37 2461.69 cv
2382.57 2462.01 2382.77 2462.33 2382.97 2462.65 cv
cp
f
2118.49 2441.59 mo
2117.81 2442.81 2117.09 2444.02 2116.34 2445.2 cv
2110.96 2453.73 2103.63 2461.1 2097.19 2468.84 cv
2085.3 2483.16 2073.41 2497.48 2061.51 2511.8 cv
2048.76 2527.15 2036.01 2542.5 2023.26 2557.85 cv
2032.89 2539.02 2042.51 2520.19 2052.13 2501.37 cv
2065.03 2476.14 2078.37 2451.09 2090.84 2425.65 cv
2094.91 2417.35 2103.32 2411.81 2110.83 2406.63 cv
2119.84 2400.41 2131.55 2409.33 2127.96 2419.67 cv
2125.35 2427.19 2122.4 2434.65 2118.49 2441.59 cv
cp
f
2003.22 2314.52 mo
1995.7 2317.58 1987.59 2319.35 1979.7 2320.84 cv
1966.33 2323.38 1953.09 2326.59 1939.82 2329.63 cv
1917.83 2334.67 1895.84 2339.7 1873.85 2344.74 cv
1868.81 2345.89 1863.77 2347.05 1858.73 2348.2 cv
1893.33 2332.51 1927.99 2316.95 1962.53 2301.12 cv
1977.29 2294.36 1989.87 2289.02 2006.11 2287.38 cv
2018.23 2286.15 2024.02 2301.88 2013.99 2308.8 cv
2010.62 2311.12 2006.99 2312.99 2003.22 2314.52 cv
cp
f
2041.69 2002.16 mo
2040.68 2001.05 2039.75 1999.85 2038.89 1998.5 cv
2037.15 1995.77 2035.33 1993.1 2033.55 1990.4 cv
2027.92 1981.85 2022.29 1973.3 2016.65 1964.75 cv
2002.73 1943.62 1988.81 1922.49 1974.89 1901.36 cv
1968.13 1891.1 1961.37 1880.85 1954.62 1870.59 cv
2072.42 1987.5 li
2073.19 1988.27 2073.83 1989.16 2074.31 1990.14 cv
2083.89 2009.54 li
2085.87 2013.54 2084.55 2018.45 2081.34 2021.41 cv
2077.26 2025.16 2072.71 2024.09 2068.48 2021.32 cv
2059.68 2015.57 2048.81 2010 2041.69 2002.16 cv
cp
f
2319.66 2230.38 mo
2319.66 2234.27 2324.73 2237.84 2324.24 2241.6 cv
2323.74 2245.45 2320.28 2248.22 2319.3 2251.89 cv
2318.3 2255.62 2326.8 2262.61 2325.34 2266.13 cv
2323.86 2269.69 2315.2 2269.94 2313.29 2273.25 cv
2311.36 2276.58 2305.95 2276.89 2303.61 2279.93 cv
2301.27 2282.97 2304.15 2290.07 2301.44 2292.78 cv
2298.73 2295.49 2298.58 2301.67 2295.54 2304.01 cv
2293.97 2305.21 2291.21 2304.7 2288.44 2304.19 cv
2285.84 2303.72 2283.25 2303.24 2281.64 2304.17 cv
2278.33 2306.08 2275.92 2309.36 2272.36 2310.83 cv
2268.84 2312.29 2267.1 2320.17 2263.36 2321.17 cv
2261.48 2321.67 2259.04 2319.7 2256.6 2317.72 cv
2254.28 2315.84 2251.95 2313.96 2250.08 2314.2 cv
2246.32 2314.69 2242.93 2322.72 2239.04 2322.72 cv
2235.15 2322.72 2230.68 2322.93 2226.92 2322.44 cv
2223.08 2321.94 2218.44 2321.97 2214.76 2320.99 cv
2211.03 2319.99 2210.69 2308.77 2207.17 2307.31 cv
2205.45 2306.6 2203.01 2307.4 2200.58 2308.21 cv
2197.98 2309.07 2195.39 2309.93 2193.68 2308.94 cv
2190.35 2307.02 2192.52 2297.3 2189.48 2294.97 cv
2186.44 2292.63 2184.76 2290.08 2182.05 2287.37 cv
2179.34 2284.66 2174.35 2284.85 2172.01 2281.81 cv
2169.68 2278.77 2167.01 2276.41 2165.08 2273.08 cv
2163.17 2269.77 2158.45 2267.93 2156.98 2264.37 cv
2155.52 2260.85 2153.4 2257.33 2152.4 2253.59 cv
2151.42 2249.92 2149.62 2246.06 2149.12 2242.22 cv
2148.63 2238.46 2154.49 2234.27 2154.49 2230.38 cv
2154.49 2226.49 2144.32 2221.74 2144.81 2217.98 cv
2145.31 2214.14 2148.14 2209.96 2149.12 2206.29 cv
2150.12 2202.56 2151.98 2198.44 2153.44 2194.92 cv
2154.92 2191.36 2164.77 2191.92 2166.68 2188.61 cv
2168.61 2185.28 2172.66 2184.28 2175 2181.25 cv
2177.34 2178.2 2168.93 2165.7 2171.64 2162.98 cv
2173.05 2161.58 2175.87 2161.58 2178.69 2161.58 cv
2181.3 2161.58 2183.92 2161.58 2185.38 2160.45 cv
2188.42 2158.12 2192.63 2157.68 2195.96 2155.76 cv
2199.27 2153.84 2199.89 2145.95 2203.46 2144.48 cv
2205.33 2143.7 2207.7 2143.98 2210.07 2144.26 cv
2212.15 2144.5 2214.22 2144.74 2215.97 2144.28 cv
2219.64 2143.3 2223.28 2140.38 2227.13 2139.88 cv
2230.88 2139.39 2235.15 2146.2 2239.04 2146.2 cv
2242.93 2146.2 2247.68 2135.64 2251.44 2136.13 cv
2255.28 2136.63 2257.17 2148.03 2260.84 2149.02 cv
2262.66 2149.5 2265.09 2148.18 2267.53 2146.86 cv
2270.1 2145.46 2272.67 2144.06 2274.48 2144.81 cv
2278.05 2146.29 2280.79 2150.42 2284.1 2152.34 cv
2287.43 2154.26 2285.02 2164.16 2288.06 2166.49 cv
2291.1 2168.83 2293.39 2170.61 2296.1 2173.32 cv
2297.42 2174.64 2300.39 2174.43 2303.36 2174.21 cv
2306.47 2173.99 2309.59 2173.76 2310.79 2175.32 cv
2313.13 2178.36 2309.37 2185.34 2311.3 2188.67 cv
2313.21 2191.98 2320.4 2192.51 2321.88 2196.07 cv
2323.34 2199.59 2328.5 2202.41 2329.5 2206.15 cv
2330.48 2209.82 2330.96 2214.38 2331.46 2218.22 cv
2331.95 2221.98 2319.66 2226.49 2319.66 2230.38 cv
.984314 .858824 .466667 rgb
f
2311.61 2230.29 mo
2311.61 2233.79 2316.17 2237.01 2315.73 2240.4 cv
2315.28 2243.87 2312.16 2246.36 2311.28 2249.67 cv
2310.38 2253.04 2318.04 2259.33 2316.72 2262.51 cv
2315.39 2265.72 2307.59 2265.94 2305.86 2268.92 cv
2304.13 2271.92 2299.25 2272.2 2297.15 2274.94 cv
2295.04 2277.68 2297.63 2284.08 2295.18 2286.52 cv
2292.74 2288.97 2292.61 2294.54 2289.87 2296.65 cv
2288.46 2297.73 2285.96 2297.27 2283.47 2296.81 cv
2281.13 2296.38 2278.79 2295.95 2277.34 2296.79 cv
2274.36 2298.51 2272.19 2301.46 2268.98 2302.79 cv
2265.81 2304.11 2264.24 2311.21 2260.87 2312.11 cv
2259.17 2312.56 2256.98 2310.78 2254.77 2309 cv
2252.68 2307.3 2250.59 2305.61 2248.9 2305.83 cv
2245.51 2306.27 2242.46 2313.51 2238.95 2313.51 cv
2235.44 2313.51 2231.42 2313.7 2228.03 2313.26 cv
2224.57 2312.81 2220.38 2312.83 2217.07 2311.94 cv
2213.71 2311.04 2213.4 2300.94 2210.23 2299.62 cv
2208.68 2298.98 2206.48 2299.7 2204.29 2300.43 cv
2201.94 2301.21 2199.61 2301.98 2198.07 2301.09 cv
2195.07 2299.35 2197.02 2290.6 2194.29 2288.5 cv
2191.54 2286.39 2190.03 2284.09 2187.59 2281.65 cv
2185.15 2279.2 2180.65 2279.38 2178.54 2276.63 cv
2176.44 2273.9 2174.03 2271.77 2172.3 2268.77 cv
2170.57 2265.79 2166.32 2264.13 2164.99 2260.92 cv
2163.68 2257.75 2161.77 2254.57 2160.87 2251.21 cv
2159.99 2247.9 2158.37 2244.42 2157.91 2240.95 cv
2157.47 2237.57 2162.75 2233.79 2162.75 2230.29 cv
2162.75 2226.78 2153.59 2222.5 2154.03 2219.12 cv
2154.48 2215.65 2157.03 2211.89 2157.91 2208.58 cv
2158.81 2205.21 2160.49 2201.51 2161.81 2198.33 cv
2163.14 2195.12 2172.02 2195.63 2173.74 2192.65 cv
2175.48 2189.64 2179.13 2188.74 2181.23 2186.01 cv
2183.34 2183.26 2175.77 2171.99 2178.21 2169.55 cv
2179.48 2168.28 2182.02 2168.28 2184.56 2168.28 cv
2186.92 2168.28 2189.27 2168.28 2190.59 2167.27 cv
2193.33 2165.17 2197.12 2164.77 2200.12 2163.03 cv
2203.1 2161.31 2203.67 2154.2 2206.88 2152.87 cv
2208.57 2152.17 2210.71 2152.42 2212.84 2152.67 cv
2214.71 2152.89 2216.58 2153.11 2218.16 2152.69 cv
2221.47 2151.81 2224.75 2149.18 2228.21 2148.72 cv
2231.6 2148.28 2235.44 2154.42 2238.95 2154.42 cv
2242.46 2154.42 2246.74 2144.9 2250.13 2145.34 cv
2253.59 2145.8 2255.29 2156.07 2258.6 2156.96 cv
2260.23 2157.39 2262.43 2156.21 2264.62 2155.02 cv
2266.94 2153.76 2269.26 2152.5 2270.9 2153.17 cv
2274.1 2154.5 2276.58 2158.23 2279.56 2159.95 cv
2282.56 2161.69 2280.39 2170.6 2283.13 2172.71 cv
2285.87 2174.81 2287.93 2176.42 2290.37 2178.86 cv
2291.56 2180.05 2294.24 2179.86 2296.91 2179.67 cv
2299.72 2179.46 2302.53 2179.26 2303.62 2180.67 cv
2305.72 2183.4 2302.33 2189.7 2304.07 2192.7 cv
2305.79 2195.68 2312.28 2196.16 2313.61 2199.36 cv
2314.92 2202.54 2319.57 2205.08 2320.47 2208.45 cv
2321.36 2211.76 2321.79 2215.86 2322.24 2219.33 cv
2322.68 2222.71 2311.61 2226.78 2311.61 2230.29 cv
.984314 .360784 .662745 rgb
f
2239.26 2349.21 mo
2173.63 2349.21 2120.43 2296.01 2120.43 2230.38 cv
2120.43 2164.75 2173.63 2111.55 2239.26 2111.55 cv
2304.88 2111.55 2358.09 2164.75 2358.09 2230.38 cv
2358.09 2296.01 2304.88 2349.21 2239.26 2349.21 cv
2205.62 2307.04 mo
2206.18 2307.04 2206.71 2307.12 2207.17 2307.31 cv
2210.69 2308.77 2211.03 2319.99 2214.76 2320.99 cv
2218.44 2321.97 2223.08 2321.94 2226.92 2322.44 cv
2228.95 2322.71 2231.18 2322.77 2233.42 2322.77 cv
2235.33 2322.77 2237.25 2322.72 2239.04 2322.72 cv
2242.93 2322.72 2246.32 2314.69 2250.08 2314.2 cv
2250.19 2314.19 2250.3 2314.18 2250.42 2314.18 cv
2252.23 2314.18 2254.42 2315.95 2256.6 2317.72 cv
2258.78 2319.48 2260.96 2321.25 2262.74 2321.25 cv
2262.95 2321.25 2263.16 2321.23 2263.36 2321.17 cv
2267.1 2320.17 2268.84 2312.29 2272.36 2310.83 cv
2275.92 2309.36 2278.33 2306.08 2281.64 2304.17 cv
2282.31 2303.78 2283.15 2303.64 2284.1 2303.64 cv
2285.41 2303.64 2286.93 2303.92 2288.44 2304.19 cv
2289.95 2304.47 2291.46 2304.75 2292.77 2304.75 cv
2293.87 2304.75 2294.83 2304.56 2295.54 2304.01 cv
2298.58 2301.67 2298.73 2295.49 2301.44 2292.78 cv
2304.15 2290.07 2301.27 2282.97 2303.61 2279.93 cv
2305.95 2276.89 2311.36 2276.58 2313.29 2273.25 cv
2315.2 2269.94 2323.86 2269.69 2325.34 2266.13 cv
2326.8 2262.61 2318.3 2255.62 2319.3 2251.89 cv
2320.28 2248.22 2323.74 2245.45 2324.24 2241.6 cv
2324.73 2237.84 2319.66 2234.27 2319.66 2230.38 cv
2319.66 2226.49 2331.95 2221.98 2331.46 2218.22 cv
2330.96 2214.38 2330.48 2209.82 2329.5 2206.15 cv
2328.5 2202.41 2323.34 2199.59 2321.88 2196.07 cv
2320.4 2192.51 2313.21 2191.98 2311.3 2188.67 cv
2309.37 2185.34 2313.13 2178.36 2310.79 2175.32 cv
2310.02 2174.32 2308.45 2174.05 2306.6 2174.05 cv
2305.57 2174.05 2304.46 2174.13 2303.36 2174.21 cv
2302.25 2174.29 2301.14 2174.37 2300.11 2174.37 cv
2298.4 2174.37 2296.93 2174.15 2296.1 2173.32 cv
2293.39 2170.61 2291.1 2168.83 2288.06 2166.49 cv
2285.02 2164.16 2287.43 2154.26 2284.1 2152.34 cv
2280.79 2150.42 2278.05 2146.29 2274.48 2144.81 cv
2274.13 2144.67 2273.76 2144.6 2273.35 2144.6 cv
2271.68 2144.6 2269.6 2145.73 2267.53 2146.86 cv
2265.45 2147.99 2263.36 2149.12 2261.67 2149.12 cv
2261.38 2149.12 2261.11 2149.09 2260.84 2149.02 cv
2257.17 2148.03 2255.28 2136.63 2251.44 2136.13 cv
2251.35 2136.12 2251.27 2136.11 2251.18 2136.11 cv
2247.47 2136.11 2242.84 2146.2 2239.04 2146.2 cv
2235.28 2146.2 2231.18 2139.85 2227.52 2139.85 cv
2227.39 2139.85 2227.26 2139.86 2227.13 2139.88 cv
2223.28 2140.38 2219.64 2143.3 2215.97 2144.28 cv
2215.25 2144.47 2214.47 2144.54 2213.66 2144.54 cv
2212.51 2144.54 2211.29 2144.4 2210.07 2144.26 cv
2208.85 2144.11 2207.64 2143.97 2206.48 2143.97 cv
2205.4 2143.97 2204.37 2144.1 2203.46 2144.48 cv
2199.89 2145.95 2199.27 2153.84 2195.96 2155.76 cv
2192.63 2157.68 2188.42 2158.12 2185.38 2160.45 cv
2183.96 2161.55 2181.47 2161.58 2178.93 2161.58 cv
2178.85 2161.58 2178.77 2161.58 2178.69 2161.58 cv
2175.87 2161.58 2173.05 2161.58 2171.64 2162.98 cv
2168.93 2165.7 2177.34 2178.2 2175 2181.25 cv
2172.66 2184.28 2168.61 2185.28 2166.68 2188.61 cv
2164.77 2191.92 2154.92 2191.36 2153.44 2194.92 cv
2151.98 2198.44 2150.12 2202.56 2149.12 2206.29 cv
2148.14 2209.96 2145.31 2214.14 2144.81 2217.98 cv
2144.32 2221.74 2154.49 2226.49 2154.49 2230.38 cv
2154.49 2234.27 2148.63 2238.46 2149.12 2242.22 cv
2149.62 2246.06 2151.42 2249.92 2152.4 2253.59 cv
2153.4 2257.33 2155.52 2260.85 2156.98 2264.37 cv
2158.45 2267.93 2163.17 2269.77 2165.08 2273.08 cv
2167.01 2276.41 2169.68 2278.77 2172.01 2281.81 cv
2174.35 2284.85 2179.34 2284.66 2182.05 2287.37 cv
2184.76 2290.08 2186.44 2292.63 2189.48 2294.97 cv
2192.52 2297.3 2190.35 2307.02 2193.68 2308.94 cv
2194.22 2309.26 2194.85 2309.38 2195.55 2309.38 cv
2197.04 2309.38 2198.81 2308.8 2200.58 2308.21 cv
2202.35 2307.62 2204.12 2307.04 2205.62 2307.04 cv
level3{
gsave
clp
[118.828 0 0 118.828 2239.26 2230.38 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[118.828 0 0 118.828 2239.26 2230.38 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
2233.42 2322.77 mo
2231.18 2322.77 2228.95 2322.71 2226.92 2322.44 cv
2223.08 2321.94 2218.44 2321.97 2214.76 2320.99 cv
2211.03 2319.99 2210.69 2308.77 2207.17 2307.31 cv
2206.71 2307.12 2206.18 2307.04 2205.62 2307.04 cv
2204.12 2307.04 2202.35 2307.62 2200.58 2308.21 cv
2198.81 2308.8 2197.04 2309.38 2195.55 2309.38 cv
2194.85 2309.38 2194.22 2309.26 2193.68 2308.94 cv
2190.35 2307.02 2192.52 2297.3 2189.48 2294.97 cv
2186.44 2292.63 2184.76 2290.08 2182.05 2287.37 cv
2179.34 2284.66 2174.35 2284.85 2172.01 2281.81 cv
2169.68 2278.77 2167.01 2276.41 2165.08 2273.08 cv
2163.17 2269.77 2158.45 2267.93 2156.98 2264.37 cv
2155.52 2260.85 2153.4 2257.33 2152.4 2253.59 cv
2151.42 2249.92 2149.62 2246.06 2149.12 2242.22 cv
2148.63 2238.46 2154.49 2234.27 2154.49 2230.38 cv
2154.49 2226.49 2144.32 2221.74 2144.81 2217.98 cv
2145.31 2214.14 2148.14 2209.96 2149.12 2206.29 cv
2150.12 2202.56 2151.98 2198.44 2153.44 2194.92 cv
2154.92 2191.36 2164.77 2191.92 2166.68 2188.61 cv
2168.61 2185.28 2172.66 2184.28 2175 2181.25 cv
2177.34 2178.2 2168.93 2165.7 2171.64 2162.98 cv
2173.05 2161.58 2175.87 2161.58 2178.69 2161.58 cv
2178.77 2161.58 2178.85 2161.58 2178.93 2161.58 cv
2181.47 2161.58 2183.96 2161.55 2185.38 2160.45 cv
2188.42 2158.12 2192.63 2157.68 2195.96 2155.76 cv
2199.27 2153.84 2199.89 2145.95 2203.46 2144.48 cv
2204.37 2144.1 2205.4 2143.97 2206.48 2143.97 cv
2207.64 2143.97 2208.85 2144.11 2210.07 2144.26 cv
2211.29 2144.4 2212.51 2144.54 2213.66 2144.54 cv
2214.47 2144.54 2215.25 2144.47 2215.97 2144.28 cv
2219.64 2143.3 2223.28 2140.38 2227.13 2139.88 cv
2227.26 2139.86 2227.39 2139.85 2227.52 2139.85 cv
2231.18 2139.85 2235.28 2146.2 2239.04 2146.2 cv
2242.84 2146.2 2247.47 2136.11 2251.18 2136.11 cv
2251.27 2136.11 2251.35 2136.12 2251.44 2136.13 cv
2255.28 2136.63 2257.17 2148.03 2260.84 2149.02 cv
2261.11 2149.09 2261.38 2149.12 2261.67 2149.12 cv
2263.36 2149.12 2265.45 2147.99 2267.53 2146.86 cv
2269.6 2145.73 2271.68 2144.6 2273.35 2144.6 cv
2273.76 2144.6 2274.13 2144.67 2274.48 2144.81 cv
2278.05 2146.29 2280.79 2150.42 2284.1 2152.34 cv
2287.43 2154.26 2285.02 2164.16 2288.06 2166.49 cv
2291.1 2168.83 2293.39 2170.61 2296.1 2173.32 cv
2296.93 2174.15 2298.4 2174.37 2300.11 2174.37 cv
2301.14 2174.37 2302.25 2174.29 2303.36 2174.21 cv
2304.46 2174.13 2305.57 2174.05 2306.6 2174.05 cv
2308.45 2174.05 2310.02 2174.32 2310.79 2175.32 cv
2313.13 2178.36 2309.37 2185.34 2311.3 2188.67 cv
2313.21 2191.98 2320.4 2192.51 2321.88 2196.07 cv
2323.34 2199.59 2328.5 2202.41 2329.5 2206.15 cv
2330.48 2209.82 2330.96 2214.38 2331.46 2218.22 cv
2331.95 2221.98 2319.66 2226.49 2319.66 2230.38 cv
2319.66 2234.27 2324.73 2237.84 2324.24 2241.6 cv
2323.74 2245.45 2320.28 2248.22 2319.3 2251.89 cv
2318.3 2255.62 2326.8 2262.61 2325.34 2266.13 cv
2323.86 2269.69 2315.2 2269.94 2313.29 2273.25 cv
2311.36 2276.58 2305.95 2276.89 2303.61 2279.93 cv
2301.27 2282.97 2304.15 2290.07 2301.44 2292.78 cv
2298.73 2295.49 2298.58 2301.67 2295.54 2304.01 cv
2294.83 2304.56 2293.87 2304.75 2292.77 2304.75 cv
2291.46 2304.75 2289.95 2304.47 2288.44 2304.19 cv
2286.93 2303.92 2285.41 2303.64 2284.1 2303.64 cv
2283.15 2303.64 2282.31 2303.78 2281.64 2304.17 cv
2278.33 2306.08 2275.92 2309.36 2272.36 2310.83 cv
2268.84 2312.29 2267.1 2320.17 2263.36 2321.17 cv
2263.16 2321.23 2262.95 2321.25 2262.74 2321.25 cv
2260.96 2321.25 2258.78 2319.48 2256.6 2317.72 cv
2254.42 2315.95 2252.23 2314.18 2250.42 2314.18 cv
2250.3 2314.18 2250.19 2314.19 2250.08 2314.2 cv
2246.32 2314.69 2242.93 2322.72 2239.04 2322.72 cv
2237.25 2322.72 2235.33 2322.77 2233.42 2322.77 cv
2208.83 2299.37 mo
2209.34 2299.37 2209.81 2299.45 2210.23 2299.62 cv
2213.4 2300.94 2213.71 2311.04 2217.07 2311.94 cv
2220.38 2312.83 2224.57 2312.81 2228.03 2313.26 cv
2229.86 2313.5 2231.87 2313.55 2233.88 2313.55 cv
2235.61 2313.55 2237.33 2313.51 2238.95 2313.51 cv
2242.46 2313.51 2245.51 2306.27 2248.9 2305.83 cv
2249 2305.82 2249.1 2305.81 2249.2 2305.81 cv
2250.84 2305.81 2252.81 2307.4 2254.77 2309 cv
2256.74 2310.59 2258.7 2312.18 2260.31 2312.18 cv
2260.5 2312.18 2260.69 2312.16 2260.87 2312.11 cv
2264.24 2311.21 2265.81 2304.11 2268.98 2302.79 cv
2272.19 2301.46 2274.36 2298.51 2277.34 2296.79 cv
2277.95 2296.44 2278.71 2296.31 2279.56 2296.31 cv
2280.75 2296.31 2282.11 2296.56 2283.47 2296.81 cv
2284.83 2297.06 2286.19 2297.31 2287.38 2297.31 cv
2288.36 2297.31 2289.23 2297.14 2289.87 2296.65 cv
2292.61 2294.54 2292.74 2288.97 2295.18 2286.52 cv
2296.89 2284.81 2296.14 2281.17 2296.25 2278.19 cv
2297.78 2276.38 2299.22 2274.49 2300.57 2272.53 cv
2302.61 2271.56 2304.81 2270.74 2305.86 2268.92 cv
2307.59 2265.94 2315.39 2265.72 2316.72 2262.51 cv
2318.04 2259.33 2310.38 2253.04 2311.28 2249.67 cv
2312.16 2246.36 2315.28 2243.87 2315.73 2240.4 cv
2315.97 2238.54 2314.71 2236.73 2313.52 2234.9 cv
2313.61 2233.41 2313.65 2231.9 2313.65 2230.38 cv
2313.65 2229.36 2313.63 2228.35 2313.59 2227.34 cv
2316.75 2224.63 2322.56 2221.8 2322.24 2219.33 cv
2321.79 2215.86 2321.36 2211.76 2320.47 2208.45 cv
2319.57 2205.08 2314.92 2202.54 2313.61 2199.36 cv
2312.28 2196.16 2305.79 2195.68 2304.07 2192.7 cv
2302.33 2189.7 2305.72 2183.4 2303.62 2180.67 cv
2302.92 2179.76 2301.5 2179.52 2299.83 2179.52 cv
2298.91 2179.52 2297.91 2179.59 2296.91 2179.67 cv
2295.91 2179.74 2294.91 2179.81 2293.99 2179.81 cv
2293.93 2179.81 2293.88 2179.81 2293.82 2179.81 cv
2290.18 2175.88 2286.12 2172.35 2281.71 2169.28 cv
2281.23 2165.84 2281.65 2161.16 2279.56 2159.95 cv
2276.58 2158.23 2274.1 2154.5 2270.9 2153.17 cv
2270.58 2153.04 2270.24 2152.98 2269.87 2152.98 cv
2268.36 2152.98 2266.49 2154 2264.62 2155.02 cv
2262.75 2156.03 2260.87 2157.05 2259.34 2157.05 cv
2259.08 2157.05 2258.84 2157.02 2258.6 2156.96 cv
2255.29 2156.07 2253.59 2145.8 2250.13 2145.34 cv
2250.05 2145.33 2249.97 2145.33 2249.89 2145.33 cv
2246.55 2145.33 2242.38 2154.42 2238.95 2154.42 cv
2235.57 2154.42 2231.87 2148.7 2228.57 2148.7 cv
2228.45 2148.7 2228.33 2148.71 2228.21 2148.72 cv
2224.75 2149.18 2221.47 2151.81 2218.16 2152.69 cv
2217.51 2152.86 2216.81 2152.93 2216.08 2152.93 cv
2215.04 2152.93 2213.94 2152.8 2212.84 2152.67 cv
2211.74 2152.54 2210.65 2152.41 2209.61 2152.41 cv
2208.63 2152.41 2207.7 2152.53 2206.88 2152.87 cv
2203.67 2154.2 2203.1 2161.31 2200.12 2163.03 cv
2197.12 2164.77 2193.33 2165.17 2190.59 2167.27 cv
2189.31 2168.25 2187.07 2168.28 2184.79 2168.28 cv
2184.71 2168.28 2184.64 2168.28 2184.56 2168.28 cv
2182.02 2168.28 2179.48 2168.28 2178.21 2169.55 cv
2176.25 2171.51 2180.73 2179.13 2181.5 2183.49 cv
2179.98 2185.36 2178.55 2187.31 2177.21 2189.32 cv
2175.87 2190.23 2174.58 2191.19 2173.74 2192.65 cv
2172.02 2195.63 2163.14 2195.12 2161.81 2198.33 cv
2160.49 2201.51 2158.81 2205.21 2157.91 2208.58 cv
2157.03 2211.89 2154.48 2215.65 2154.03 2219.12 cv
2153.59 2222.5 2162.75 2226.78 2162.75 2230.29 cv
2162.75 2233.79 2157.47 2237.57 2157.91 2240.95 cv
2158.37 2244.42 2159.99 2247.9 2160.87 2251.21 cv
2161.77 2254.57 2163.68 2257.75 2164.99 2260.92 cv
2166.32 2264.13 2170.57 2265.79 2172.3 2268.77 cv
2174.03 2271.77 2176.44 2273.9 2178.54 2276.63 cv
2179.67 2278.09 2181.47 2278.73 2183.27 2279.37 cv
2186.91 2283.52 2191 2287.27 2195.47 2290.53 cv
2196.43 2293.91 2195.69 2299.71 2198.07 2301.09 cv
2198.56 2301.37 2199.13 2301.49 2199.75 2301.49 cv
2201.09 2301.49 2202.69 2300.96 2204.29 2300.43 cv
2205.88 2299.9 2207.48 2299.37 2208.83 2299.37 cv
level3{
gsave
clp
[118.828 0 0 118.828 2239.26 2230.38 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[118.828 0 0 118.828 2239.26 2230.38 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
2233.88 2313.55 mo
2231.87 2313.55 2229.86 2313.5 2228.03 2313.26 cv
2224.57 2312.81 2220.38 2312.83 2217.07 2311.94 cv
2213.71 2311.04 2213.4 2300.94 2210.23 2299.62 cv
2209.81 2299.45 2209.34 2299.37 2208.83 2299.37 cv
2207.48 2299.37 2205.88 2299.9 2204.29 2300.43 cv
2202.69 2300.96 2201.09 2301.49 2199.75 2301.49 cv
2199.13 2301.49 2198.56 2301.37 2198.07 2301.09 cv
2195.69 2299.71 2196.43 2293.91 2195.47 2290.53 cv
2207.75 2299.49 2222.89 2304.77 2239.26 2304.77 cv
2262.14 2304.77 2282.61 2294.44 2296.25 2278.19 cv
2296.14 2281.17 2296.89 2284.81 2295.18 2286.52 cv
2292.74 2288.97 2292.61 2294.54 2289.87 2296.65 cv
2289.23 2297.14 2288.36 2297.31 2287.38 2297.31 cv
2286.19 2297.31 2284.83 2297.06 2283.47 2296.81 cv
2282.11 2296.56 2280.75 2296.31 2279.56 2296.31 cv
2278.71 2296.31 2277.95 2296.44 2277.34 2296.79 cv
2274.36 2298.51 2272.19 2301.46 2268.98 2302.79 cv
2265.81 2304.11 2264.24 2311.21 2260.87 2312.11 cv
2260.69 2312.16 2260.5 2312.18 2260.31 2312.18 cv
2258.7 2312.18 2256.74 2310.59 2254.77 2309 cv
2252.81 2307.4 2250.84 2305.81 2249.2 2305.81 cv
2249.1 2305.81 2249 2305.82 2248.9 2305.83 cv
2245.51 2306.27 2242.46 2313.51 2238.95 2313.51 cv
2237.33 2313.51 2235.61 2313.55 2233.88 2313.55 cv
2183.27 2279.37 mo
2181.47 2278.73 2179.67 2278.09 2178.54 2276.63 cv
2176.44 2273.9 2174.03 2271.77 2172.3 2268.77 cv
2170.57 2265.79 2166.32 2264.13 2164.99 2260.92 cv
2163.68 2257.75 2161.77 2254.57 2160.87 2251.21 cv
2159.99 2247.9 2158.37 2244.42 2157.91 2240.95 cv
2157.47 2237.57 2162.75 2233.79 2162.75 2230.29 cv
2162.75 2226.78 2153.59 2222.5 2154.03 2219.12 cv
2154.48 2215.65 2157.03 2211.89 2157.91 2208.58 cv
2158.81 2205.21 2160.49 2201.51 2161.81 2198.33 cv
2163.14 2195.12 2172.02 2195.63 2173.74 2192.65 cv
2174.58 2191.19 2175.87 2190.23 2177.21 2189.32 cv
2169.41 2201.09 2164.86 2215.2 2164.86 2230.38 cv
2164.86 2249.14 2171.81 2266.28 2183.27 2279.37 cv
2300.57 2272.53 mo
2308.02 2261.71 2312.68 2248.82 2313.52 2234.9 cv
2314.71 2236.73 2315.97 2238.54 2315.73 2240.4 cv
2315.28 2243.87 2312.16 2246.36 2311.28 2249.67 cv
2310.38 2253.04 2318.04 2259.33 2316.72 2262.51 cv
2315.39 2265.72 2307.59 2265.94 2305.86 2268.92 cv
2304.81 2270.74 2302.61 2271.56 2300.57 2272.53 cv
2313.59 2227.34 mo
2312.85 2209.02 2305.48 2192.39 2293.82 2179.81 cv
2293.88 2179.81 2293.93 2179.81 2293.99 2179.81 cv
2294.91 2179.81 2295.91 2179.74 2296.91 2179.67 cv
2297.91 2179.59 2298.91 2179.52 2299.83 2179.52 cv
2301.5 2179.52 2302.92 2179.76 2303.62 2180.67 cv
2305.72 2183.4 2302.33 2189.7 2304.07 2192.7 cv
2305.79 2195.68 2312.28 2196.16 2313.61 2199.36 cv
2314.92 2202.54 2319.57 2205.08 2320.47 2208.45 cv
2321.36 2211.76 2321.79 2215.86 2322.24 2219.33 cv
2322.56 2221.8 2316.75 2224.63 2313.59 2227.34 cv
2181.5 2183.49 mo
2180.73 2179.13 2176.25 2171.51 2178.21 2169.55 cv
2179.48 2168.28 2182.02 2168.28 2184.56 2168.28 cv
2184.64 2168.28 2184.71 2168.28 2184.79 2168.28 cv
2187.07 2168.28 2189.31 2168.25 2190.59 2167.27 cv
2193.33 2165.17 2197.12 2164.77 2200.12 2163.03 cv
2203.1 2161.31 2203.67 2154.2 2206.88 2152.87 cv
2207.7 2152.53 2208.63 2152.41 2209.61 2152.41 cv
2210.65 2152.41 2211.74 2152.54 2212.84 2152.67 cv
2213.94 2152.8 2215.04 2152.93 2216.08 2152.93 cv
2216.81 2152.93 2217.51 2152.86 2218.16 2152.69 cv
2221.47 2151.81 2224.75 2149.18 2228.21 2148.72 cv
2228.33 2148.71 2228.45 2148.7 2228.57 2148.7 cv
2231.87 2148.7 2235.57 2154.42 2238.95 2154.42 cv
2242.38 2154.42 2246.55 2145.33 2249.89 2145.33 cv
2249.97 2145.33 2250.05 2145.33 2250.13 2145.34 cv
2253.59 2145.8 2255.29 2156.07 2258.6 2156.96 cv
2258.84 2157.02 2259.08 2157.05 2259.34 2157.05 cv
2260.87 2157.05 2262.75 2156.03 2264.62 2155.02 cv
2266.49 2154 2268.36 2152.98 2269.87 2152.98 cv
2270.24 2152.98 2270.58 2153.04 2270.9 2153.17 cv
2274.1 2154.5 2276.58 2158.23 2279.56 2159.95 cv
2281.65 2161.16 2281.23 2165.84 2281.71 2169.28 cv
2269.67 2160.9 2255.04 2155.99 2239.26 2155.99 cv
2215.95 2155.99 2195.14 2166.71 2181.5 2183.49 cv
level3{
gsave
clp
[118.828 0 0 118.828 2239.26 2230.38 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[118.828 0 0 118.828 2239.26 2230.38 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
2313.65 2230.38 mo
2313.65 2271.47 2280.34 2304.77 2239.26 2304.77 cv
2198.17 2304.77 2164.86 2271.47 2164.86 2230.38 cv
2164.86 2189.3 2198.17 2155.99 2239.26 2155.99 cv
2280.34 2155.99 2313.65 2189.3 2313.65 2230.38 cv
.588235 .215686 .396078 rgb
f
2239.26 2294.83 mo
2203.66 2294.83 2174.81 2265.97 2174.81 2230.38 cv
2174.81 2194.79 2203.66 2165.94 2239.26 2165.94 cv
2274.85 2165.94 2303.7 2194.79 2303.7 2230.38 cv
2303.7 2265.97 2274.85 2294.83 2239.26 2294.83 cv
2239.26 2176.48 mo
2209.49 2176.48 2185.36 2200.61 2185.36 2230.38 cv
2185.36 2260.15 2209.49 2284.28 2239.26 2284.28 cv
2269.03 2284.28 2293.16 2260.15 2293.16 2230.38 cv
2293.16 2200.61 2269.03 2176.48 2239.26 2176.48 cv
.709804 .317647 .521569 rgb
f
2239.26 2284.28 mo
2209.49 2284.28 2185.36 2260.15 2185.36 2230.38 cv
2185.36 2200.61 2209.49 2176.48 2239.26 2176.48 cv
2269.03 2176.48 2293.16 2200.61 2293.16 2230.38 cv
2293.16 2260.15 2269.03 2284.28 2239.26 2284.28 cv
2239.26 2185.48 mo
2214.46 2185.48 2194.36 2205.59 2194.36 2230.38 cv
2194.36 2255.18 2214.46 2275.28 2239.26 2275.28 cv
2264.05 2275.28 2284.15 2255.18 2284.15 2230.38 cv
2284.15 2205.59 2264.05 2185.48 2239.26 2185.48 cv
.796078 .403922 .619608 rgb
f
2239.26 2275.28 mo
2214.46 2275.28 2194.36 2255.18 2194.36 2230.38 cv
2194.36 2205.59 2214.46 2185.48 2239.26 2185.48 cv
2264.05 2185.48 2284.15 2205.59 2284.15 2230.38 cv
2284.15 2255.18 2264.05 2275.28 2239.26 2275.28 cv
2239.26 2196.35 mo
2220.46 2196.35 2205.22 2211.58 2205.22 2230.38 cv
2205.22 2249.18 2220.46 2264.42 2239.26 2264.42 cv
2258.05 2264.42 2273.29 2249.18 2273.29 2230.38 cv
2273.29 2211.58 2258.05 2196.35 2239.26 2196.35 cv
.854902 .478431 .698039 rgb
f
2239.26 2264.42 mo
2220.46 2264.42 2205.22 2249.18 2205.22 2230.38 cv
2205.22 2211.58 2220.46 2196.35 2239.26 2196.35 cv
2258.05 2196.35 2273.29 2211.58 2273.29 2230.38 cv
2273.29 2249.18 2258.05 2264.42 2239.26 2264.42 cv
2239.26 2204.56 mo
2225 2204.56 2213.44 2216.12 2213.44 2230.38 cv
2213.44 2244.64 2225 2256.2 2239.26 2256.2 cv
2253.52 2256.2 2265.08 2244.64 2265.08 2230.38 cv
2265.08 2216.12 2253.52 2204.56 2239.26 2204.56 cv
.898039 .545098 .760784 rgb
f
2239.26 2256.2 mo
2225 2256.2 2213.44 2244.64 2213.44 2230.38 cv
2213.44 2216.12 2225 2204.56 2239.26 2204.56 cv
2253.52 2204.56 2265.08 2216.12 2265.08 2230.38 cv
2265.08 2244.64 2253.52 2256.2 2239.26 2256.2 cv
2239.26 2214.98 mo
2230.75 2214.98 2223.85 2221.87 2223.85 2230.38 cv
2223.85 2238.89 2230.75 2245.79 2239.26 2245.79 cv
2247.76 2245.79 2254.66 2238.89 2254.66 2230.38 cv
2254.66 2221.87 2247.76 2214.98 2239.26 2214.98 cv
.929412 .603922 .811765 rgb
f
2239.26 2245.79 mo
2230.75 2245.79 2223.85 2238.89 2223.85 2230.38 cv
2223.85 2221.87 2230.75 2214.98 2239.26 2214.98 cv
2247.76 2214.98 2254.66 2221.87 2254.66 2230.38 cv
2254.66 2238.89 2247.76 2245.79 2239.26 2245.79 cv
.94902 .654902 .85098 rgb
f
2003.91 2672.86 mo
2003.91 2676.03 2001.34 2678.6 1998.18 2678.6 cv
1995.01 2678.6 1992.44 2676.03 1992.44 2672.86 cv
1992.44 2669.69 1995.01 2667.13 1998.18 2667.13 cv
2001.34 2667.13 2003.91 2669.69 2003.91 2672.86 cv
cp
1 .921569 .921569 rgb
f
2370.77 2376.33 mo
2370.77 2379.83 2367.93 2382.67 2364.43 2382.67 cv
2360.92 2382.67 2358.09 2379.83 2358.09 2376.33 cv
2358.09 2372.82 2360.92 2369.99 2364.43 2369.99 cv
2367.93 2369.99 2370.77 2372.82 2370.77 2376.33 cv
cp
f
1889.74 2507.17 mo
1889.74 2510.73 1886.86 2513.61 1883.3 2513.61 cv
1879.74 2513.61 1876.86 2510.73 1876.86 2507.17 cv
1876.86 2503.61 1879.74 2500.73 1883.3 2500.73 cv
1886.86 2500.73 1889.74 2503.61 1889.74 2507.17 cv
cp
f
1955.96 2075.75 mo
1955.96 2079.44 1952.97 2082.44 1949.27 2082.44 cv
1945.58 2082.44 1942.58 2079.44 1942.58 2075.75 cv
1942.58 2072.06 1945.58 2069.06 1949.27 2069.06 cv
1952.97 2069.06 1955.96 2072.06 1955.96 2075.75 cv
cp
f
2160.7 2481.21 mo
2160.7 2484.9 2157.71 2487.9 2154.01 2487.9 cv
2150.32 2487.9 2147.32 2484.9 2147.32 2481.21 cv
2147.32 2477.52 2150.32 2474.52 2154.01 2474.52 cv
2157.71 2474.52 2160.7 2477.52 2160.7 2481.21 cv
cp
f
2076.58 2144.7 mo
2076.58 2148.4 2073.59 2151.39 2069.9 2151.39 cv
2066.2 2151.39 2063.21 2148.4 2063.21 2144.7 cv
2063.21 2141.01 2066.2 2138.01 2069.9 2138.01 cv
2073.59 2138.01 2076.58 2141.01 2076.58 2144.7 cv
cp
f
2406.11 2004.92 mo
2406.11 2008.61 2403.12 2011.61 2399.42 2011.61 cv
2395.73 2011.61 2392.73 2008.61 2392.73 2004.92 cv
2392.73 2001.23 2395.73 1998.23 2399.42 1998.23 cv
2403.12 1998.23 2406.11 2001.23 2406.11 2004.92 cv
cp
f
2230.54 2720.16 mo
2230.54 2723.85 2227.55 2726.85 2223.85 2726.85 cv
2220.16 2726.85 2217.16 2723.85 2217.16 2720.16 cv
2217.16 2716.46 2220.16 2713.47 2223.85 2713.47 cv
2227.55 2713.47 2230.54 2716.46 2230.54 2720.16 cv
cp
f
2620.55 2238.91 mo
2620.55 2244.82 2615.76 2249.61 2609.85 2249.61 cv
2603.94 2249.61 2599.15 2244.82 2599.15 2238.91 cv
2599.15 2233 2603.94 2228.21 2609.85 2228.21 cv
2615.76 2228.21 2620.55 2233 2620.55 2238.91 cv
cp
f
2016.07 2432.37 mo
2016.07 2434.13 2014.65 2435.55 2012.89 2435.55 cv
2011.13 2435.55 2009.7 2434.13 2009.7 2432.37 cv
2009.7 2430.61 2011.13 2429.18 2012.89 2429.18 cv
2014.65 2429.18 2016.07 2430.61 2016.07 2432.37 cv
cp
f
2511.52 2561.08 mo
2511.52 2566.94 2506.77 2571.7 2500.9 2571.7 cv
2495.04 2571.7 2490.28 2566.94 2490.28 2561.08 cv
2490.28 2555.21 2495.04 2550.46 2500.9 2550.46 cv
2506.77 2550.46 2511.52 2555.21 2511.52 2561.08 cv
cp
f
1901.5 1973.1 mo
1911.26 1995.36 1901.13 2021.32 1878.86 2031.08 cv
1856.6 2040.84 1830.64 2030.71 1820.88 2008.45 cv
1811.12 1986.18 1821.25 1960.22 1843.52 1950.46 cv
1865.78 1940.7 1891.74 1950.84 1901.5 1973.1 cv
cp
.878431 .580392 .72549 rgb
f
2432.4 1825.41 mo
2447.34 1851.76 2438.08 1885.24 2411.73 1900.18 cv
2385.37 1915.12 2351.89 1905.86 2336.95 1879.51 cv
2322.01 1853.15 2331.27 1819.68 2357.63 1804.74 cv
2383.98 1789.8 2417.46 1799.05 2432.4 1825.41 cv
cp
f
2432.76 1878.86 mo
2428.03 1887.5 2420.92 1894.97 2411.72 1900.18 cv
2385.37 1915.12 2351.89 1905.87 2336.95 1879.51 cv
2324.71 1857.92 2328.71 1831.55 2345.05 1814.51 cv
2336.23 1830.62 2335.7 1850.79 2345.42 1867.95 cv
2360.36 1894.3 2393.84 1903.57 2420.2 1888.63 cv
2424.95 1885.93 2429.16 1882.63 2432.76 1878.86 cv
cp
.709804 .286275 .490196 rgb
f
2472.92 1887.9 mo
2468.79 1908.8 2448.5 1922.4 2427.59 1918.27 cv
2406.69 1914.15 2393.09 1893.85 2397.22 1872.95 cv
2401.35 1852.04 2421.64 1838.44 2442.55 1842.57 cv
2463.45 1846.7 2477.05 1866.99 2472.92 1887.9 cv
cp
.878431 .580392 .72549 rgb
f
2471.04 1894.42 mo
2464.39 1911.55 2446.23 1921.96 2427.59 1918.28 cv
2406.69 1914.15 2393.09 1893.85 2397.22 1872.95 cv
2398.37 1867.09 2400.8 1861.8 2404.16 1857.32 cv
2403.35 1859.4 2402.72 1861.57 2402.27 1863.83 cv
2398.14 1884.74 2411.74 1905.03 2432.65 1909.16 cv
2447.69 1912.13 2462.42 1905.92 2471.04 1894.42 cv
cp
.709804 .286275 .490196 rgb
f
2683.6 2109.03 mo
2674.84 2139.55 2642.99 2157.18 2612.47 2148.42 cv
2581.96 2139.65 2564.32 2107.81 2573.08 2077.29 cv
2581.85 2046.77 2613.7 2029.13 2644.22 2037.9 cv
2674.73 2046.66 2692.37 2078.51 2683.6 2109.03 cv
cp
.878431 .580392 .72549 rgb
f
2650.56 2146.17 mo
2638.91 2151.08 2625.56 2152.17 2612.47 2148.42 cv
2581.96 2139.65 2564.32 2107.8 2573.08 2077.29 cv
2579.31 2055.58 2597.24 2040.39 2618.04 2036.59 cv
2602.53 2043.08 2590 2056.31 2584.99 2073.74 cv
2576.23 2104.26 2593.86 2136.11 2624.38 2144.87 cv
2633.19 2147.4 2642.12 2147.73 2650.56 2146.17 cv
cp
.709804 .286275 .490196 rgb
f
2531.79 2364.58 mo
2531.79 2391.36 2510.08 2413.07 2483.3 2413.07 cv
2456.52 2413.07 2434.8 2391.36 2434.8 2364.58 cv
2434.8 2337.79 2456.52 2316.08 2483.3 2316.08 cv
2510.08 2316.08 2531.79 2337.79 2531.79 2364.58 cv
cp
.878431 .580392 .72549 rgb
f
2445.46 2366.15 mo
2445.46 2388.65 2460.78 2407.56 2481.54 2413.04 cv
2455.57 2412.12 2434.8 2390.77 2434.8 2364.58 cv
2434.8 2337.8 2456.52 2316.08 2483.3 2316.08 cv
2487.61 2316.08 2491.8 2316.65 2495.77 2317.7 cv
2495.17 2317.68 2494.57 2317.67 2493.96 2317.67 cv
2467.18 2317.67 2445.46 2339.37 2445.46 2366.15 cv
cp
.709804 .286275 .490196 rgb
f
2580.44 2297.42 mo
2580.44 2313.36 2567.52 2326.29 2551.57 2326.29 cv
2535.63 2326.29 2522.7 2313.36 2522.7 2297.42 cv
2522.7 2281.47 2535.63 2268.55 2551.57 2268.55 cv
2567.52 2268.55 2580.44 2281.47 2580.44 2297.42 cv
cp
.878431 .580392 .72549 rgb
f
2579.65 2290.7 mo
2574.43 2283.37 2565.86 2278.61 2556.17 2278.61 cv
2540.22 2278.61 2527.29 2291.54 2527.29 2307.48 cv
2527.29 2309.81 2527.56 2312.06 2528.09 2314.21 cv
2524.7 2309.49 2522.7 2303.69 2522.7 2297.42 cv
2522.7 2281.48 2535.63 2268.55 2551.57 2268.55 cv
2565.2 2268.55 2576.63 2277.99 2579.65 2290.7 cv
cp
.709804 .286275 .490196 rgb
f
2069.89 2526.75 mo
2069.89 2556.74 2045.58 2581.05 2015.59 2581.05 cv
1985.6 2581.05 1961.29 2556.74 1961.29 2526.75 cv
1961.29 2496.76 1985.6 2472.45 2015.59 2472.45 cv
2045.58 2472.45 2069.89 2496.76 2069.89 2526.75 cv
cp
.878431 .580392 .72549 rgb
f
2069.9 2526.75 mo
2069.9 2528.63 2069.8 2530.48 2069.62 2532.3 cv
2066.82 2504.94 2043.7 2483.59 2015.6 2483.59 cv
1987.49 2483.59 1964.38 2504.94 1961.58 2532.3 cv
1961.4 2530.48 1961.3 2528.63 1961.3 2526.75 cv
1961.3 2496.76 1985.6 2472.45 2015.6 2472.45 cv
2045.59 2472.45 2069.9 2496.76 2069.9 2526.75 cv
cp
.709804 .286275 .490196 rgb
f
2343.64 2631.08 mo
2334.51 2651.41 2310.63 2660.49 2290.3 2651.37 cv
2269.97 2642.24 2260.89 2618.36 2270.01 2598.03 cv
2279.14 2577.7 2303.02 2568.62 2323.35 2577.74 cv
2343.68 2586.87 2352.76 2610.75 2343.64 2631.08 cv
cp
.878431 .580392 .72549 rgb
f
2345.5 2603.06 mo
2341.46 2595.23 2334.84 2588.67 2326.19 2584.79 cv
2305.86 2575.66 2281.98 2584.75 2272.86 2605.08 cv
2268.73 2614.26 2268.33 2624.16 2270.99 2633.11 cv
2265.54 2622.56 2264.77 2609.71 2270.02 2598.03 cv
2279.14 2577.71 2303.02 2568.62 2323.35 2577.75 cv
2334.5 2582.75 2342.27 2592.19 2345.5 2603.06 cv
cp
.709804 .286275 .490196 rgb
f
2337.14 2619.45 mo
2334.11 2636.55 2317.8 2647.95 2300.7 2644.93 cv
2287.4 2642.58 2277.54 2632.19 2275.24 2619.65 cv
2279.5 2628.37 2287.73 2635.01 2298.02 2636.82 cv
2315.12 2639.85 2331.43 2628.44 2334.45 2611.33 cv
2335.13 2607.52 2335.09 2603.75 2334.42 2600.16 cv
2337.26 2605.94 2338.34 2612.63 2337.14 2619.45 cv
cp
1 .65098 .819608 rgb
f
1915.18 2324.65 mo
1915.18 2346.13 1897.76 2363.56 1876.27 2363.56 cv
1854.78 2363.56 1837.36 2346.13 1837.36 2324.65 cv
1837.36 2303.16 1854.78 2285.73 1876.27 2285.73 cv
1897.76 2285.73 1915.18 2303.16 1915.18 2324.65 cv
cp
.878431 .580392 .72549 rgb
f
1915.18 2324.65 mo
1915.18 2346.13 1897.76 2363.55 1876.26 2363.55 cv
1874.03 2363.55 1871.84 2363.36 1869.7 2363 cv
1888.06 2359.88 1902.04 2343.9 1902.04 2324.65 cv
1902.04 2305.39 1888.06 2289.41 1869.7 2286.28 cv
1871.84 2285.92 1874.03 2285.73 1876.26 2285.73 cv
1897.76 2285.73 1915.18 2303.15 1915.18 2324.65 cv
cp
.709804 .286275 .490196 rgb
f
1946.94 1971.88 mo
1957.38 1995.68 1946.54 2023.43 1922.74 2033.86 cv
1898.95 2044.3 1871.19 2033.46 1860.76 2009.67 cv
1850.33 1985.87 1861.16 1958.11 1884.96 1947.68 cv
1908.76 1937.25 1936.51 1948.08 1946.94 1971.88 cv
cp
.878431 .580392 .72549 rgb
f
1922.74 2033.86 mo
1903.81 2042.17 1882.38 2037.01 1869.16 2022.57 cv
1881.95 2030.7 1898.42 2032.52 1913.34 2025.98 cv
1937.14 2015.54 1947.97 1987.79 1937.53 1963.99 cv
1935.4 1959.13 1932.53 1954.8 1929.14 1951.09 cv
1936.75 1955.93 1943.05 1963 1946.95 1971.88 cv
1957.38 1995.68 1946.54 2023.43 1922.74 2033.86 cv
cp
.709804 .286275 .490196 rgb
f
2517.02 2392.09 mo
2506.25 2404.69 2489.68 2409.41 2474.61 2405.68 cv
2486.85 2405.93 2499.1 2400.89 2507.68 2390.86 cv
2522.88 2373.08 2520.79 2346.33 2503.02 2331.13 cv
2497.83 2326.7 2491.9 2323.74 2485.7 2322.2 cv
2495.16 2322.39 2504.61 2325.72 2512.36 2332.36 cv
2530.14 2347.56 2532.23 2374.31 2517.02 2392.09 cv
cp
1 .65098 .819608 rgb
f
1848.4 2315.25 mo
1852.24 2305.08 1861.41 2298.48 1871.53 2297.42 cv
1863.93 2299.99 1857.5 2305.83 1854.44 2313.92 cv
1849.03 2328.28 1856.28 2344.31 1870.63 2349.72 cv
1874.82 2351.3 1879.14 2351.79 1883.3 2351.36 cv
1877.42 2353.36 1870.86 2353.4 1864.59 2351.04 cv
1850.24 2345.63 1842.99 2329.6 1848.4 2315.25 cv
cp
f
1895.26 1978.56 mo
1890.9 1972.21 1884.48 1967.19 1876.56 1964.66 cv
1857.67 1958.62 1837.46 1969.03 1831.42 1987.92 cv
1829.11 1995.14 1829.2 2002.55 1831.25 2009.29 cv
1825.21 2000.46 1823.17 1989.03 1826.68 1978.05 cv
1832.72 1959.16 1852.93 1948.75 1871.83 1954.79 cv
1883.5 1958.52 1891.94 1967.66 1895.26 1978.56 cv
cp
f
2100.34 2543.8 mo
2100.34 2564.59 2083.48 2581.45 2062.69 2581.45 cv
2041.9 2581.45 2025.04 2564.59 2025.04 2543.8 cv
2025.04 2523.01 2041.9 2506.15 2062.69 2506.15 cv
2083.48 2506.15 2100.34 2523.01 2100.34 2543.8 cv
cp
.878431 .580392 .72549 rgb
f
2098.71 2554.79 mo
2098.72 2554.37 2098.73 2553.94 2098.73 2553.52 cv
2098.73 2532.73 2081.87 2515.87 2061.08 2515.87 cv
2044.11 2515.87 2029.76 2527.1 2025.06 2542.52 cv
2025.74 2522.32 2042.32 2506.15 2062.69 2506.15 cv
2083.48 2506.15 2100.34 2523.01 2100.34 2543.8 cv
2100.34 2547.62 2099.77 2551.31 2098.71 2554.79 cv
cp
.709804 .286275 .490196 rgb
f
1983.38 2507.17 mo
1981.29 2515.75 1981.94 2525.07 1985.84 2533.75 cv
1995.16 2554.48 2019.51 2563.73 2040.24 2554.41 cv
2048.16 2550.85 2054.4 2545.1 2058.58 2538.19 cv
2055.68 2550.1 2047.5 2560.59 2035.46 2566.01 cv
2014.73 2575.33 1990.38 2566.08 1981.05 2545.35 cv
1975.3 2532.54 1976.63 2518.34 1983.38 2507.17 cv
cp
1 .65098 .819608 rgb
f
2704.33 2150.14 mo
2697.17 2175.06 2671.17 2189.46 2646.25 2182.31 cv
2621.34 2175.15 2606.94 2149.15 2614.09 2124.23 cv
2621.25 2099.31 2647.25 2084.91 2672.17 2092.07 cv
2697.09 2099.23 2711.49 2125.23 2704.33 2150.14 cv
cp
.878431 .580392 .72549 rgb
f
2680.42 2179.06 mo
2670.22 2184.24 2658.12 2185.71 2646.25 2182.3 cv
2621.34 2175.15 2606.94 2149.15 2614.09 2124.23 cv
2618.69 2108.23 2631.05 2096.57 2645.91 2092.16 cv
2634.67 2097.85 2625.74 2108.02 2621.99 2121.09 cv
2614.83 2146.01 2629.23 2172.01 2654.15 2179.16 cv
2663.07 2181.72 2672.14 2181.52 2680.42 2179.06 cv
cp
.709804 .286275 .490196 rgb
f
2691.36 2162.72 mo
2681.81 2173.89 2667.12 2178.07 2653.77 2174.76 cv
2664.62 2174.99 2675.47 2170.52 2683.07 2161.63 cv
2696.55 2145.87 2694.7 2122.16 2678.94 2108.68 cv
2674.35 2104.76 2669.09 2102.14 2663.59 2100.77 cv
2671.98 2100.94 2680.36 2103.89 2687.23 2109.78 cv
2702.99 2123.25 2704.84 2146.96 2691.36 2162.72 cv
cp
1 .65098 .819608 rgb
f
2432.5 1859.24 mo
2432.15 1861.05 2431.68 1862.83 2431.12 1864.54 cv
2432.79 1842.17 2417.52 1821.56 2394.94 1817.1 cv
2372.37 1812.64 2350.41 1825.9 2343.45 1847.23 cv
2343.58 1845.43 2343.82 1843.61 2344.18 1841.79 cv
2349 1817.41 2372.67 1801.54 2397.06 1806.36 cv
2421.46 1811.18 2437.32 1834.85 2432.5 1859.24 cv
cp
f
2067.33 1817.79 mo
2071.17 1833.17 2061.81 1848.74 2046.44 1852.58 cv
2031.06 1856.41 2015.49 1847.05 2011.65 1831.68 cv
2007.82 1816.3 2017.17 1800.73 2032.55 1796.9 cv
2047.93 1793.06 2063.5 1802.42 2067.33 1817.79 cv
cp
.878431 .580392 .72549 rgb
f
2046.44 1852.57 mo
2032.37 1856.08 2018.14 1848.55 2012.89 1835.47 cv
2019.34 1845.54 2031.72 1850.86 2043.98 1847.81 cv
2059.35 1843.97 2068.71 1828.4 2064.87 1813.02 cv
2064.55 1811.72 2064.13 1810.45 2063.64 1809.23 cv
2065.29 1811.8 2066.55 1814.67 2067.33 1817.79 cv
2071.16 1833.17 2061.81 1848.74 2046.44 1852.57 cv
cp
.709804 .286275 .490196 rgb
f
2184.94 1849.35 mo
2190.98 1873.56 2176.25 1898.08 2152.03 1904.12 cv
2127.82 1910.16 2103.29 1895.43 2097.25 1871.21 cv
2091.22 1847 2105.95 1822.47 2130.17 1816.43 cv
2154.38 1810.4 2178.9 1825.13 2184.94 1849.35 cv
cp
.878431 .580392 .72549 rgb
f
2176.6 1860.28 mo
2176.42 1858.79 2176.15 1857.29 2175.78 1855.8 cv
2171 1836.65 2151.6 1824.99 2132.45 1829.77 cv
2117.62 1833.47 2107.27 1845.94 2105.59 1860.29 cv
2103.5 1842.66 2114.79 1825.82 2132.45 1821.43 cv
2151.6 1816.65 2171 1828.3 2175.78 1847.46 cv
2176.86 1851.78 2177.1 1856.11 2176.6 1860.28 cv
cp
1 .65098 .819608 rgb
f
2152.03 1904.12 mo
2136.04 1908.1 2119.91 1903.04 2109.07 1892.16 cv
2119.15 1898.58 2131.75 1901.01 2144.27 1897.89 cv
2168.48 1891.86 2183.21 1867.34 2177.17 1843.11 cv
2175.12 1834.89 2170.94 1827.76 2165.35 1822.16 cv
2174.78 1828.16 2182.02 1837.65 2184.94 1849.35 cv
2190.98 1873.56 2176.25 1898.09 2152.03 1904.12 cv
cp
.709804 .286275 .490196 rgb
f
4107.85 2126.07 mo
4093.83 2128.17 4079.81 2130.27 4065.79 2132.38 cv
4044.1 2135.63 4022.41 2138.88 4000.72 2142.14 cv
3988.2 2144.02 3976.17 2146.19 3965.76 2153.87 cv
3963.63 2155.45 3962 2158.38 3964.65 2160.59 cv
3965.53 2161.32 3966.64 2161.7 3967.74 2162.01 cv
3974.43 2163.92 3981.22 2163.72 3987.83 2161.72 cv
3990.34 2160.96 3992.85 2160.23 3995.35 2159.48 cv
4003.37 2157.1 4011.38 2154.72 4019.39 2152.34 cv
4039.28 2146.44 4059.16 2140.53 4079.05 2134.62 cv
4088.65 2131.77 4098.25 2128.92 4107.85 2126.07 cv
cp
.647059 .517647 .290196 rgb
f
3992 2443.54 mo
3982.4 2436.85 3972.8 2430.17 3963.2 2423.48 cv
3960.07 2421.3 3956.94 2419.13 3953.82 2416.94 cv
3951.83 2415.56 3949.98 2413.93 3947.78 2412.88 cv
3943.59 2410.88 3938.98 2410.92 3934.46 2411.34 cv
3932.48 2411.53 3927.06 2411.94 3927.6 2415.04 cv
3928.4 2419.62 3933.69 2422.4 3936.76 2425.25 cv
3938.67 2427.03 3940.81 2428.72 3943.3 2429.6 cv
3944.6 2430.06 3945.98 2430.37 3947.31 2430.75 cv
3952.2 2432.15 3957.08 2433.55 3961.96 2434.94 cv
3971.5 2437.67 3981.04 2440.4 3990.58 2443.13 cv
3990.97 2443.25 3991.66 2443.3 3992 2443.54 cv
cp
f
3817.89 2566.16 mo
3817.98 2566.29 li
3820.67 2570.46 3821.35 2575.43 3822.97 2580.04 cv
3824.79 2585.21 3826.6 2590.37 3828.42 2595.54 cv
3831.86 2605.32 3835.3 2615.1 3838.74 2624.89 cv
3839.43 2626.87 3839.9 2629.42 3840.97 2631.24 cv
3807.79 2574.97 li
3806.14 2571.73 3805.1 2568.18 3804.69 2564.56 cv
3804.44 2562.35 3803.7 2559.08 3804.91 2557.05 cv
3805.9 2555.38 3807.85 2556.45 3808.99 2557.32 cv
3812.29 2559.82 3815.58 2562.64 3817.89 2566.16 cv
cp
f
3391.9 2641.85 mo
3477.72 2529.29 li
3481.02 2524.22 3483.71 2518.58 3484.98 2512.64 cv
3485.68 2509.41 3487.13 2503.12 3483.96 2500.71 cv
3481.63 2498.94 3477.9 2500.98 3475.59 2501.93 cv
3469.44 2504.45 3463.3 2508.38 3460.07 2514.38 cv
3391.9 2641.85 li
cp
f
3250.93 2361.14 mo
3267.86 2357.16 3284.79 2353.19 3301.72 2349.22 cv
3312.41 2346.71 3323.1 2344.2 3333.79 2341.69 cv
3345.44 2338.96 3358.44 2337.28 3365.63 2326.51 cv
3367.91 2323.1 3367.63 2320.11 3362.96 2319.13 cv
3353.65 2317.17 3342.48 2317.57 3333.7 2321.56 cv
3250.93 2361.14 li
cp
f
3367.69 1888.33 mo
3412.92 1958.48 li
3419.04 1966.34 3426.4 1970.71 3434.56 1972.83 cv
3436.91 1974.38 3439.83 1971.87 3438.64 1969.32 cv
3436.52 1959.16 3432.25 1949.68 3425.45 1941.01 cv
3367.69 1888.33 li
cp
f
3779.08 1941.16 mo
3781.59 1935.82 3785.18 1930.9 3788.37 1925.94 cv
3793.07 1918.63 3797.77 1911.32 3802.47 1904.01 cv
3813.12 1887.44 3823.77 1870.87 3834.42 1854.3 cv
3839.54 1846.34 3844.66 1838.38 3849.78 1830.42 cv
3800.1 1945.01 li
3797.9 1950.06 3792.51 1958.73 3788.42 1962.53 cv
3786.28 1964.51 3782.58 1967.47 3779.52 1967.49 cv
3774.05 1967.53 3774.5 1958.69 3774.8 1955.16 cv
3775.13 1951.27 3777.47 1944.58 3779.08 1941.16 cv
cp
f
3778.27 1947.41 mo
3828.21 1870.59 li
3793.56 1952.33 li
3793.35 1952.83 3793.06 1953.28 3792.7 1953.69 cv
3786.03 1961.13 li
3783.03 1964.48 3777.48 1962.36 3777.48 1957.86 cv
3777.48 1950.08 li
3777.48 1949.13 3777.76 1948.2 3778.27 1947.41 cv
cp
.631373 .407843 0 rgb
f
3978.62 2149.08 mo
4039.33 2142.12 li
3978.38 2161.02 li
3977.78 2161.21 3977.14 2161.29 3976.51 2161.27 cv
3976.51 2161.27 li
3970.48 2161.04 3969.03 2152.75 3974.62 2150.48 cv
3977.15 2149.45 li
3977.62 2149.26 3978.11 2149.14 3978.62 2149.08 cv
cp
f
3941.85 2413.68 mo
3944.15 2414.47 3945.98 2415.94 3947.97 2417.27 cv
3951.87 2419.87 3955.77 2422.47 3959.67 2425.07 cv
3965.85 2429.19 3972.02 2433.3 3978.19 2437.42 cv
3978.38 2437.55 li
3970.62 2435.14 3962.86 2432.74 3955.1 2430.34 cv
3952.69 2429.59 3950.28 2428.84 3947.87 2428.09 cv
3944.62 2427.09 3941.04 2426.41 3938.23 2424.29 cv
3935.73 2422.4 3932.42 2419.81 3931.08 2416.93 cv
3930.14 2414.92 3931.66 2412.95 3933.66 2412.56 cv
3936.08 2412.09 3939.54 2412.89 3941.85 2413.68 cv
3941.85 2413.68 li
cp
f
3813.93 2563.23 mo
3815.06 2565.11 3815.5 2567.27 3816.23 2569.32 cv
3816.81 2570.97 3817.4 2572.61 3817.98 2574.26 cv
3819.39 2578.25 3820.8 2582.23 3822.21 2586.21 cv
3824.7 2593.23 3827.18 2600.24 3829.66 2607.25 cv
3830 2608.19 3830.33 2609.14 3830.67 2610.08 cv
3807.91 2570.93 li
3805.52 2560.78 li
3805.28 2559.77 3805.75 2558.66 3806.63 2558.11 cv
3809.46 2556.35 3812.53 2561.07 3813.77 2562.99 cv
3813.93 2563.23 li
cp
f
3479.31 2520.93 mo
3478.95 2521.56 3478.58 2522.18 3478.2 2522.79 cv
3475.41 2527.2 3471.63 2531 3468.31 2535 cv
3462.16 2542.4 3456.02 2549.79 3449.88 2557.19 cv
3443.29 2565.12 3436.71 2573.04 3430.12 2580.97 cv
3435.09 2571.25 3440.06 2561.52 3445.03 2551.8 cv
3451.69 2538.77 3458.58 2525.83 3465.03 2512.69 cv
3467.13 2508.4 3471.47 2505.54 3475.35 2502.87 cv
3480 2499.66 3486.05 2504.26 3484.2 2509.6 cv
3482.85 2513.49 3481.33 2517.34 3479.31 2520.93 cv
cp
f
3354.96 2332.53 mo
3351.48 2333.95 3347.73 2334.77 3344.08 2335.46 cv
3337.89 2336.63 3331.76 2338.12 3325.62 2339.53 cv
3315.45 2341.86 3305.27 2344.19 3295.09 2346.52 cv
3292.76 2347.05 3290.43 2347.59 3288.09 2348.12 cv
3304.11 2340.86 3320.15 2333.66 3336.13 2326.33 cv
3342.96 2323.2 3348.78 2320.73 3356.3 2319.97 cv
3361.91 2319.4 3364.59 2326.68 3359.95 2329.88 cv
3358.39 2330.96 3356.71 2331.82 3354.96 2332.53 cv
cp
f
3420.19 1962.33 mo
3419.8 1961.9 3419.43 1961.43 3419.1 1960.91 cv
3418.43 1959.85 3417.72 1958.81 3417.03 1957.76 cv
3414.84 1954.44 3412.66 1951.13 3410.47 1947.81 cv
3405.07 1939.61 3399.67 1931.41 3394.26 1923.21 cv
3391.64 1919.23 3389.02 1915.25 3386.4 1911.27 cv
3432.11 1956.64 li
3432.41 1956.94 3432.66 1957.28 3432.85 1957.66 cv
3436.56 1965.19 li
3437.33 1966.74 3436.82 1968.65 3435.58 1969.79 cv
3433.99 1971.25 3432.22 1970.84 3430.58 1969.76 cv
3427.17 1967.53 3422.95 1965.37 3420.19 1962.33 cv
cp
f
3646.3 2313.2 mo
3604.8 2313.2 3571.16 2279.56 3571.16 2238.07 cv
3571.16 2196.57 3604.8 2162.93 3646.3 2162.93 cv
3687.8 2162.93 3721.44 2196.57 3721.44 2238.07 cv
3721.44 2279.56 3687.8 2313.2 3646.3 2313.2 cv
3645.24 2198.28 mo
3622.61 2198.28 3604.27 2216.63 3604.27 2239.26 cv
3604.27 2261.89 3622.61 2280.24 3645.24 2280.24 cv
3667.87 2280.24 3686.22 2261.89 3686.22 2239.26 cv
3686.22 2216.63 3667.87 2198.28 3645.24 2198.28 cv
level3{
gsave
clp
[75.1395 0 0 75.1395 3646.3 2238.07 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[75.1395 0 0 75.1395 3646.3 2238.07 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
3686.22 2239.26 mo
3686.22 2261.89 3667.87 2280.24 3645.24 2280.24 cv
3622.61 2280.24 3604.27 2261.89 3604.27 2239.26 cv
3604.27 2216.63 3622.61 2198.28 3645.24 2198.28 cv
3667.87 2198.28 3686.22 2216.63 3686.22 2239.26 cv
.588235 .215686 .396078 rgb
f
3645.24 2274.76 mo
3625.64 2274.76 3609.75 2258.86 3609.75 2239.26 cv
3609.75 2219.65 3625.64 2203.76 3645.24 2203.76 cv
3664.85 2203.76 3680.74 2219.65 3680.74 2239.26 cv
3680.74 2258.86 3664.85 2274.76 3645.24 2274.76 cv
3645.24 2209.57 mo
3628.85 2209.57 3615.55 2222.86 3615.55 2239.26 cv
3615.55 2255.66 3628.85 2268.95 3645.24 2268.95 cv
3661.64 2268.95 3674.93 2255.66 3674.93 2239.26 cv
3674.93 2222.86 3661.64 2209.57 3645.24 2209.57 cv
.709804 .317647 .521569 rgb
f
3645.24 2268.95 mo
3628.85 2268.95 3615.55 2255.66 3615.55 2239.26 cv
3615.55 2222.86 3628.85 2209.57 3645.24 2209.57 cv
3661.64 2209.57 3674.93 2222.86 3674.93 2239.26 cv
3674.93 2255.66 3661.64 2268.95 3645.24 2268.95 cv
3645.24 2214.53 mo
3631.59 2214.53 3620.51 2225.6 3620.51 2239.26 cv
3620.51 2252.92 3631.59 2263.99 3645.24 2263.99 cv
3658.9 2263.99 3669.97 2252.92 3669.97 2239.26 cv
3669.97 2225.6 3658.9 2214.53 3645.24 2214.53 cv
.796078 .403922 .619608 rgb
f
3645.24 2263.99 mo
3631.59 2263.99 3620.51 2252.92 3620.51 2239.26 cv
3620.51 2225.6 3631.59 2214.53 3645.24 2214.53 cv
3658.9 2214.53 3669.97 2225.6 3669.97 2239.26 cv
3669.97 2252.92 3658.9 2263.99 3645.24 2263.99 cv
3645.24 2220.51 mo
3634.89 2220.51 3626.5 2228.91 3626.5 2239.26 cv
3626.5 2249.61 3634.89 2258.01 3645.24 2258.01 cv
3655.6 2258.01 3663.99 2249.61 3663.99 2239.26 cv
3663.99 2228.91 3655.6 2220.51 3645.24 2220.51 cv
.854902 .478431 .698039 rgb
f
3645.24 2258.01 mo
3634.89 2258.01 3626.5 2249.61 3626.5 2239.26 cv
3626.5 2228.91 3634.89 2220.51 3645.24 2220.51 cv
3655.6 2220.51 3663.99 2228.91 3663.99 2239.26 cv
3663.99 2249.61 3655.6 2258.01 3645.24 2258.01 cv
3645.24 2225.04 mo
3637.39 2225.04 3631.02 2231.4 3631.02 2239.26 cv
3631.02 2247.11 3637.39 2253.48 3645.24 2253.48 cv
3653.1 2253.48 3659.47 2247.11 3659.47 2239.26 cv
3659.47 2231.4 3653.1 2225.04 3645.24 2225.04 cv
.898039 .545098 .760784 rgb
f
3645.24 2253.48 mo
3637.39 2253.48 3631.02 2247.11 3631.02 2239.26 cv
3631.02 2231.4 3637.39 2225.04 3645.24 2225.04 cv
3653.1 2225.04 3659.47 2231.4 3659.47 2239.26 cv
3659.47 2247.11 3653.1 2253.48 3645.24 2253.48 cv
3645.24 2230.77 mo
3640.56 2230.77 3636.76 2234.57 3636.76 2239.26 cv
3636.76 2243.95 3640.56 2247.74 3645.24 2247.74 cv
3649.93 2247.74 3653.73 2243.95 3653.73 2239.26 cv
3653.73 2234.57 3649.93 2230.77 3645.24 2230.77 cv
.929412 .603922 .811765 rgb
f
3645.24 2247.74 mo
3640.56 2247.74 3636.76 2243.95 3636.76 2239.26 cv
3636.76 2234.57 3640.56 2230.77 3645.24 2230.77 cv
3649.93 2230.77 3653.73 2234.57 3653.73 2239.26 cv
3653.73 2243.95 3649.93 2247.74 3645.24 2247.74 cv
.94902 .654902 .85098 rgb
f
3561.56 2616 mo
3561.56 2619.69 3558.56 2622.69 3554.87 2622.69 cv
3551.17 2622.69 3548.18 2619.69 3548.18 2616 cv
3548.18 2612.3 3551.17 2609.31 3554.87 2609.31 cv
3558.56 2609.31 3561.56 2612.3 3561.56 2616 cv
cp
1 .921569 .921569 rgb
f
3393.08 2399.7 mo
3393.08 2403.4 3390.09 2406.39 3386.4 2406.39 cv
3382.7 2406.39 3379.71 2403.4 3379.71 2399.7 cv
3379.71 2396.01 3382.7 2393.02 3386.4 2393.02 cv
3390.09 2393.02 3393.08 2396.01 3393.08 2399.7 cv
cp
f
3715.53 2474.47 mo
3715.53 2478.17 3712.54 2481.16 3708.84 2481.16 cv
3705.15 2481.16 3702.15 2478.17 3702.15 2474.47 cv
3702.15 2470.78 3705.15 2467.78 3708.84 2467.78 cv
3712.54 2467.78 3715.53 2470.78 3715.53 2474.47 cv
cp
f
3851.67 2521.12 mo
3851.67 2527.03 3846.88 2531.82 3840.97 2531.82 cv
3835.06 2531.82 3830.27 2527.03 3830.27 2521.12 cv
3830.27 2515.21 3835.06 2510.42 3840.97 2510.42 cv
3846.88 2510.42 3851.67 2515.21 3851.67 2521.12 cv
cp
f
3267.17 1968.11 mo
3281.43 1975.08 3287.34 1992.28 3280.38 2006.53 cv
3273.41 2020.79 3256.21 2026.7 3241.95 2019.74 cv
3227.7 2012.77 3221.79 1995.57 3228.75 1981.31 cv
3235.72 1967.06 3252.92 1961.15 3267.17 1968.11 cv
cp
.658824 .431373 .541176 rgb
f
3865.84 1888.31 mo
3862.45 1905.47 3845.79 1916.64 3828.62 1913.25 cv
3811.46 1909.86 3800.29 1893.19 3803.68 1876.03 cv
3807.07 1858.86 3823.73 1847.69 3840.9 1851.08 cv
3858.07 1854.47 3869.23 1871.14 3865.84 1888.31 cv
cp
f
3864.3 1893.66 mo
3858.84 1907.72 3843.93 1916.27 3828.62 1913.25 cv
3811.46 1909.86 3800.29 1893.2 3803.68 1876.03 cv
3804.63 1871.22 3806.62 1866.88 3809.38 1863.2 cv
3808.72 1864.9 3808.19 1866.69 3807.83 1868.55 cv
3804.44 1885.71 3815.6 1902.38 3832.77 1905.77 cv
3845.12 1908.21 3857.22 1903.11 3864.3 1893.66 cv
cp
.490196 .196078 .337255 rgb
f
4062.64 2039.6 mo
4055.45 2064.61 4029.36 2079.06 4004.34 2071.88 cv
3979.33 2064.7 3964.88 2038.6 3972.06 2013.59 cv
3979.25 1988.57 4005.35 1974.12 4030.36 1981.3 cv
4055.37 1988.49 4069.82 2014.59 4062.64 2039.6 cv
cp
.658824 .431373 .541176 rgb
f
4035.56 2070.04 mo
4026.01 2074.06 4015.07 2074.96 4004.34 2071.88 cv
3979.34 2064.69 3964.88 2038.59 3972.06 2013.59 cv
3977.17 1995.8 3991.86 1983.34 4008.91 1980.23 cv
3996.2 1985.55 3985.93 1996.4 3981.82 2010.68 cv
3974.64 2035.69 3989.09 2061.79 4014.1 2068.97 cv
4021.32 2071.05 4028.64 2071.32 4035.56 2070.04 cv
cp
.490196 .196078 .337255 rgb
f
3959.25 2434.57 mo
3959.25 2456.61 3941.39 2474.47 3919.35 2474.47 cv
3897.31 2474.47 3879.45 2456.61 3879.45 2434.57 cv
3879.45 2412.53 3897.31 2394.67 3919.35 2394.67 cv
3941.39 2394.67 3959.25 2412.53 3959.25 2434.57 cv
cp
.658824 .431373 .541176 rgb
f
3888.22 2435.87 mo
3888.22 2454.38 3900.82 2469.94 3917.9 2474.45 cv
3896.54 2473.69 3879.44 2456.12 3879.44 2434.57 cv
3879.44 2412.54 3897.32 2394.67 3919.35 2394.67 cv
3922.9 2394.67 3926.34 2395.13 3929.61 2396 cv
3929.12 2395.98 3928.62 2395.97 3928.12 2395.97 cv
3906.09 2395.97 3888.22 2413.83 3888.22 2435.87 cv
cp
.490196 .196078 .337255 rgb
f
4014.1 2351.51 mo
4014.1 2364.63 4003.47 2375.27 3990.35 2375.27 cv
3977.23 2375.27 3966.59 2364.63 3966.59 2351.51 cv
3966.59 2338.39 3977.23 2327.76 3990.35 2327.76 cv
4003.47 2327.76 4014.1 2338.39 4014.1 2351.51 cv
cp
.658824 .431373 .541176 rgb
f
4013.45 2345.98 mo
4009.15 2339.96 4002.1 2336.03 3994.13 2336.03 cv
3981.01 2336.03 3970.37 2346.67 3970.37 2359.79 cv
3970.37 2361.71 3970.59 2363.56 3971.03 2365.33 cv
3968.23 2361.44 3966.59 2356.67 3966.59 2351.51 cv
3966.59 2338.39 3977.23 2327.76 3990.35 2327.76 cv
4001.56 2327.76 4010.96 2335.53 4013.45 2345.98 cv
cp
.490196 .196078 .337255 rgb
f
3429.51 2546.18 mo
3429.51 2565.94 3413.5 2581.95 3393.75 2581.95 cv
3373.99 2581.95 3357.98 2565.94 3357.98 2546.18 cv
3357.98 2526.43 3373.99 2510.42 3393.75 2510.42 cv
3413.5 2510.42 3429.51 2526.43 3429.51 2546.18 cv
cp
.658824 .431373 .541176 rgb
f
3429.51 2546.19 mo
3429.51 2547.42 3429.45 2548.64 3429.33 2549.84 cv
3427.48 2531.82 3412.26 2517.75 3393.75 2517.75 cv
3375.23 2517.75 3360.01 2531.82 3358.17 2549.84 cv
3358.05 2548.64 3357.98 2547.42 3357.98 2546.19 cv
3357.98 2526.43 3373.99 2510.42 3393.75 2510.42 cv
3413.5 2510.42 3429.51 2526.43 3429.51 2546.19 cv
cp
.490196 .196078 .337255 rgb
f
3750.17 2650.37 mo
3744.65 2662.65 3730.23 2668.14 3717.94 2662.63 cv
3705.66 2657.11 3700.17 2642.68 3705.68 2630.4 cv
3711.2 2618.12 3725.63 2612.63 3737.91 2618.14 cv
3750.19 2623.66 3755.68 2638.08 3750.17 2650.37 cv
cp
.658824 .431373 .541176 rgb
f
3751.29 2633.44 mo
3748.85 2628.71 3744.85 2624.75 3739.63 2622.4 cv
3727.34 2616.88 3712.91 2622.37 3707.4 2634.66 cv
3704.91 2640.2 3704.66 2646.19 3706.28 2651.59 cv
3702.98 2645.22 3702.52 2637.46 3705.69 2630.4 cv
3711.2 2618.12 3725.62 2612.63 3737.91 2618.14 cv
3744.65 2621.16 3749.34 2626.87 3751.29 2633.44 cv
cp
.490196 .196078 .337255 rgb
f
3746.24 2643.34 mo
3744.41 2653.67 3734.55 2660.56 3724.23 2658.74 cv
3716.19 2657.32 3710.23 2651.04 3708.84 2643.46 cv
3711.42 2648.73 3716.39 2652.74 3722.6 2653.84 cv
3732.94 2655.66 3742.79 2648.77 3744.62 2638.44 cv
3745.02 2636.13 3745 2633.86 3744.6 2631.69 cv
3746.31 2635.17 3746.97 2639.22 3746.24 2643.34 cv
cp
.780392 .505882 .635294 rgb
f
3276.57 2332.59 mo
3276.57 2347.8 3264.24 2360.13 3249.03 2360.13 cv
3233.82 2360.13 3221.49 2347.8 3221.49 2332.59 cv
3221.49 2317.38 3233.82 2305.05 3249.03 2305.05 cv
3264.24 2305.05 3276.57 2317.38 3276.57 2332.59 cv
cp
.658824 .431373 .541176 rgb
f
3276.57 2332.59 mo
3276.57 2347.79 3264.24 2360.13 3249.03 2360.13 cv
3247.45 2360.13 3245.9 2359.99 3244.38 2359.73 cv
3257.38 2357.52 3267.27 2346.21 3267.27 2332.59 cv
3267.27 2318.96 3257.38 2307.65 3244.38 2305.44 cv
3245.9 2305.18 3247.45 2305.04 3249.03 2305.04 cv
3264.24 2305.04 3276.57 2317.38 3276.57 2332.59 cv
cp
.490196 .196078 .337255 rgb
f
3289.29 1948.32 mo
3304.53 1955.77 3310.85 1974.16 3303.4 1989.4 cv
3295.95 2004.64 3277.56 2010.96 3262.32 2003.51 cv
3247.08 1996.07 3240.76 1977.68 3248.21 1962.44 cv
3255.66 1947.2 3274.05 1940.88 3289.29 1948.32 cv
cp
.658824 .431373 .541176 rgb
f
3303.4 1989.4 mo
3297.48 2001.53 3284.63 2008 3271.95 2006.4 cv
3281.75 2005.05 3290.72 1999 3295.39 1989.44 cv
3302.83 1974.2 3296.52 1955.81 3281.27 1948.37 cv
3278.16 1946.85 3274.9 1945.9 3271.65 1945.49 cv
3277.48 1944.68 3283.6 1945.55 3289.29 1948.32 cv
3304.53 1955.77 3310.85 1974.16 3303.4 1989.4 cv
cp
.490196 .196078 .337255 rgb
f
3947.1 2457.21 mo
3938.24 2467.57 3924.6 2471.46 3912.2 2468.39 cv
3922.27 2468.59 3932.35 2464.45 3939.41 2456.2 cv
3951.92 2441.57 3950.2 2419.56 3935.57 2407.05 cv
3931.31 2403.4 3926.42 2400.97 3921.32 2399.7 cv
3929.11 2399.86 3936.88 2402.6 3943.27 2408.06 cv
3957.89 2420.57 3959.61 2442.58 3947.1 2457.21 cv
cp
.780392 .505882 .635294 rgb
f
3229.31 2325.94 mo
3232.02 2318.74 3238.51 2314.07 3245.68 2313.32 cv
3240.3 2315.14 3235.74 2319.27 3233.58 2325 cv
3229.75 2335.16 3234.88 2346.5 3245.04 2350.33 cv
3248 2351.45 3251.06 2351.8 3254.01 2351.5 cv
3249.85 2352.91 3245.2 2352.94 3240.77 2351.27 cv
3230.61 2347.44 3225.48 2336.09 3229.31 2325.94 cv
cp
f
3266.37 1973.47 mo
3261.52 1972.14 3256.2 1972.35 3251.2 1974.43 cv
3239.24 1979.4 3233.57 1993.11 3238.54 2005.07 cv
3240.44 2009.64 3243.61 2013.29 3247.47 2015.78 cv
3240.74 2013.93 3234.9 2009.1 3232.01 2002.16 cv
3227.04 1990.2 3232.71 1976.48 3244.67 1971.52 cv
3252.06 1968.45 3260.12 1969.44 3266.37 1973.47 cv
cp
f
3449.56 2557.42 mo
3449.56 2571.11 3438.46 2582.21 3424.77 2582.21 cv
3411.07 2582.21 3399.97 2571.11 3399.97 2557.42 cv
3399.97 2543.72 3411.07 2532.62 3424.77 2532.62 cv
3438.46 2532.62 3449.56 2543.72 3449.56 2557.42 cv
cp
.658824 .431373 .541176 rgb
f
3448.49 2564.65 mo
3448.5 2564.38 3448.5 2564.1 3448.5 2563.82 cv
3448.5 2550.13 3437.4 2539.02 3423.7 2539.02 cv
3412.53 2539.02 3403.08 2546.42 3399.98 2556.57 cv
3400.43 2543.27 3411.35 2532.62 3424.76 2532.62 cv
3438.46 2532.62 3449.56 2543.72 3449.56 2557.42 cv
3449.56 2559.93 3449.19 2562.36 3448.49 2564.65 cv
cp
.490196 .196078 .337255 rgb
f
3372.53 2533.29 mo
3371.15 2538.94 3371.58 2545.08 3374.15 2550.8 cv
3380.29 2564.45 3396.33 2570.55 3409.98 2564.41 cv
3415.2 2562.06 3419.31 2558.27 3422.06 2553.72 cv
3420.15 2561.57 3414.76 2568.48 3406.83 2572.04 cv
3393.18 2578.18 3377.13 2572.09 3371 2558.44 cv
3367.2 2550 3368.08 2540.65 3372.53 2533.29 cv
cp
.780392 .505882 .635294 rgb
f
4101.46 2104.99 mo
4095.59 2125.41 4074.28 2137.21 4053.86 2131.35 cv
4033.44 2125.48 4021.64 2104.17 4027.51 2083.75 cv
4033.37 2063.33 4054.68 2051.53 4075.1 2057.39 cv
4095.52 2063.26 4107.32 2084.57 4101.46 2104.99 cv
cp
.658824 .431373 .541176 rgb
f
4081.86 2128.69 mo
4073.5 2132.93 4063.58 2134.14 4053.86 2131.34 cv
4033.44 2125.48 4021.64 2104.17 4027.5 2083.75 cv
4031.27 2070.64 4041.4 2061.08 4053.58 2057.47 cv
4044.37 2062.14 4037.05 2070.47 4033.97 2081.18 cv
4028.11 2101.6 4039.91 2122.91 4060.33 2128.77 cv
4067.64 2130.87 4075.07 2130.7 4081.86 2128.69 cv
cp
.490196 .196078 .337255 rgb
f
4090.83 2115.3 mo
4083 2124.45 4070.96 2127.87 4060.02 2125.17 cv
4068.91 2125.35 4077.81 2121.69 4084.04 2114.4 cv
4095.08 2101.49 4093.57 2082.06 4080.65 2071.01 cv
4076.89 2067.79 4072.57 2065.65 4068.07 2064.53 cv
4074.95 2064.66 4081.81 2067.09 4087.44 2071.91 cv
4100.36 2082.95 4101.87 2102.38 4090.83 2115.3 cv
cp
.780392 .505882 .635294 rgb
f
3456.52 1821.51 mo
3459.28 1832.55 3452.56 1843.74 3441.51 1846.49 cv
3430.47 1849.24 3419.29 1842.53 3416.54 1831.48 cv
3413.78 1820.44 3420.5 1809.26 3431.54 1806.5 cv
3442.58 1803.75 3453.77 1810.47 3456.52 1821.51 cv
cp
.658824 .431373 .541176 rgb
f
3441.51 1846.49 mo
3431.41 1849.01 3421.19 1843.6 3417.42 1834.21 cv
3422.06 1841.44 3430.95 1845.26 3439.75 1843.07 cv
3450.79 1840.31 3457.51 1829.13 3454.75 1818.09 cv
3454.52 1817.15 3454.22 1816.24 3453.87 1815.36 cv
3455.06 1817.21 3455.96 1819.27 3456.52 1821.51 cv
3459.27 1832.55 3452.56 1843.74 3441.51 1846.49 cv
cp
.490196 .196078 .337255 rgb
f
3553.89 1815.5 mo
3558.23 1832.89 3547.65 1850.5 3530.26 1854.84 cv
3512.87 1859.18 3495.26 1848.59 3490.92 1831.2 cv
3486.58 1813.81 3497.17 1796.2 3514.56 1791.87 cv
3531.95 1787.53 3549.56 1798.11 3553.89 1815.5 cv
cp
.658824 .431373 .541176 rgb
f
3547.9 1823.35 mo
3547.78 1822.28 3547.58 1821.21 3547.31 1820.14 cv
3543.88 1806.38 3529.95 1798.01 3516.19 1801.45 cv
3505.55 1804.1 3498.11 1813.06 3496.91 1823.36 cv
3495.4 1810.7 3503.51 1798.61 3516.19 1795.45 cv
3529.95 1792.02 3543.88 1800.39 3547.31 1814.15 cv
3548.09 1817.25 3548.26 1820.36 3547.9 1823.35 cv
cp
.780392 .505882 .635294 rgb
f
3530.26 1854.83 mo
3518.77 1857.7 3507.19 1854.06 3499.41 1846.25 cv
3506.65 1850.86 3515.69 1852.6 3524.68 1850.36 cv
3542.07 1846.03 3552.65 1828.42 3548.31 1811.02 cv
3546.84 1805.12 3543.84 1800 3539.82 1795.98 cv
3546.6 1800.28 3551.79 1807.1 3553.89 1815.51 cv
3558.23 1832.89 3547.65 1850.5 3530.26 1854.83 cv
cp
.490196 .196078 .337255 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.0.1
%%For: (PC ) ()
%%Title: (pinkexp.eps)
%%CreationDate: 3/24/2016 3:52 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3Q=sde<Q`YKQr3%bP/S9MZ_F2Mr=j$jN4(*i&gIPcWeKT+B7dJ*X9*#ndMuh=ZoKdEXI:C3?QAlH7p=2j\IUS(1^61uJ.F
%27'B"R`I#ffCgu2D)rQ.lc,J[k2r8ep4I7oWl8#8h[#[a]hYU@FM!6-^")AMAdZ<NAnK(JV-j/ELS.slrL(dZrQ7..a_b0Nj]Xeq
%[lOu5Qa*k8(E,g!pe@)Y;$Zm?jj)7SK8L.j?B8\cIA?Yoran>S,aIpVs(O\WX`\t2^K52.^FZ$mDTe>O*s?Ffr]m$VAct9goOFa8
%SG<&/:QCj"CXL2Z63^^HAp2oWl#J;D"qpiIlB0tW)\n%P16@g#G4?50lPUpWb&R.KMAS^I'l5I3>4f/()Meb'TOaWA#n.jZNHX.H
%"h\H%DIflnZM_JuQ`r6IJQuI+aa/,Bg"*R4D.aj;i30_W2,%"/?KU0Y/bjBEo/uNC5tA%hY1#J2rJ+FuZqWJhBV)AUf^IFEcC8FJ
%7u3@?Sm7/D<]-fhTQ(4u]$H;(J<U#5)M`e)2!>NS[d&:B`+m<B_V\\m)r(@qTT^4'[iI:9>AneebI[!X);R!:N0Y3e9uLg,:<(bB
%E5`eU,D;XjafoE"K20;O*=&XP8*%27WL_V/X0fa(K%;s9m*r$iR6#Z6Q%'X2XIK"JL&]YE$2@g[BSHd)qGCZK61A'$k5YUNRaja*
%JT^29CS")18\:YP3`Wr7?hcSFU>K"EE5Br&(,`$JdIEbl?HM*[UV1uGIba:sqX(EI8aFYDo=8W%368`A._Sl<<jnIM4oS2`(,GKo
%))I$g^I!@qpS^j<YI,1Ll&aii"<%"c[H4UNs/0R,4-c1&gjq".21Gi'<]e^6XI#g)]t3+n3uS#@l>XB/PCE$.:N;`")"c[_lB>nX
%9k`Kl\B[qN=&_`gP\-l]>4Y&s>ip6VJ$qE$=KlPua6Y]YV[)BNYAuPVXXa8s*Uig;1D0dUZeCCX+hu$A#4?&*RN;ic]j<efq!GCk
%-'Rfi]4[PL<i[;7I`_'+8BKca-aZPR7PEs^GFK5:Mkd9Z_ZLO<PAMXk[&DMd,LMS$1eNRk;RJtFC;a/cZHg:Y510:Om5Ph8*rKam
%\*CA=,O.EpZ:@!S<iH</^Uh*$'lQ.3nDl4>dGRe4SlG6>Yk5Ot_6TW]R\VNG%f3S>&F[kEUCA5"F)^9N"3+/>o-!JL3[2,#PZu>S
%GQ&/AHo!5'2EQAq7Ug?p1]O?*oG]'[:/t0218ps@McoYo=7?(Wl-:C:GQ,ql5Iu.LISBFde1?&bH5q69HG&I`d?CK+5YmN6P#g/V
%1emnGdppa7dUNTQ*ete<GkC(\ajX0&-$m_4WoH<22sIShRiY(Dl1*uZh>'FalNOu#Qfomi"9iL]-9[Z'e)M8t4ZO`_:VeFt-)3k,
%a3ZkIZKNIfh/qoObT&d"4+EVdZYYp61gs6/<5l.ZbFutaE`Sd'JlT0MoTTZ(JI0^hVJY#]c`tS7Y]KFi:J\eZg;Q.'fHn.'-kcGR
%G7;M[GE2&MNpCpbNrS43Jl?b`oTYn%+]GlZ-;EB>/_B.*EF%1;8OmfBDVcu7^S4qQbALH+?4^9KH;)ZELF2"XpXI:UEqJGChh"qj
%VaO<@8(o!_dXq_MF+c4i,=_b*?NMWG;p;fMGe%'3YF^@B>f[Z1;kg1[UUAD=6KWE>GQI@^4Z<7K2!/ZJ3;e%!KH889$L0(g;kb=+
%q6GD9r:-"#Pj(P5LnkYG3n&sPe,kN4Qte1H)G*#RH9a]PL?Qb.^B,g?H7Ua5aerZ_&QOCbKON57r$Nr;@LA;Ujs`@7&Y4L('Xccm
%_^OOgMMp`E0MS9(1SR*hkmnI6'G]g\RO*:&]Yt#)+IEcNd,LT\Ql`pAHGi%B7n&VnBi7j*`K]UTPaPH`#AobPA`!4b)iuLId\b:h
%>^dr8L@eUKI55q;$8j"7PuJ(tV11n,*g)=M'Imf2<*B?W&u>q(V>)EP<;m&dg(CILq-QOh7%m#JTMe@d9W,JuIm_Uu8@>,A,h755
%QO,mC@s[7_GQ(F'>DT4[IOjsG@cFq#;H3%HFAHt:Ih*u-ED7\;Ss".)o?SZuFVP/SLk"R^?\/1ll#0.gI_eUD1!BSR`D:V#/jo0X
%R%oE6Zp7DaPeg:TX(mJs6O%DG=^B`%*^=r,'9]O3BB<DApOL)EmmOh="1',-0/CM5M<8Mr17d`gb**grA,7f5I>;&C>L['7QFte.
%G\o(/DPHrg^+ZC%d'fb=6:BX@7GgFO?:ioHCVstJkSk5-;\T][02!ok$NW^?q66Z4r,nCH_1u<.LS/R_E2*/i(PBRN2\sVqnOTf&
%o4+9S>]OCPHBDo)jNGc,6^m1Vbc$mb)mlQ,d`mS@>7?+Zq'=e:&+aY4cs0--&V^5-s%RKoimL==dX^=_SBubaa*?e0"uRL1>NJ&6
%3_sd?(0K=R]2F^^*9*Ya3YeG9U.=W8\aqqL1:5e<Xr+gtYfe.VMS-9;Q5MULV#iIhdR5qG4!sD5\Q;B[Fe/71#WiP+KIG\b3X:W\
%Qtq=M4%ua[YJddR8om9c6qP@&RFh\=3i%"lA2Qql@Q6CT17P_:7r0qf-kqPm;P?K,&L:Q)U.))E6e`qX_S&bs(/+:a9=-ImE(EQq
%l.R;7Q?2tKl>cW>pn:Dg[eKkbJY31Q!g<_Ue4O:un/o6^n9Lr[1^4X9La6eZYR(]s[KM/`6h)^YeX#GK(%GW3$4*t\&#,$F%E6To
%)_2QM/*_?X+K,FJkV>:IK!\)<k#jro?k7no6?^1sBID=q#<O90%UGr">slZSe!>[&F'0G+fEn0H#7SI$=L^gK-n39%k?X$0NI>]N
%Q3P'r'1$>kU_<3Z!mAn0XdTWh6ehg-<cTB)*/`)K,SXCFKXCGTHJ:!q9pY/lk8DYnQMl*[<B[&j#<DqV:m:Z'PUb[sb\rC>PPB'V
%q6<;OAeD_E`3"1AgVgj`%\^#cRCdgilYYe^#.,B0o7DX*R22PgW62HbE(PMO'?Cf=[KgME/8'jAC#rIgE`aMgZo\]Idn"C%\Q*1"
%%[,%Gfk.Qc#RsX=40q%#dSf.?+*t:=*SQnsb>B:C'a2Hq2p]q)AN<I]ZOK=I_+,c)8hnGPUSoQ7TJBGh;:1N%Ul^nTLn6qj;D^i7
%`,nFDP-.-o.^3)-WG@U0@L?$j``,uJmCC<&Q=ih50r9HP+>,7C2.M0fb,i]X4X[*cQg'JYNqU3/1riS9FB9BT4%4FPmS'LiORgOf
%Gp2R+qOf],MZ,.qJ&;tFJHk?VUqr-"!>t3GVSc%T0gU_OL_aK8<:n8=R&!4:nPY5aUreuRm6Rb2l&r$/l&mGOVG'FJMD?j5k!eRJ
%5bB8L1s\rm4^Q&-,nCEpTU"Gg7RY][2[oL*mAg7K^.?4Ed;OJi2hH?iekEbH7(j3"-91'?h1cm^FK6i3),Vu$45LO@9[IUo.4*7$
%@U;&[Yp/=qXQ(&JWlZ]-H%B<X]n0E@iKt4bMND<\Kb![tQr]1IXr6fT*#nTC^)9j!k`k_d!RBp<Em>'*1SiKe9#V@,HE;s.i1CRd
%,P^G%*;"7mC1cUgnf;m9Bj"0:W#rsTFO,#EqEX>0k&=u`la[oc$Go7bRIdB=l,#b$2Ij:#=p]h=FIQ5a#CRdiFS%50RI=U>NhmmA
%RC.lL>_>7SKGClDKPd`^*AuG("CYa\2f+;to#98K(V9:B%:KQ;rcmpUZWsR*&=?^Z5%dp\g\[Q/=065QT8U)a6AU*Rf/5dpA`j#-
%e=6*jZJXtjC<-9Zcs=^D;8le<it'b@SCQoT:=/&?H=g`hfo(?uTAD6r3U+S0Jp)#TZZ8=%2GXQ.rUfE(<U237SY#LDe:TuLX3h?m
%MG"TlcC_LZmjnW!Wnt79a_`'[lKpD-86c['XdT;4<#QQ,/WSR4E]L:Xl%F6i8*s4T2c+j+:o9r#;33/Vq.m9%plto6?P+j@c#_<X
%@^"ZLmam)'-+G!0ZIQA(LcQUc5l1.m2#E9g9$dMTUtKM)b2\'[Mf_*aSY4`@V\*0B`GpIXC`W._]uhb&PQ7]+ooLtpAuPuLO,]uH
%2=#S(Nr<ilmK>cN[.D^"R%a@*RE[,c`)R@R0<0WAl^1.Nl;t1,=I'6_o]q$D[=aLsCNWOV9jDgG1j@=3G:LG+bc47.5E18E5_!ND
%3kq^Q8+HFA3:sKE(J_R*EZ.E)mIH`Y_(+L<'3H[f-^hB1.5uh99UdJDc:kd:.5sg@ghp'YUuRZ4;Ld5sF`30mQ\'k6N4G?2pD]+&
%'^j&1/N:#tB"$L=QCHQJJ(+0IDjN&B$Cp@cjmp76TRLkB='L12MW!9qILE6JF?nW!HUg\#FuA%V3LRb6l1V-ri+J%1af!R[PL[\W
%f5\Jg8lGUTF(_"H^o$#XG&)O_58q,TesfU">;Zj#XH&DLVL]m"$`s>ro^+C'goGR<dLCM(m"QtGlamS[<:9<<<+-d(Xmg`jJ"DY.
%>6a04YBh,ETW0q/79`Cc8is!Dl[Gc(=1cukRVA_g@["%tQl`t.X4cn92hE]#1+r?"j@OIjSJ/aN*)uiX'KK!<`mar"(a,(!r[<s+
%0/3#ij/0>I92!*Crf[Buru%U!BVg;idOejhDDD,r)u+XA(jiAgZaZLN_mT.6VK&8>_m[u4VGcZhFWl=cN-O>NaphW72i.i7p<$'u
%c#^3>a/!^*'Op$KPk-$.(oT8DdRjVZ-j*lX"u4L0bdii?#%OrI8Ah@Na2k.U:9A`k#^U1db#9T(Dd0ID#*OGpARiF)j4c\/_XS]k
%J'qln9g$*Jfl,nUd%-hN)?>t"WU6M=BX`%GId8Os=['/CT1d!4[k#Y"ct_,&SKR]'MYPQ:Vtg1.*84N';Gc;IHZ;u(L"i0=,dJlE
%XQ*3EIN$WC.unC6X#7Ntj&Xm%[jBQU"Un=Nr$9O5gd#,(<U4LEg1PYq8.'N!JS)u^ND2MS]+*!M2P$C3F"h4G]`(!=k\\Be]a`^X
%7D*2Xp@l=L?=o]HI#>7<DrJP-<0T9)HTagskL?'j5>IsV:CI36j_+Hh/CcsLgHVrB3%]_patG0aV/U>gcMV91W#l.bI]mB&Ds)g$
%j!(o0'L(`M_frB-\DS<kT9Nl8Bhp+8q,kLNcl#`$[`M=*3DMk@;kk\8!G5N29sN8dfDS<lpHA!?mAUd[%A14)&bDM"9.,2SHKN(7
%1%=^ZJGE[n"Z<A@d5u+&=`k(Dg@XmEJ,(kCEUpU@%Kl0)`?Ze"^SP+l8`(P&%ei`[I30oN3n(G$;ZQE-n+oW1D'pd=_G4k=HFhV*
%qY1iUYQ*ke)PmHC;J=DFUa/f?F'Kj<CX'XjOc3#SB4\!+-Drb!F^.1S!nP5lLWZf$CVAHJ1f2.k`s#HML7SN"*;gNREBS]%ouEr6
%Vq>=rG]-\&GH.`'/l8V`TN'BF!$uE?$]J\uR:[gH.fDj:MQE-F>"_g9gZkT=E*I&CgX\c.JL@!h,E5siC1FY&r+<'nML:_=f*lQ5
%`GE`c//)S=%(+/ob!\f'bd=l5Ask'2jI].8=d-SOdp+1XFf?dS=XqSDUn[d2hAJ;XA2l08B9nHrah#]:;>sehV(`@U,T#QCBFUq#
%gZ7Ol<,PVe8fD*77G>t+;'sN<\L%@=G35Npg//O0Wc(fg8fD*7KuZo7/kW.OR.T3S>B<Xk[j`+>%5?8:li53Xbr"S4Uftq\E/ek?
%j`Fk$QR]mg[M%&53Q:VA`,D3c3+m32mOue$*>SBFR%lB\(a]\0BfnkkRsrA+@G,S0(ji?Cok(\WbkTmdpmOA+CFN(6j(gHb2WJRO
%_:M:".[d8O[nC!7Yc'@\2WJQPgK\TmXPG@;D8t+<>j[$0X!JuW7q7?n:Dui'T\uGsA>^mW386n]haYn-)l5g9C`CX-d/_En>/j0s
%^aF]i:R/haW&lVKN0qLhmB<1s=8.1brQD)>`raV;r?Y7gaT":eUG_U_N+oo:V:M^P-ai+#(N0eZFgV=d=%m`s6_a"Y5eDaEdWF6R
%RHAgWB(s`4rEbrY7+pp)RL-Qi7\kTHFt:hiQ7!p.F=e^gqQ"2kh\pp?s'MNC1;E!SaS7<JS)!coBr]SJHDfYM_9a2uIVu/%NDE7]
%Il_QJ(Xr0"A5V-fQqL'JRWNFjj3Z37+0ocAg8uuqY.OX0I-MgEZZ.aP63uCHEe+qM^@P4lR,h_Ldb"tu'JPL:q@14_`i(qrJ72D,
%df9frAAaL`=e1V9=8ACjn#R,nd]hT-P)_J2_G_X);d1qS,pRogjbpT785<Y;ieD5129A+iPCBk5n+=SKs5bd,B(=bMA\5;Dmk"H"
%-BMj.-(2`%BCXm:i*i"lIn(.+"N5dmHUJ!=f@Ei7P-^PEKR-<=h#B0gq9EH`Z^C3@j_%cF3_4O]p-A#MBa#r-K%e=<^Ddkj9sP1r
%Bm.dU(?:#7=&?*0rk';jHL:@+7hq=?\5kEiKYn8=VDY/Wjo*I2R3$(AEj5Cno=de_Zt^i@,,(5>U>(,`Cuun1H,sS=ZC-L7\tr#m
%=NoQ2PN4'[]tAQPh.0EY?T[WX6$&$m`*eR8=7*B&p9W>M#JIN?:gIjZr8u)1p<8"EN_SW4E+f%IWAXOc;/b_=+N1MH\>[bL!DZIh
%D^kWtM7R2?dhHS6Z>W*JNAWYk-k2/Q,s\Alm*h?bm@Zd.[8Zq&9cQ6[Hf\_#YmJSfq]MEr%K&^4RuC,n*G*7I#4GD=qOG*W`WeoB
%&&rqhA($b0bjdH0]Z_?K1WR\_nM50ubT&;99h>LIMfcT[0+@_bAr`3L[QnJcQQ%nj`[@a':S,nN304W7nMJc;Ug&&j`/RIEM)We"
%gI^+UE&dbJL+p5U!^i%?ZACE)*)-3?'5?$+dP%(\"2jK2M6Y3fht$W%$-sHYI/-mJp%J=;a;EK%3)2.pRrmUK]8:5WK]DDGV?n#u
%ko'!/bJbE(_G_ZuB/_O#XrEaGYcb=eQY*][NJgJO>=Sp2I^Sk3lm4Oh/!gt+Y#G-Fmadhtb+BN9@-WfZVg)'LFVNFFaL1eYI&*#3
%L(nQ1j[t`M4XQbI[8'K.5nCT$'3%o9jD!B?]+!a"U(-U9<qgbU"-^/K\+O=c1CNU$=_P\!k,tW/ZQNQ9:fMF>&l4m/_"k<;9pJkZ
%lAZ1=fQs,pnbY8HkHR:_/?BNgQpuiQUC*V'Lbqa%YF-JB+tNbAk/Wi5RqCsa)"'!FA#+Zak/Wik96]+`r613Vo4(JJb09c#1I&mD
%pb?/,p\\"$<AR;D2T2"Z3e!pgf3bq#C!rA[]5%ulF[$Y'.fXNIcc"[(eEf,;C%6YL3c:Ih4LUMHiIIDdgObosK3kZ])<Ci=E!`2o
%@BH,9Ta#7m$TK`-iqfH\^DiD!_2j&lXJ@T0L?_Pi(!^]ANWeA.U7p7/6aM]*r[0?;9#KSbs.5q;h)lnuBEIVadBY3-l-sLFYtA15
%Y"tU1>)bAUQE-i]4FW@?j!N@^r@Z.:@D?m=Y7kQ;:8d$P]DX"?>!;+^pM[_:A=TgVRiV'g3D-J&'VX?cKWeA59M`N,/0'[>S]RJ6
%Z6q6g.h)e[Gfj)+&8l^/=782XCtc`4.2#a[c4Q++R^qFU`>,TT=+'Pue5'_cggo)Yl1i0?RN'RjR9=SeC[Q]&RS+e2B@bk^R[[H$
%Zh1I6+JlSM@:mj1m()"ec_[;MR5m2^k@Wl3bac;T=_?f$$N%lT?05BAE2L[GHe3"4:HO"D2ES8,-Gl'Q(:V)J9*`E&[c_P_$Q)d?
%d^'<!`c'5#4?u+WYCW2>HR3:uA'XM-R)41r`X(Ae@:&uZ"W???7b>b$O>":R4g+[Io<jN.C:4"4XnQTgQ#!MVqc-GPV,m9/7<^3<
%m6*?(-m_")ZAm!L]W'[T\'DURQEkD'(nH8&kM0h>TZ\.0(2aq,S*p%4V1(q`6,cWr#Ro3((SR[U9"g1hct`,Ub1#!,__&k3h4J>Z
%%e&$"lctj#@eiRqLDu0[^(a^Ch1"P*Y68QrEj5DaJGhuGUje<heB"KY0;cGE(S(gV`SU4d;eu#("j`p3j'#PH`P#)6S\CqBG:2[9
%$RB?4A%7`cGH"BW)GAQHFOB3Hh`29\!o$<Q:8^":K&4DSNL'QY\!fT4c0&Q"$!-E0akf:h]@^Ykg<EU/s$>3'7W0LM?'ehm*)iCW
%78oloc#f\0I3JoR+&'(?FR*3,2gf!1KZfnCR&<(BX#"TGN0nKqG7)014t7nN>RXT#?jl1G<1O%,`;!_2ZOW`_+rZ!JQu!Vfn>c(7
%Z7<Ufl^]nb<%fqm.LCCT&pMedW$bq9en_r^^GaLn1D>c^bg7\B32V78dY20L!C,hc0b"OIiAg?9GiIiE%5$P,Cn,t-3/o!?fujRI
%<U'<B]Pr2Jj1!<C.Oj?mhViOfhC<t)ht;0[*AGs0<d1St-CWaH46`9JiDXqLDO?du*\K4:H7o(/Q!=hOIn[2l_MZgX&gq"!D,T]f
%'cB_ED;!HDSXlhTg17OHgSGqHegiq5s,"7*m\-Vp,@gO->`u@^6DL%F>;CZ"QYA#/m/E?s_iAg4:[o_E[k>/X#)_-:gcJFG,XEgZ
%5TTj4CRf<3TO\D\B&\#r8Fn%ZWRRi0$^K^.iO&!HWE6$:P8jY+]fufaj]Z;Urf9WTiLYOhAp(#g4/ljj"D&G.[qXZZ"1?1n:!3EH
%AUc2_aDE-,XHV$e\"1`$B4No<1)%-hRH;JX*5X$4mL_GFps&4uRPuZh+O/e)f>l.c[#*BqDgVb".NBNCWpsiP1Y9ZYX2?B)\U&[9
%iVZu-SY]HfSeTB*1kQa]"DKKt-+'FFZPpLcM9@Fa*PH2FpS\nBU1RPnkC_5e1\o4b5@1bn2cp!e=7=Vq?%/[[9dj([*=&![Vr'Y\
%m.a<T2!AIn4&qa0F['L!Y6D[IYFS::TrK0B>4iX,gTR,Qo(1!j-EAI]5R^EN2h3eqIXkhU$l:mG8Eft9:#g_[kMMoH-\'<^H3^ql
%]M&.lA[D&BPJ:O)c@7$an;48q+jtX)AAW]eT[mf.K;as!fu9R;bmD^C+!pgV-Yn'hXckK,[2ho,*t6bA/Ge9ASn33>5o>W"Tg\+]
%ZFNB49J?!$LMjuQWV=0sm0.q7:1\nfH87RM:LCJ&oa^r1O"E[C=)!8V,n;\*d^'/],s]-bB7#(jkk+u`gtjcYE@ag#%#ei2#(P!A
%?)J4)->ZW*FT0`Q[I<fMlo-9H!JpLM!Bpa<\F[aIjYGW9^Z2AkeBe.'LH`bHrQ;\9DSGUn&4caad(boCLre'VHheL-&a20KTP]9t
%J8-]G?<6lk"A:k6Im!MV3,[9oec/;5WhIj<,H+0M>EsYi%%F!K,94rKXb6j#C4%%`]Mst(bEr,h>0'S&8Bh%A](q[^)'t:)NipkY
%k)SRG2S2IDrD%S(>#g/(j+hDEo4U&<_66duW[?ENBs:QT<R-54DaiZRKN4?c!l3i"'<dM052hdl'$VC!]iPV:$:'g*s%T6_k=E-]
%@@K>NLPd!t;5n_.R["pU+l&S:XSto>(/T31#TdqcqV>JY0`gY0\!#rif7u*e)+sc[4f/-:p<CGHH!:78q:r-TgcbIS!pFt<3-hu>
%X5"aSDJ1*AfFRoV'd0E$"Yn=InIjjO")$>bHS'39?:`;(LgN_9IaFC'9bZ-qG&?6JSAD#:,[<*JYCl)n4E-n.Y6fc:egTEj>m8Po
%X%0b?G&YmamF4n7GK',`/iK.821kY!oKMmDVC+`l+Rq?%o4S7i^Ieja^G$Po+&D$J<I%/6d9NF>d\WGTcnmVVC:fc@H*Acu[-F2Y
%k1JW>Du8)3YgpUMddXm3_jdRYDY8bMq=RoX]?"i#ErB;pZgW*b6)XFK@(:N#98H7I6)N4Mebrg9+\e!A=]O5):#/e_c>@hE^XG8^
%q428TDf<tcRF=oMJJ^"?]K!?dC&@:jPNgX:rHaub)RBrRkohP6p,b6d9I&)f<':<$[Of<74Z+rJ[;.::,)=%C<KCXA\J@>J[j1Bk
%hJ?3;>Q#Vf[af;om5?[&@2l?]eIB3>"i'l^miKF"&d-&?Fb4MXq&*]QK>2`#;RP*IO)+DlmoMVS8WW[n&6-JGh^5hSVsW'-RJhY,
%VQYB_d;Iq2,@;Z5"oWVA9FKV`R^Cd2DD.4CBF*&q`r`%u62)oS=XK'F3$F!cDR.B%^Xjh1?.2?&:ip]+gOAb$n"0fP]iI3uK0^4<
%6]"Iq^^>SJXLF5gqL6fZf=M.&-!DD!g<$c>Fl#DUF:croq`UD/G,sWSJZLJ*\6No?[0aR?ZW/!DS,E3rAf?E<L_B[MJ/F/+5MN2-
%0Y.i5HU.lq>kMhrK2('T7j*Z:?bMj$>u?r.2c+d+GZcVfoU)34[`\Pp4^=A`e-."OI_B:dBUP'?TP3N<CX"!N,<EPldP%ZTm<)Uq
%OV3cBfM9riS%W![33(lLF@Gf&DBp%K9^GhLn:9kJhoEIRC^31WqDC'FLV'kb1[)4)edi"0@YQ_dU;KC6r0+?ZI"CM.k<nN9U9%7r
%[>C$]Z1/Y#Vc1HRpQC@nR=fr-1[8R3?Ba%O-P_aZ+f*QO<.jH^A=ZkKe`mVC/s>#)fnuKIe=&KCQ#WLBbYD!:oc'[ZN1M1)G84m2
%>[#39XD&/[)@O&#aP:8+kU@qPm#OOFfA0FPFYJuS#-&]`7%.@WXs;WOb$2E>q14eF6ZmU.al?QZ>hV9L!NJun10b9G0[r^O/6Vdp
%C^nr7JM((S-,*?>_[*l7<+GR&`+Hp0pXX=B'ZHl9S-D?>FLWqpCZnaLeERTXk]DFmVZ9t-[<l4q*ttI56\#Zu@p&\UaDXO8dmj$s
%!g;k1%&"ci1Kg?c2La%7hJ/Xh1'niipCZ4$T[!qOWmj,`7P(Q/<N3?oK\[^!jmG!+,Bh#/-kCG0kL/XdC:;ZlOeD7u;)*f@T$SfE
%CN]UiCCZ\3A+k,'#'"Y@e*L5+8n#L8R2.$In[Y6i[qdMn]EZf%V-U;&\q65YV+S'UXFgp_lB*unj?"TZUa<)=m1eb\'s@\3IG-[,
%P(cCu;Y@V9nN5l'OYBk#;3I,HR^toY]im(hWF^5<12+182)kVl9Y0+N:A#Ihb&rt!SQ>X!3oC`1g>:H3lQhWYXrS;skHWpTTO_=<
%7dK+\>:7ZOII1A,Jj)E1E[ThF[7=89pmq$EcqI?eNb=NLEcNLnmA#kW03bPc_uF8DG3>[O]TW)a?FPD(m7H?De`mdW!ugN;<K:j&
%oN*Vj2qna9I@(4?f7H$hh=DO'6H*Pt1CUFd<#=cENrZh_cV[-D(-Ld`=()KEJf`G+-I"3`a//_D<HBeQrI;5]K8P$B2&`LGkmUe(
%_AZ;EoKq(?'pX:h[%FM".'9C_Wfk00H;n!JrWVESZC7n=jXQ;.27cj@5M)k-LV-8I27gr[iKkTT)tb*gA>kQ)'GaRa].(Z+=$,Y*
%.p#T6XJGLaLq542);"PNc,a7:75ZNtY*.\%Us_-Xh;?Fh[Rp^-Gdb;e%p8Hkc.\^h64R>1$ri(JY95_W7nb&4Ot2N!k>rc];7"e7
%]2l='Y4W]^qm'LKS^`a`L\/6-T`1dHFJ/M[2^l*alu\'.]gUlFV>)CT,@J2Hl"Rb?W,AdKAHI:bl5QG]npXGAeOra9'm882OA!9T
%IMV>9[Co0^NGDkCV;%R,W>UuN\=mg.=]n,,F:G3e;VuLhOnD2p*!lCI:.&!]ef^7CHA*]G)64<McVrCil4@%C<n8@cbB]g9dP._i
%j'S3`LW"=J"KA*n+Qp@)"!:"hkZZR_:3P2d(DU6-h/L&cC]`-Hc>X5FW!;)3C%JW$`MLTFZ&80ZfdGBFo#3+0qH_4=0"&B6@=uds
%LH"e+=L$J)YP)$oh[;Im5u]XnA_Z\IEluJ\.OMQ^d,?T_:n&K?$MudB2lk)85Kl/%>#s9j)f?\]Sm-3uiBjSrG^shlU_mnj-D6g(
%)"#=?!QX_nDKE<M1:qDqfZb\9/aA_A?EpT%D(tE^ZJMf%1YK_i]9[4klqTcYqX'4,Hf4o4G)2:2g@ZRIjJ>GfjbA;%qoq[2^Woo%
%)0+5rkOi_RPf%se0.bM]eND/#>s37#aC,p_*.Q`g/bma2aX*.=s0Pe0pY!i.FY\G:*aZ!]A*UF;7m!hbX)cd*2+[TCfp$c4(Wbc;
%IJsF'qTFO)BEAj/@4fE>R_:k`4CRf-Xa9A,(J>$!(ue2]$#r/G9u1bkBO<@$>'1gT8tje:Z@cnm8lMa\e08J_.PNiZ<++G]`n\B%
%Y9$[a-Md?"3_^i8:^jo<StA@:$!SgjDD`qtURTMG`:@/M@AXQ:NgOtc36k'^'3H.QGJn+'51l10eR7/a%I*")S^t('g\-+#S\IUm
%(Zj9<C8?\FhnTX/+c$5NP5W/,g,9pcG*kgI\@U4U&PI*iK0/9=e&9D2AoAc1?Y.!*:#mmTAR^NB@K((cc4@,PBoQr<J"<?OABXnY
%`n&5.gBg#iKQB"eHe>;TG0"!:2l)F>6*Y5?U!7!igG5%A.E&BlQaLF=e<lSKG*8t;\[2P=4a5]XGn&(=.G,9nlBZieA)%6B[iGl(
%Q<[QU!M51&a/bQ8@<-hn#alX>]*^2m,'C,0>*aP-e(!SliHPHP.Ui04&3AT%2+G.8haZj,lPnf)W,6"`=0;[NU#-4fch`X]VI-B2
%AV5\Gj%VJj*IO653aLkPO66^kEbuq3CB!^]=FGqVG,BI!A<^RI6VIbX=#]a6=jYB7rLXW>IPV)>CdEBpPS+?E,3*n;@r+>^M.5-H
%9bJJqhl^cSd.+;?5LUt81.)[*OEqsD6[!e@f:&+2;msjp<5PI?%30N;$qS)"[EqbsaOE1(_p?h\g$T[)eGOKZPQiQc]/]%L'AdI>
%ff5!RP9[-uLs,L+eub-\6FC^.h`Sqnm-JCW)QG<Q:9Ar(,<Mu$P-`sSY+ZN3H-de:ODL^,,W2+e18:qndoEQ^']$p]\lpoK`#L@k
%&kPTmWukXgq\lEFJ">>*E7P+DX3jh-GfA7a&]91ESf\4@NiYm.!<d8.WhCP2UNM=HOjo(AWZ(,\mt0T/[G]B`m\M#$^/p+!cHr*+
%f0WCoG>QrGEigORZW4_[@*X/.qs`(oqR\,9f)58808t[ubP@.CB&d_#[!DC7q<l]/UI*5OFs#@TSsSg@WuGt8TC/)m<jt:Xg=b]^
%.o*XNn$mGU2",3`\+mX]\thLA=SnP8]Wo3#mV[,Rl74^8`nL.B:0?gN07Wirp%HD:)&s?*:S(UEg$GK_$Y+$T5L=pUYroM\I,+''
%^OO@p+.&=7NRi83[rp%Z>C:2Cn!AspK6R.[ogeIaR,WtriqUsY*]W#5oChjTcagq[p?h'@PP%tkCoj7q^MKupZ]2r`dTjOL^KE^n
%@2NA5Dkuq?:VOJ_o(A"=qpgo.=g)f,HkZZ"q=_$p&_fN.et5*O-Te%oG7.bR^UE@T_]Qk"lIOehZMXSdmU5j>;bl>c?gZ;rhY6ib
%8uZ:5ShHV%7r.G$3TK(-rmfH+`Jqa02s!BQJ,Js+Mu..&Q&:'O:US0ianD,B>%fG#e#>M*[T`S)U7/:34aXQk=o@($D'(n<!<<ln
%em=ja1lT-Ap<,q.=aAM!I'U)ei\Wh`WB&6rpVb-q.U-BPHrWR?<f/QAD[CL1UVM.fB[tX:@E#-5(->=SQ^<;Oh:ZR7(d;c^D%sG0
%n%UA)Gnt:O-uOI=mltq%XfmZKDl]L2p#GpV\DO4/3<JHErV/RBjcfYgIbb.,T'"?8lt&VYDl_W]pi:k^\Dj\V/Djb2fYK7"Ie_(!
%E"s9\42/18ns@=nj`U61rE\ZaXC#'ZI?VA/+7q.Zi:ksbe#0#g^%gsdM<a<\PP)?KpK(^I25;$fJ%KtV*/84i?URif&l1g;5M8Q/
%^uR9:DSCA6kU($7bd9Ugh^c7TiqLFOai_dK-/X4E+E&@:H+j3iGk<h:GZO(jp)[1VEeh4,'$*(?52<&*eW6R$hk'Kc/4nhAT[p=0
%EGo_XgNahmg4r`!jIfI`PZ#9q_W'&AC[^=6Tk>:@F<hXZk0<WRar?nsfc,!TkM7q#-.f/>Cg+Zq98iV3pN7=BK:jSh+/2@[0"Rcc
%eeXnMkKCiUaD3H1<Vj&$eRV0GmGld;g0sGVmdNZKIhA/;X-l5$\GGYUG>WMhT(XC5b715H^[D?fq1n?k_O8+;Z#m(L5;!/2cB8t0
%4^!\T+u'_(@s^"UoKk7VXY5/SA';U1(:V">^>]37<S`9LNL.33YPF`0iT,]nM3l95EhV4^^mt%[FkFpim3hA^cL'K^PE5P&L\IDL
%9nJ+nGm(auc1AJr`d5<.An,L%X7'4.k;uqP6D'QiS*bRCT!u4A^)Fl1g/b\*;Q+_R2RC]j:ODrTrN56;>\h1@_ZoMmr<3bccJk$(
%+('\rSpi#XB$d`&gQ+:?8(C)si7j1L9's`J=a"cTkdd6GghE<s]KP'@b9coUHQ$LE;(I'T0[_R*[9i+ZL\C"[>55g5Wgs*6(llBN
%V=$u7rUA:2D;pgV*p*+]mDm=pYPmY&$6P\]rn6=JmcB4V-4Q0sk[B1?NC2mfDINF_Tbn=aNuo-5Ef[pELkP_Iq.SaT)$<26\/EZE
%ZAs]h%7pO7c3GUjUA8:3X.-6>dUD5D+nG:fg>_QC/3\Jk)uOL>?tlB=W7>3U!Sgs[3@qmlq0]`c?Et@A=,,l0EDtFQgtA(<f3`2o
%XOj@pUH7hLg1,3amI?(?pO$U\*.NC#1EPD$:sp.$HnC0!_Y+0t4XE]::UK&)opJpN00G08T$f<FNFZ$A_q."1A:[tU=8QB0IuRg-
%E:[ar!m:)>X5*Plfs-j$qte^\FpV1"_4a^J-,jQ!4DMQe4-IKh^qi2mU?On%>-)]Y9P9FL`010Xe58t9#*;HE0eFO3&7oY4><E>g
%0oRDPqQ`uoCPXfhGqb%NDR>.*)3AJc2J$ID:*Quh](S0O_?$Dg)J2,=9tZ'RY?]u7M_VRO1sF<Ua@<sHgc5JRW#EUq'8A%:b$@G'
%DoS!6@0RP?l",Nljg)s!o;;jH3GSIl;;.l-Ob,JfGrpU.VO(`6<R?]Cf+SH@n":4::L^8"H1s),%W,>e-:6aV+\3ibX:FsoCiDFh
%\1R_A1hsNYnHM\6c+qakNJWuP!u\XB[`ho3`P%(e85`I7PSohCDd%61-?1?Z0\/Mk^h)$ke'#6E!uL@PRh6mKM*fpB1]l!DhfcuU
%/q9$W&AdYaDmLh0cG(;j&:1m!DZAei,q5?;gI(NVGPLlCZb.I"3=W;T[s:ATZ0(G,`mT?"[pD8`*Br=^e+W2^QJT?**m1qQ#72Cq
%Td^D>;9=,,B\3blW?J7RQn[BM7g@5]]`!Y._M(c1bq3Sqj*!FqS3M87<l,tMMekT(0Q-31k*20u:<__@B0XW$0_qId\)0;mP<7uF
%2+ie]/+\D.f#o#h>W];Qp(q309TH@Ml0q2\[ufKWbslDQN<.grR0r=t&CuL=iiH/:m,snb0D:;W3fh$]ej7T-radVSo%e*Fct[H:
%k0>ot]0SsOK\L[A7/?"^A6NNI2D))?.p1m=9agUU3,cM608h3]]*Bjo]hbG%Q[TXE12c=M5$`"WNAQo6R&%,('.SNrLA:Z$DRoQ@
%h,0m>h-O5GC!<-2lMFZp>+U1aSGd11ZWiI?-DfZBeA&q-JY6"]\'+9F+%M?DVo@-HKkGFZf>c9XUql@].\&)>.'1pi5$:nO22J75
%;rsOJ5?j/MAam(f3p]#m-(n+pqsZ@W9A3H(R[D2FS)`I+8ac+4fR$q[i=VOaK=4'TWnr$jZ9TO4(X(]rSpJB#&'bJam3Q&e2pIoP
%IUCu<pcN*)-qZ"D"+PZ'4F+9C8R/l4e/,,2\J<efKh1\Y'DoB?n9iabElqb(4MG/T2>c;'3NqCr,d>#T@-*U<<46/p?ghhC1`mX>
%PTuk$@4q<Ne\U!\EM4<M&CZ$mU#qm>O8$$KQcJLGOredAkTA-U2MJK`G?5TQDB9gPo^sM'bF!^G5MoTh`II>%hRooYb'_I+lVHrg
%5=>t`D7/)rCQL!KJFJW)?N`jW-):Lp6Rr?*<H8b^Z`b1;^%Hl.,9/``CG.p-,89\8mU54i\V&/lG?UI`*IZtm?'!Tg(ZEJ`?OoDH
%-i='kg9\,'T3'`n9e;Tbq<Cm#LY^BU>9%R_]m5i:37W,OIW+VL^\9m8pr<>!,HTJ(o&gI7VXo0qimkrL%f"N<jjqO%\e.fi_f-PB
%HV:o/N<(EfeN6p_mG,V=Yo+Nd]8[I[_)=I\6'iD]l>,LUohf(DqVfWXMd<4L"sj'$:2Jtgp<abQ'Pm<iIaKf\pT)IVX09707l'DW
%^/o1fPW+^qE4PqB<@b5b?eYi`qC#H+$bh&l9"Sh]S&Hb4S\BG[61X@;`pQc][/kF2Q'pOs)]oCBqq]][A,@Mp_IDd46.le:s)9nt
%hu0LUSNK,#h,o)4:3IrZ[l!WgA,)`@`RgG?f[%,"KKN=9[<XOjHPK`%O))_-]t;NML4+R+]T4h]q!rCe?9Gsn[_@/\P4.(VdZN,Y
%;EQrj_EhF1C@1Y7ejf(+WNoT4(t,.C2tM.ZS@GVDcfqUFHCI"OhS=U4Q7l!_I=@rtm.GFHq^Z#SCL>m2>4m*#Yr2oj8'7_W.mu>N
%O%F3ar2+kKG.'.gWrDW\K3%j@m`(<#Pp$&,lda=la6h?WGlDkXQ-h?S:HNsnA%=_ZneQt/'?Aj3HJD"9E\Zf[bP?HO4!C=Ys(FW&
%h>OR_f(R$Ni)DjG)li25Y?R&Xf&A0[e`u[cMcDqn(H([AUN.N^cZ=k1?f^P@I94maIag8VG@/sId?;`9!\JD6j%8A2-e^]%S_X5'
%`fH#\EkbhW4k](;XHr$sqjID3Zgb!ap0"1Lg7c0!en^OH`N@;^?J^(-pF`QHfDBb`QtW\Ho.Q\PHd=pCHV-S)$^i;]HYK[sI#pE=
%T&0KV3ihXaJWutaj1$V=%\gFrTEX'H[(c$;mKc4p?92EgfH+#8jkSY/LCXm;8,")H&;5t694,I..dXUVLsjOSkrA]fSq^D(=Yr>(
%%M'Z<*?^b_>>`/ib,M4N@p?8"nE]6L<:]s9\WH\T]&UdG]S#>*d\.Dd)<H7Zo3CN6kBQm%T(stq+>EE@a=<8Z5&@3PjlY!"UpcDV
%G51daq8W9[2SqlXH;f088KU7tr))oOhY_?]c1<<Tbt"a@<VkT<0D!lC4O!WP.l'mmXlK\n2d2<(0Ams!J1]eF=V)[g\;sYKhL/C1
%porAn^&0"QM,BnXHrVb!)rB".`.R21:J?94r&!QUOsRTOSQUe$)oXudqd"U"qHc;S?IXnRO)&gnp:&=n3EL.U@istId=;?2&6sW`
%=SZ3Lq/UmPl>ZUcKB7,FSBR=$F8P^K<IHf%K&CUeIT"HSc.d;VX179Ck:X!5qVD9^kK?%+CUX"YlQ.$O6T]"1WPA2$]V5"YB]5H$
%jh$S?"PL>(d)a[M#8uE45<a-%r>La[(Sh)s*'.HEnCP\8:^BkU@BDZ,e]<#KT3pD-(\`(_b&_E`prpA.FMl1L1uh<0Zm5D]lWkJ9
%bW,q&$T\(XHt.Rb]5[R"W:b*C:?Kl%X(5JjD"l7sk'[/&Bterl"[#3^j%J\jIH3hi*PD;YoIpO)H%"Z4nBsM=UDHoIeh;*HZe`Yn
%e*<qbbL@UOKi`/BaD_*8,7%C)^$$PSIbpULr8J@:SG*\^He[X86in;<=?kb@-gT.Q`_J8#Ha]LghP^'FX8I3NaX6DrS0L[:UWtU;
%[D8iU<H1.u`LA-S8RKFm]tCdq0=LI*;Hct_\#Un<q3RRWEi#17?[oeN+6pChj7\<d.!>FDBteT5rLQiY2P.C-7,'M`2a#;GA)2@[
%?LR=D%f1,9MZUo`'Xo!g0$1AGK;Mb[bMRL*][9p!mclhQ?%nj7pAN1d4B+.BYI.7W*OhUn?W6F_iO^`hs4c,<Ht2\T6=r`PQI&3p
%]m<Jt>ta5Z%/#q=J/;UIJ2oWaKm`mp#H?`fY9G.7bk-8FdJNLPIQPW?rB-K7A<804GHTA]GDVl&9D/5Wms?"mXm54Yn\tER)=c3.
%)0sBTr<@%2V;B+l]A_*i&73%<YMHod\Q'PckC+/q\!27<pkWHmV'2#Gq*i&rD11,C+5.JR1o.QZ%Td"c4mnZOIFT:01a@n&InUL)
%P9?KZ#2&GY'6Dn'-^#55kDL\ug\:*lbMJHR;*DNH3)&`*dOD:hpT_($Fn#GDV8_E$0c$2^.1)lD1ESbpH/dZ'Q(5J>m3*!k'YQ*u
%rC2"irOq46(LMV*KCuGBi^K%H_)IRrp.:`5alaCcom$4>g?*)7OnJDFH24E5A\#JD-o`3*kh3UU'XJ,5L-:^N)p;kH%CidUq9_A'
%>WP'm]do[X%r4P&/7N'3s,$rgA6EYM9"Z.bIR#<fE;"#E7le&fd9bYnp031+7,.\a]_u<9i1Cf-f2aBH\krf,+&B=;O\:n=*73P,
%-pq&23HmK1%pkGok$Sg9HQSfrDpMM-`I<ibS$,BmH*gg-2fh&+;%FK6kA0D,8o5I2ns#Nt63"/--\Ft8W&f?T05iG,O_7UmXqjeH
%XA`+Y]WX#kd.\lrhqJ'A5Q.j+Si!O"k5;"ImF'FLr*='<2e&++j,9`'k8KHUoZ,u.`T-^/5&Ip0cSn'.[D+H6N4.+>lphGZ4H!!k
%SM->ugRZsBT92J4N#;93+*jGVjAON8chB\)lh6g]l3_C]2bW6m0i-Bnli![>Mn:??&dDLL/aTr2:3%m/b&c=_l;6Y@APcS+iQ'DZ
%nYGhhOW@/_3kc?lcb&Zr+)^eYmB='e*uE_""HZONW)W$=qs*T52\%u\l,?j%B^+pL0JlWsLS`R`-m.g>>N,4Ur!5$!G@8ir#AnfD
%fD<m#6-@8dnOr8erIN=>bR.BXpht@c'FYi5Y=U\0.6lOV.mIr?Fq\"TmiH"t0,F"\aeA%6#GoT5;O,]DhW`?cET>nCXSreG\b,tF
%q%m[RmH\dWG?AgEa>0l\+hk8Kk?>Eh*7%CR@a+#d2V,UTaZIbL6W*c%qF-0Hi1Rfh')"erA$8KDZ*mC]%qqr=o#&`>G+@i^^&-0'
%CYLLWVtT*?LQ?cGmW*d<XBG3<Gc1!k1th'%9._e([C`%P@G`V"Y5B\_&!i\9nu]NXa+@!>`]Z']hAgINh)ZpBs*K&>3b1-nGco,s
%LoO^mM^QLW0?P/Y3Q`=JYCbeRG7q)miDV,p[6$^gV$DJj0-bQt_f)<l==Duh^@TDCn``AP]?-Ii\PDV!40@CV'f2m.Xsb[$*Dt'?
%d32.Vmg-,?iR\.Ert@c_g>NEqrpa35DXaMHh):g_]R%)-k7;jAZM_9SIMKG3i#>`<p_$Rh)2X;f$_dc'^UC^GMqIWjVtFG?[F"1q
%K?h2<XnB<,X*U.W^"*&Ff5&K0LCCTFa&u[D!Cnq`dS>f]fIG_4`/SLNIqqO-heEmdQ+Z7,W;?,HWL')`p[?@!r6<WJTj7Pib$3+/
%mMU<+pMjQpL&C),g,])gnEJ]d8`SV_J(C>57rCBH&CBK,lpD6=?$9'D9)?rp$tRlBY5Jb=c?p&0kBHhnFD\r]-UT[b1j\RKX7`,A
%ptD-e3eJu!47R&;k*gqk]"4,gl<pDq<qLl55$D`tAY`Qe,q&*O[s%[-\#eQBG5+P5XQQ%,0YpXM;[A^R\@Q,52eSYHTY?3sS$n[V
%4<*Y9FH*As)0X"7G#fh_SZ1NB__CGY.9nfA>%UfK_Eaf+=]l!u?*cCMlZ`mU)NL"=2+,]WR[`tlQ^^)3DRion(,f7"c)a4Z+CgdN
%<d,P"h<?hj,ZG0:_B^jdR\lS)KWAa-e&_rd"=P"RNgJ9IcQh:@oC@!a96H]5CRTE9cq(%s3*`CLVO.QfeI3@g,U#co_M2Qg);Pj,
%f<r/.=nf5!K;srlp,mDInTBh+\frZS9UBH=cbrLO4mNH58+Q;Rk#"Rbn?R]bT$jnU?IkuFAk_$SRN<"#&_]bg&k5:?12Y^>:)F+V
%&UkbDA_7$=lSs(-P1\s&KhDCPiFGK8Ae!"M:_'[=S].!dW$=S9!NYOt.4cedc#]FA.WQMp\l9\\A2"b_KETWL*!mi]E6s>7'+ou\
%Ah8^lTa=#@d^#:JNZ$Y/6'"&6l(a#[KR+'eU5[/@92aWl(]l1;`J*O2V2r2\,UA1,:m$Q#(ppp[rG#HA9\XT14I]qs$L6(#Z3WaN
%7m"M,G\A8+[RE93Zjd#NEtg_Yf8PQJkMoDa+YpL1#c/:=@iAKE,C1JCd3u(B(_.,E\5\LpKLhO^npE;'/MJ2_D/'R*QZO7sU"6eS
%.h#Z'X9!.k)'2Wrf<dZW]&?J,-Yr&?JSPlFF^8Nk%C2F>b*mtcb;P1-/F472$sL(j%8;I4OR9WN*1bH66$8_t/OM/9KiO@pNmcF5
%ZtWP0#"?cMSqR]@:A!KSdYB?pJpnu!M#[O((_1sOM2D`MF@/^V8/@X^.)_J]S+`aglb&InA&o8jH^FFj0a_+\$MXX%GAM(:1Mb]$
%Q=2jX9)q6^&[+he731)"e.i87-B>qP$.5>0+e]4d_][CW*Q"A@$R1'7:uA,NZGS>94MmqMI:<Ik$5tcL\tC'="iRfb_i`2WQdSZu
%7;/DI_sK#?!i'F\Ga1ejjIJe#pKXp*K@(i9>""pi\VWIIO^(S(9b\5,d*^,a`deL/66[nT!W[%H-d\)?>L(^)B[*N4pqHjd@VV8_
%m5:V0h9mPaM&fMNa2THm_\j6@O]L9mZGIoT_7qQfj6D;!;RU:%K@mh.bGKn.S$n!2OR3YOVa=ie%Va$Q7g-)YjQD+QFTTOt4>#9W
%1_4K%'4*L$8-6sl4IW7b#?>5;N,"f56e`$>giRYkORQ'363%Un3jpn!!4[jlcJ^PTKgQQ*XXOPEgl0VK&8b>h:!Y[j`]nGt)UG'^
%ArnPFr\Y=W))*Y+8-fZIg9%5>,"jl1&VS4"f<NrSOLPri9"`e%TqE=hZCsYaPPCe;9N5C+LtrY-j(c",&`p62_c:BT9l>^q5[0-S
%2<K"6Dh3TDj)i,%FdkqA`<T5J,tUQRqBP?o>c>3On<qBkT`pUqPTcQqe$oMi$#uDjqGB,5'TNE=TWZ?cj10E=aljf`QCOoT9'1CZ
%P!/-<e/klA7[B]q9dKpqB1hO4C!nW_Ke7ka*IOMs-8]$8&nS4@Xg#lKE#of9U7p_#biOFjYR=%F&iACU!KnUZ&k=`l`R0\K)1s;!
%g6^aUN-6VG@.(1WXTWWP'*JB;/3j;60/TO_g'4oMJLb2()Nd)gM"aamE*ItG:Umd+7-mbA!0f"gd8%0%4GspnC.OhO<`d@s[+D8[
%qAEt2)UeVL%;k$(E')AjHk;U"E^0Um*["bi<_-Up$.6C4*8(bt'#6Rc0U^9eNBUIsPVfW1dB^%4ZN-U"ogcFm]oXXMf"gFUYV:."
%)R0eX8rfRX83.0q6BGrJA>+VE6+i9`,_V8L1GU5&M8984<'p2^W!"3XAI,W2UWJ7t.LtupaF-_.SeB\L)HaU@$fMpN+^n%Y8gT.4
%U!"/r-71R<(Kkj5Dd"3uHNW&^KX[^b9o0!DDP2ZmW2iLK)C33W#SUZ"6r]O&#R&p$1=$_432fVV-C,8[6p;M%+hOm+KaA%kGXT>I
%\AX&b&?Mij7%@4ClXd'7TL)gsBHdNC)ke;Sau(@D(OZgj+O;hp"."YYd$P:t":-C(-J!b]RLmC\/J<oKYT<*t#X=+_:^@(fS;6#)
%Ke^j!k0sf11L`R8Z#(2d)O(g=g8Z=D5Zj\9]7S]a0P-@`U&nN+E)4iH[iI/*(Rg?NEB=]r2Xt`a:e[N!HO6`A*7f'DZ-c0gcrs*P
%ndJ`_BZ>40YF8:oTkIj$=Vi9Y8CKE+&4@[<qb>K=8QF</+uQ;&AB#1<M#2d=Fg*.TH&b0@ai$mZ1e<#AY(hC`/YGK(,BZgA^fSpF
%A>O-Ak;nnuN^rkf+act8941HsnQM-l1'n#f#Z+n?/J7k'*>Uf<9aJ.YC_kC2"n80d>6`g/KVA,HBN?`?;\O,e?:$^YA57FZ%=o"f
%+YAm&f_cm"KutR3#!/+b,cYW!+dX@\#FiM[lK9l4dp,ubclFZ)ni=Q<c,!:)!4,$o@Md%;B7[gKBp.uGrbWUD(6$dUisfahA5=JR
%C$cq38$m-mjuQ(?"2C;O&M3E;T`]'YTq@uOTcreok*rS483qp!T_Uhj5mce5cp2;5*CqKf-"u@qTMjJJ<%+F85mS.scmIZPe!?/V
%X?E%G>[=`nd&RVXRWM*eIjO)jSuE1>@3c/SP)?Q&TK:$AJ,ne/kaus:_A4T[V")M=Mq1c5D-B(G-RtMX';r9E;H$9bMp8QadVOt;
%KG7/-#h[5&FXW#s=YXc4lA40+:oBuA6,\nG93bf&#g`PX3mnBe&#p0Y1EPto5hDfA\rsrLN*togQ78jiA55El1Mpghi&A%6XC5P.
%*?CUi.hB)-[,rduQWB[n("FGA^omobZ0!g(H3TUH!=iWpWAtM:XK.KNKK4Z//PlkF2MA.?N"f?g.>&.H(@=STQoqXZ83>=+5Y^"T
%`AlenZtE3%5`ea`lDT^LRNr7L:jGKU*Am6ulrM;<4k>46.ICi?=:6Xp"u1HSJZP3m$$rlb/XI/k83AjM8ApZl9-lD^,$X3^0(D$_
%.AYZX8c]+tT\[H`UQGir;U)V;B,Qe^@-`CY/)kBPE"MQp&C(n^<<J/#R+7Bm5i[)1a<'=@e=_H'&m*\Li<-t4NY!rSa=<?bNXZla
%5q.J?,3!`1]EZc?W@:3QL.!7u73!1[(NjKaU.>mS)(=u^0=i\`8=O$#KcJJ?*t&bnP1,/Kk=MB-JU4i"`YKAab)i>!KslUk-f%/*
%NKPsqQ'f0s&m#":)hM/51PX,tW"?N[gag$T+=!8A(@XWoQHg6l=I0mXY3*M4LS2%@:&kJJ]0Z"=QHtiY,JK@j5ZAaV/K*:a>Ejdi
%i4sqnBsCCm(oB]P`s%icLhOn]3XS$*,cG*&JqT68Hq7i>fNI:>EN2;^eh'Je%W"b,odChA[DBQu6ub=;&8_*W*G.n"TS:sdV0liB
%4#W$4J7Z;g!Bo3\V+\5;F!)f#[o62QJ<g;Z$1?ljTuV>L%Jpb:/SXh`kS6/>TWRtpN'>\1PYDH^L!_9`TS\IrT+Hr()sihmWiH[<
%UYC<q@C%h'1A%Af400BJ-<o<;Z7DRYHVuDIjUl4JL:5?QV$=OIeu0q'D;&3il5;,b/.aeM1YD8Rl7_gB!,o_bTOt(]8^Ic9Bs37A
%&,pE;nH-]6X4.1(!Ac9H$cX5:jZ8W4LacQ58t_"@KKoWXd2<9qE''F1NYFUA_hP<=]p1.RJ-U8LYYc[uasP$[AM]0b'dIGbWKN/2
%>=kkSY/WQZAmn8Pd503ra!S>''1rR4kWuEg@=Y[pUU;Fp2O0s=T)mCG1jt_ub%uUT[tH3.9)=kt%6kV9KL1hG3ZEMp$p`D.P\c'%
%:E,]FZU!VK:WR3)GVLaX8JT7!ab2^.'2*($ZnlQd6'eei=X!?0O%h1K+P%("M&L`"?/%)md./FQ=&P%$p'0csUj/;$D@WD9!rc7A
%oL%sV4u'%]@>SBRZ=-Pi-D2Vdn/Bq]7bYsp-'H7,3jOdHCdqNO2I$>P*1.Li[g^&>4]2ZO[8,.;UpIlKP2)_">.f?!I^BE[G63^[
%GUe73XZ<KDP+H?l+m+$CQ4'MjSds(uA>0*ukJ5k^58BQcJG7EB>ghR,$Irl(*mB?qC_iu"6j4L`,oSin4Z;RF0IGYa?Dtn3%tTP0
%2((+E!"kog&J$4f_>G"qAqYmKp>QZ=9>^dm!g=LZ"90j^-QUa$4IMLgNCYHn@,-E7&WZ%A*%rFdcnR+q'S9ad&RZnWL.sC*#T!^3
%$^q*['R7C;2@(9/i3jp!83EqrbTN^nd^EgMR$Ru'$^/kjKaB]GBg;iq<EB)Mi6T3h^2WeO4ToQP!T(Y#J7._&I)Q)3A/1O-%%5G5
%!g=(ABF5"[QuZJKYY8^D"rs5icB/,@kT$&:<Y5B::lL6Z\t3Q=X2"f!TWI@K&J5pI$t[D1]e/IWVA!41Ud7fX!=;bs<muS%`iYob
%lI+`;UBhnM#YQdY&%]ZM&Ak>QrQIVKKD1K<M[.7c"uT8^%HIkpM6K7MTb,fE^sQSFi=1oik<c7rW!6T>b\n:e*cu5V&K1eH$:JG.
%MogEA#p<q\,hJ`Eg5rg`$!Ar>>h3S*+:XX#K:N7Df9D^`r"eeKF-MTn/sJQrJ!8J!]M1YZ,)M2KD-P[kYY&3Z&)?!kD)R4j6nVl5
%&`5=2M)sEL9b#5Vo2'6be!?H4$&1k7Qt7a>Llbp)g'2q%-t+?mftE-R+`0>N,C2fc!1a??4"P(YKdA9X=I_@-C6lgN,M3F%$eI-b
%,*T([Yd3'*,2rS94BrrND?l2BSeeG\a8RRJ=gCG/;Y<P-_Lue9Y]Yp-4YW4VZueG?ZHe0+@IeZ/EqPM>7PrBPnOPJSbQ:MLnq7nS
%$Gr.t+<i)E9Zk0ZNXgCG<[5[O.T&kIXFb[pgVB?;e1m3n>D".%rWHnF)B;;d'5<6T9VWXkjmZ%0N!-(ZL(k7+`D@#!h$tK_&*A'U
%!T8\<KsK,1^5Rdd\7G8h-A_FF)Nq,\E&AYF#2>6`:.qla'?1JN$2$p#jEXDIHjoL<(f*%aS7A_1#qcYD*8<1d"GX3ZTN@;N6\PL[
%;%mUt^cg<WD.$9t=I8CcXIP_/ltm4NOOS7jW2goIo->EaD")AQ=s62JkT&\_7f:+i,Sr0l;Ya%q_cY4dK-WW.,9aYDQ4)*"nn)nV
%76n\!A&K'Z`TA3Q/(-#KFH]_+903<nQnYi+BM,ZkR*S8<"H*7CF4$j]G)D0eF!4khX24]7H8q]q\5Pskl3$Ad=SB\A4UqV*n9-%0
%%f(&4,_WHXD>;!,Tq`5>g[$Ml):HEV6;mLs[dSq:Mp+AC9m^1?A2BC+?D`8*ToHjk'Qah3-1F2f*0`Y6%T*-P%Yl2MKCC$&)UP.M
%Vc09<NF@3rCS5)j?nZ:V;hb[&`o2*:`09%g80]%HD5&$^LKmTt@_1$m3UtpYGX=1qDL?#BS'\I.arFWNBRl=W`g/0,&"_K@$5/9)
%<A!,E5"g'FEeuC(RKarQ>QSCT%H.bO?]8W/?q36H)djh6k!GNK6rUD0J`2QB@!UD85QaZ$0PNL)(fPD2JW``e4i*^hGL;FM'\d3r
%%m`hcC;:df9,_lIp&gRU(hs?dfb!!J9ab$+B7&+9'n'1ToDf]4_8r!Q*/,;%?<\)+YV]CVABul/j24\&@cIP2@@IgMDl)iu`WO2b
%k9cW1qj<N[#82l91W0lQE.>1*S8hqUd+[QrX$i5r,p"=.5oRXo;4VnSM.nmnOU_dCj[!P2#Hs-BW?08a?;t5tRuM<Z@HHQ*b7YGg
%<_*[c/:eRoL6?4\Tn,1j+tQZYYk]]h:R*n[Ijlk,W_&hCD6XJ(8q9l0n:hiY&\Qm6\h"Q>[X%'"C@Vo_Ee?r4juG>`KA;3-Ll./F
%W4#*[_+s-35;Q%l`<^_C>8$U:_MU3A!qq_XP2IIuUWKPRYo-k^,ElM'p]97:QsYDXFA"MbYVcr/nVc2kK1mqK;dL$j(':n"ZSZ3d
%AJh^L#<tM!`Bs(JdbsJdIbpe;":p%!3Ztn%Y[k^8OXpOG,,!s=`b9\FMhr2Vd+L:PB+PmPGe'L5_`?kQRZKQ1,#(CZo@dciiQ-``
%lo_9PP2W>L]U-k+>SsH_/2=r)OF'AXL)1i'1WaMTegMMuB39*eY_1UoS,e*Ij=S1S:%gP"3:q;5QEKj->>jGBGRJ/=#\bG#%LG=4
%5R+S$ZpQ[<4fPg\A;f-BE5P4u3_IiUjF@>HP#Aos@@!RWj+@$89N`8r<sUe,N#65u:`5p0P="K<l>ApY/BAeK3(r3f[:--MFWc@1
%b=E%tNru[/4LYB`E/ObX+9Vg32@;PI)X*Li7^/.c`?SFgHQB/'9=>+CS!0Xm?ZK2"J8`huV@he/Q<jc-R4`.9n2-hVl\M9d'0,L@
%l_$M1%a[!O\A/]g-@R*1$r:b`p3!U5jZme%j$cAsY^CuEhL\Z7;+IQUnA^Z/bj>uA7_B0/>>fBN1tpp\0@Dq4(7i]O:N@lsUdDN-
%.Q`eNg9rTh1q\p_K/biOFn8;+\?K`L%8#I:J/Q:dV6MZ])ON-G0(j-jlZ!%IeuFu(0KVrrOWCDP&2R_5"+tXN+A3XSh[PaFOAj&r
%8*l(b"miOXAAO:fdjJ$]RLi_u*ZTe<ea$W5d^dWU&ASQN:bWb@M%IuO40qWa%R",-b@#6Ei<r3dH75e%8!$9)"Q:N)7n,R':<jCV
%F(=K+aNtJS&t#pI?/`HE"m';^I=q-uJ6%Y8,!m4$lpN,:^_3a!,0NGn9Vh3o-imI3:`fl<<7n!)@6hF[])Vjlc>^.eZsb>GL5f!X
%i>`!q;D#iU"DE`J_jPim7k+qWd,fcfP*rPHfO0Fab(2&M)jgoWJ\M]27o%4DmPU7F#bM`t:c;Op3^RE!'CZ.FB>?/0R0[M@:d8CU
%\Y^g$%pQnK=D5bh6cbP"?n!X#NlhuP&]KD;+MCVB3j:S;'EJ=2U'1dM9Ff6;<enISI*uO_OW!04&T^Cfc9r9YnT;m*Tk/5@WMeb9
%)Q:Mp<D&3Zk:Z?NjQRgAMr:u#R%).'ic$^oM$bS"WteRqn1P2^&$Bfj:e?JIiaMDI.P4MB9#c+1`/>+<-.*=CP<_Ip74IpROZ]NP
%UtKe$ggg:ZD9#,?OQ2,;<FJBYEZi1@2')%;nERhK)O49$&r7hHeNA*BiRSHb$4ETuW**4,_c*n0,ZI!iS@#gp4Btk&VPoq`<#EkB
%lKTRDe1cBrp(BUc1LOho9bT0]X(G,E=(#1NJuXqqPsY.>ATk1KgP?6'UMnO*UTsA!AYJ5WdR&#:2=(gN6^oh=)W!'O0'l6ZU#H"3
%LeVoX_D:1Z_U_,\QcpQB?jj",1q?4e$+kVA@Q_jn/-Hb3!Na=I`?bht`J%,nZ#ueDO=`aFR\!W[YbWJLd!0"s@5R__V[EJsgK$fO
%GleMHaFhFX,U257*J#?Y0;VBVZT!OcajHWsg4UaeR0BJ(P7gsG3$[$IF;:&dAel3"L[)[[*HgJ;+[eaU@T^L7#U^BfM^BNgFTFsc
%$W7:%i",8+\Bod(JS9cBVEroZ+5P?XHSm9M:-=t9ZC6;R_D)[/73tOXUI#pR+HdA4Y$=]_MaeqG--@)Q-Pf^?-6IAQ!Cd7)%9JQE
%#^TTb+K4YLr&5-!&TL(VEte0fPuOP?i&PWHL=MCF_+Ct1=&DO%nu*+VCo/ej,@sqb_JhVH=JFebEahnRE:-S!_Z3<=+%I\.7&Kb*
%17s==$E)3bl6q983)AC^k7;G>c8UO)Bj70f0Vm;@-R3G&)<Wdi8-E",-oc"3:L!&JXG&1rj<6$FIo3+!9[<F!C&cQZ3UP^(C%cM:
%&c)#!!@Z>mVS#_q$0:>0H00XQ]0(-WPN(ObAT,.@S$3nS@aMdW&;-K4S?J_1bMs(g!,[MS+uFEp!ccG$Fb0Yq7Qs'\1Yq.i$_^=!
%BG)/--GtsY1-F5l*T(h2iu>R'^*co#4&%1aJd7Wt6?FS;'OjX5o&th-cB%0%l+/WSj[g-*d)C._<[+H?;X<:lim`:pPmi:DlYVnj
%YK:8TnplBB%nOcHJ'R=J[ZW`q@6<u[$)O(M:38Z$D?i?HiL&To#\4qEE<ApESrZAaX=B9$LrAfhf2fp:KJTjtnpH+&7HYmd#En6p
%$njdd!BVr#YO[&DN?cb>GgZ<m+\tTF&e[AL+UFM,G_B6o<kGW/EBHQ?KfgAArQ*G"L)lnHJ9cjU3$F>AaO:`i3ZS5e*hA=A6OP4J
%U/o\+#VS:\iB$Mn#[!XF3l6me7jM/4Y3t=/nYt'.\:&Lm>D(fG\[BSr&Jl'oYT"Wa-lG%.X_F:h%U?T*LeB3Q(JhAB,>epD1Su4;
%'pXFs.e0JFTp.q,7:#HR"-?87@T^Je31O)M/VY\?l2lo:KE0PaY?6'*L)BQm%!EY5,+'@?XR#?V(7FpcE,[!PWMjWUjs+k'J]q:R
%d8aEq#NU&:RB*C\K;^.cpQ7i\%iCU3,gV_HMQ0*dO1H6a:]]u-'9eJ@G]<MI;J1joq-\_!%iuRX>=^m)[e*Z6M+TbGja`<'7()La
%>MN4`U.240cFH4O+E1lR[d4?H2b8.N7gr$iCeRSTXqjbrlKSG0&pDPB^p.T;a.QOBU6(fgrs@O7R3*:fXFkLA*0E3qa,t.\/*Vn*
%d5eh;X11QW=@jRSK>5Bf.IF,_\@<(]NX&N0.ap]./#jB0?1i:?63T@P/h8IA#U/!S(at'@Ok>sbH3@[f2Y)$RW@ccZN=.ELc&mJ#
%\<[=p(FRsk*Q9=>4DkuN6II))5O&Rpa$OT)*&&p/]5UejV.ejs7i1*IE3hSU*,!'B)\p5S-4's[QaBlUE5<9)EXJAQ)$/ihjcYKp
%3ji@^`7:*G')/1/U@B_<BkD'/,<kD56?j9W82ORNU8"qUX$j?$S?T%%!/CC\WN."!2NVQ'q3rk_4if-HAk,/I_PZ<TlGt+bQ*?.i
%;5Rk]U+VYUTgV%t-/j)@[8pk!9\t_SJpP3ee^ss@Q7u[1du%q[d"FOk_^E9,G2_dRqR;;tBpT>4-OQQ*d`,K\^t48HMPF5a+j7f>
%312BKTamFJ0#21h6o?fCogDl$M&MKqL4tqTLN)7U_R%;QLg^T.7MC][7?`eD\c?6]h;EA)E5[t,E9-(=P(gu?iFIC*&P3puc9$*Y
%PU>1qKR&ft3LXJ9jId[s)YXr2KEIrW>f_9Hb/@RO%sBKe0k+7Z\0B6LWYNDbp2g=%#rs(H5jAni6!0@@U(#ui#OuA9,JpLAl$0)K
%MonnuYb6U3Z74*&8!OK"+roZ?h1Psj=PPAWF(Hske.![dB#d9<mq<A0-`drs&G@geP_@R2'iQGDP6BEu][B=d_E>.qCU>(!ji/d,
%`F1Bm%qmR2S>C,E>IbZX2c[pbp(S9qj&Mnk-d*'4,Z?Vh-hLrf_^-9DnZ8I"0fWTC(B@DSc&bG?":j,#n8'AmUo,1r$<SK#^]@6,
%I3N^Q,"`TSk6dWo?<egr*!oBrYa_R6*"/mC1?A-pg5"L?0[:>l'c+$'6qo)0'S2sh\H#\dNrus4M+kbn!fG(KC+*SGN(=>"(Iruf
%7c6)r3ZjWk3'-K;nk>.a;'\jgWJP].QAuVn6:RXX`)FaOJ\OH]+<[qZ[[VugXrQTC&JE_?(@3[0O=-M,*7o]`E_X@N&kIL]7lj.,
%2.R:DTVCu0)\3/\e7g[KDnnq^kV@6/1ImNt-SH$m/lN9N`]-f:8#[(=6qd]+Q_gZH53H3tnt:tnBG6D"87)GhSo!Z/+`8RC!%-CC
%1'%@eE6IBGJ`F&f#gRZ^*[Dpm7:r)PS<mn4;:(.t*on1Pc42aC?Du.X#:/OOo#.tJ))?P-_m-=q2#I%V%WVOY:3dCuYhNc=U3Xi.
%cu?Ra:Oor1+GcgH%7+%uOHcJ4f!%9gTd,Z=a0VI:+_n3-180>al&iB0_]B;#[<Xfr^LX@?D-A^^N4=mU2i^PrN,0mfMI^/rUjAtj
%8$:PVZC53B+cu%^7GS.?TRRF"5^^jE7Ns+L?q1rX1N51tQKR=j"bEY9$=V&\X"NFRT$8uiU`EQRe9O$qWQVpqe)U&ei!d&Qo'.\H
%!3-',H@Rs`E"*N932+=EE&a3(Vmg*iA$I#A-NV\eZeD3A+V.,rk`_23OTU=q2K5CY:RT&E%nQe&]kJ]Bms9k#0MfUlD,X:H:*P6/
%D+c_hnHkO,:581-O/7TeKntr4#EY=3Kd;.@7Br95q;e'(a;aJWO;uQ:@l)f>I@;/-VsU?I\4F7T_[K:!do0u(81V/0,(t:efSi>3
%WogU]8Kp[%l,Yl;%2^Q`%5NO"&h7mW7\RiLB%0-5QEEfW>!ZaSfq9oi=.-!,^4n!EXN7d%-?TpqF.$P&QHE@HI/nl"+bAC4[dkR<
%;o'tcQPUB)C_`r[NhtuV`BZFQj9V.4r,:_.0(VLG)Xq8LU2[3Mj(]@8H)-MJO`=/5qO7Kb-9YC!8!,ZeP^VE[*$1s(j_7a7#otYh
%1,PQJWA7%a.ncb;,<gpJ"^<>8EcO'_QJdsJ[QJ?*\XF+"@P(j1_Q&d8A$La([\A=`/pOgDoiMEdo<*s.UX4'>))X:UBEDKrAE@j?
%^1YOY"YM`%1'\;+'P+MS$e!urB8!(C,iP1G1AS#Lc6j>h'B0X<<AAnI:2#$T!;")O8K;`C;N!UjO`5tuZiQd551m<G)LBKhQ<=qT
%B-4@%$YD,kZ%?DG9nT#KA.UG53@N1`)fU/`,W[;]&8109#hZ&F[Xd.8QjnkZ>%'+Ud#=@#cA/69S-\HhQQbU`rIo;B)IJZea_Mg1
%Z;a#CBhLsTAb-KG@M"VQnA7.m<B+IQ83=eR\^1Kt=EAa-g2Ek-@=Og;7pNso>]T("F#j5\Hr*P7);mIiZ?pQi7b:pkQ&p\^<Lr`$
%d"/u4*(YIs!G^]$E^LV2*Zq=>&OVnQ#KYsql4!)%5`',8o'Qt)d_%:(`8Kr9>hE7?)1loaY+<'Vk^toI"$N6V_<0a3[_0W_?L>5E
%f8X/pL=A1qJQ3)r<G5R+4,=N=QQC>O&4(tP&r'4a#$?8_#k5W`J`A<PU(!u*>R+n=E"].Co%)n+"N^GY.2G+n!=q@h7p*8B"=L]q
%901$3buG3)H%1\mSe'@SY,^e&9V/jF'.2\;o5$'`=A*7_+BIXGogd.HZ><?/QT"osneMRt8I@M!FI=@?RZkeAAp^sKF!OPOi<0O`
%$6?]UX+E.W_Mnct_;lRI"1JVVU-B`piS-e_o&0$U2EfhCS?.D2c7BCs*KLq::`+SC)Y,_QEtLtO1Wk#!J:D*PnG-+$<<4<d-\kBc
%J&=OS"6P;.I[##M%MKt?_a1RUdS<?J[eXS@(ctiU%f\L1g-N"u[kjho!Xhgp3fT4=g*WFed4A4:0ur66TJ+n*R2s?aTb7GT5JVnf
%>k,Xs/-m-9Fs*UV7KlSdB"#@'!D+':A-jg@_f[u\Ps?6?$M\uY;uttC+nrJ(>_J1mpeVA(MVrSDVRp7c6"2'H%QD-?Z>r=hq8Hgb
%`$q2adS!1i33ra76Ihr#&.U^/3.6P.3&V:6`jc'N"e=UARuU:9KA<D84rhVC"lHkCCa.S@\F%07,N&YdN-5FB?Z7#!Vmp^o*!onV
%hI:'Ve2-0b`Ffr+72p3n>*_;,bp!At\<-^seP>&j.\'c9FEqkc`JB0?#,n6IEH72gE-b'G"6JS\3!N[&5R6^&8JE:j*@YP<%Xm?D
%)'<.=?Dg)9eCfH%3(j63:rm374)e/EW"R3dO@KAm$"1*T%Hh^<%]c33T:p3u2'B2=OS8i?*',8kCuUgF'MD6^gGSaOV;P8eI.9Wk
%*mSeC%^<!i(N,@SeM17Fk4<8`e8'%"bdN3t7DbH>5*,e^O`uI2mfc!b$&PJo?fp<=[FJ)_'DYDE@n*08Vkk@^N8Y)m^tSUu#Z`0i
%&5&;#]aQZr$`"2!0]RN#_N=d&<R"F57\kR/1Cm]Ia+I1dXh9e5i3U4lF5.kRB=;VoB-CPa*qD,FR,h3@VFkWe\'t]'KSsYHW&#DK
%a6A!lI##T!E*uL0j<i+*Ju$@j2)&!7J\a@>[_,ecZruW;50(jLWT5g<0%-OY-5_S:h3S$b&="K-"je<6$qY`1,qT\TLQ;"L(gMgN
%cUbDHA&e==S7r[.ZK7X-oe>HW3&f)PFJ1/"0aF-^->.<8nru<$g;)R"Gsn\`#@tlb.q:-#_^oc:`O4bUBEr>:5oJSgDI@%sHuq>F
%pf]#2:EeC/Nd<u&iBAZo7PHDXTBhs:g*LQE/Lq?K)LST&#&N-rXF`>B-^Ffh(O#mP>mAu083<&0LMS^N2A4dqY)n3U8!?HDQqu\b
%?:"-7=0aG!B5oTo[q$g(?Os+jWN#M>*5M)<I"75BUlLfg?Y8?6il.HEYYh+i6aapZBf;Q*k,^Ntap3:m5B6/;CIs\#BBfWp+0O61
%:;PctEL:K6"0fi^#8a%t!@ktfk225LCRLUfN>%SFOctK6TfR4$5Q3>q2qsD$f=KP4O3[U-'.(K1-UCt3M\1)`VZX(sj=gNMp0COD
%J.PMnoK,DZBce+]#T]ULk<\E@mJn."8cPGsG"PiE,UDPO]3O9f5Uk,2ap^&-`oQ4rQdNQ3g?3DDq>M=OZ/h#gN2$@F^]#=ITE"fC
%s7sG/n,J;UhhX;E0_ZIl/bUlVK(F#BY9f)=Aurj'%8Y#orT:?tnkWbL-]an<kO,T))QT;@UdMpq<]1oDBQ2:n6HI>j/bDoE:dWeN
%0b!Op&_Greidk>B!;S#=5?h,BBX^M<B\o,*C'Pm#&6=FjqVf5)dt>cF%P=&g88?;$53VRMOtHs``)tkdb3#Ck%3XWJgC";L8JrDG
%.eSg[Qpj,@/()V;"3.L&9rr-YV)@XBE8JV*oB0c!])/[bW=GW/?)2*6Aj<IK#n#E$g^Q\;I=80i+Y1257-j^.VnJH-&P.nU>LgSr
%0:2&%*Cm@H!RB9bWZp'"H^C4BN^I(j;-<ij:N267QP_#NPkZ?`GOh\`Y;W'%Y)JRUcg\&W=EAKFb6.a-VYs9j,KRVba&5JROuiPR
%@frH1=iWl'QtMN[Q/rR-O'$i2csL5M[J-Is"p;u`fl2_#o8%-h/K08u"ihs"RMZcA*noj<B!876*F2*o[;ptd`5@[H9n'H[hs"m[
%igk7=(b5J-S,#W-Qn@r!!Hp(4kmV55bd[$k%ejh1HZ+#]2c0SC7iXihQNLb@$UF93MJf,D*_CL1Be#&0a7P^`kPi-uaV4L(.5d5R
%S:39H-aEi:SVlnV7;t#m.?to_E5LZ+&?\#$Jh\j-F;Jd^eT[`'%&/PG(6bhE(2=T9Z1%oB!M!1&1^[:/a[R(/ll',0'5AV?-r@i1
%(e/]go;A'(eA598)09e*:nhm@C6Aa?_[FN7]*QNpNCp%W%NH5b"c6!,D4qS2M9&(lNipI$Z`:03)_c#D0Zuu./f+e#nMZtg@T=WA
%bKs'bb*(gU^+HLE$%>O#?=^7\"XuN>E0Kk5<)0i98*JEd;ih@m&PnuC!gCg7<imo7X4n$Sg#ZQhAI6#.bscItXEaN3+T#L$fXjVK
%TQQi.i,T$+K"+4LY?Q[`;9]GIR^-Sk)J+X>g1]=bm9dRMd7uTMDI-'a,TL!LW)h0?WKjFn<2-W%,7"ZOV+HiSO%lmBa"JCM!5FQW
%9OdVCO0:tR<+Q+T(W@1Me=k7Djr^9AZRJBbE<T6!Y),'LJ7euA@LqLL0(lJ8-+4d3D>unLF_[CR3Oitee\"YmXgj0I?B.0$,?rRW
%>D$8a'Vu%GaWZ!2oTFEa(Fq`U\9E@ClplV\+Au#ZEb%mE;uc_KrpoY:T-?Op0;OJ$bpBpT-jj=ml)4^CPH,]L06!RU`OFsX]r7?>
%ehIeH<2[afWG]nn,+nZh2H>#ncgOe<CDY[lFC4Q?ptGG$*TO^+F/ntIr;?02je*<^C;^Zu#/LpiUH*4\b4D?cWK7@JI_ZT&^-f2F
%NpisI?/K8E.i`M<M<'Wh.UN#uNWfJ#^nVsoV_PQ<C>+(Q,VNu%k>Ve^C\rEHdpppMhj?ucYCPcjr,(-5purmS3!lSk7t?6Pl8Pj?
%q0B$q_AcBrQR->bn);uuH6:\`5Id7^:!=g7TTLWA$:]FSH8@FH7PtkNnWQ]?`!"&#T\nM0k&2I#4%<">*]pL4e(^VMjEj&0(.>dt
%_C9c$`]R9<8/5\L'07'Fnr&>L3o5$Y,LpnV9-kb%G<S[g\"uup.f"N611l%q">=6'X$Ul=7l-fZj1HttSKL=J)N3Ar(:!3#=t%2"
%NTm';==U,jpgtY\oeO6EN*JM4)MmPtf_79urXfdq#&Y?8+m%p/d.K0VI1lSC\WE*\=i_p=jP;2^icZNGh3U,;!$1rKNq%RUIB*&)
%nl01C(D"CAZiB_UC)J[%cT=L/2uJ`HXJg:&!>6*8>P&N^Gd"UR<4?FGnaiIITIku6drVO)H4mTLqhiG"Sm=9uN9B?LWSX9;qh=[O
%5Lq;:UM1![Aas2feFTXd+UTYT3m^tPDVbi_nK$er3+Y6TXLITrUbtP'4Y.O?s7pL-\/'cLc4r(`/LX0o#Qf?NJr?/Nh4,%/[mbQo
%I.B"iEBifHFD.UCB`7Z8aLTqYd6cA"F%pMP27@\E4][cbZ1)S2=3B]B,L@.('+@H4I(YO%T@s/V/M-jO;Z?AH_I57m>jPbW\3VF>
%'75RiCr<0;19n6YK*\dJo/,4k!'hX\'Xi;[H>sku0S\dIO#"hcBO'.@*TMS&qc*#[pN+duG1E8H"$Ee<GB@YsD!?#71T3+&.Zl1c
%:7LpLJe>Sn[sg&mIob6$W._V"7h+nQcQbY*]&=THCEq.OXr)o7HToacir4&BCs2#$#A"75UPK]/)D_D52^![3^sNoL80<ad#if1c
%SgYF3q.2!?lqchI5#"Vu_UE`?(?$HEkk?=u-XnrMmV+P#<`0dl*_*:H[$ja$eaf9'"o$QDG-EQj-:(5"NQ5I3=6Dct[[\js53-q3
%Lg/*HO\DOUQoE;*O$tjKh:OI=:UEpjres'#F((AmC9o$TL0abI8Q:#\-MHhki^#"?;jXYIZ2;LXMoLSLBR1_#P/Bt"Fk:8N/>:^m
%eVlK-B\F6p7kO43e(7OJBC6De>c^J2<<ONm;$km0=8SO\<E48&s46Zj*o1C:%*S#'Fm'p*MoW"Gc.eu23P`[(]HAGUg*1"WZ;B6C
%_tb\2g>)oM8a0.=H*hk6>`UZg/-,f4:^PMq(.l]-<dttm?7EcWfsGU8^]\pQ50NroF/A1ma$ps]%YSnhe'EKGok\t>GBA&Ln)r>9
%H@)lgS#cNKnZ71Xa6=G=kS6clX2U>tR9'sR-n\#&#1MRnAO9sc>+lcSV7RD'@%j13;Fg/p:J#hZ><^l,Td'"];M9ckm[S!h;')'V
%(`0Aahic"S>%dRmn,GQ^[bh0FN?628^PC&a5dbFciN\pId-GP]a).I6I3ej2o#f!*i\HWSi)Y8Q(u]f-k-%\Ya&qcYrq$27X"=p0
%YB(6]*[Fa5Nq8n+3hPO?Z&rX-e,6Ath"1",>!8bI^8#2M+(Lr-rP<s2)t<=VrdB8)9N2b`mF*O3k67UlE>bD^C>23!HA."B;BQL4
%n*rcl8(hE=?+?WX;7eCu<AeTQa'hC3n6__B,mO_?b6>kR=d^6+^,4DHKd>RP_lt2$^C_>@Nr+O[r0W<;7\B;&04_<taES6G3n*tV
%rgE!X;nSdNOQqMZUWN4=V[Z*(-cif(.LT+BY1)%TA,14J0I>`UW85XB:3;pdf@<&,%A/#rf6XgM1;T;S44onRL/4S$F[Oo,DL%f6
%mBQY<`[V@)eHoHqa#8ti^_rj=6gq2T(Yju$C;^1L<f"+i^cl3lND(A5RZqEV9H!OkaoF(E5N"j3*[H4mZu$Z@.!IK;4#kT^AV!6U
%rf[&o'Xhjbs2-!V"Sd9g@1^PZ?6MU%$kZ8B_`eOH!?*?6o!fVg<KD\=<>%>(dt$PQL.-(haFSRn<Q(I:V2]tN?.FfG`nOH,`gYsH
%qT%>=rb`Lbbrl#>(B*ER'tZO=//'4/cfRa_-%Umt8gTQ1]:H:.dM9MRI3QO,.;*L%L?E;8:3-j0>(#&I"P>h+8Jh1R7lbTsl51pL
%XSY#d]?,&bkO$*7DLqN-RsA]MSVH$n7\0mh:,c&lS-Ib#e]2/B)q)q_GTR&+9XHuU"F*SE.YnL81i*Ai2=!/VW/E:7\TPBM+Op'B
%ls'BE71_AM70?*P4q2E!"IHX%PuVZZJ(MCX&]"YdEYfnY-;3";FU\.!Li.=fcM7/d:bdG=`]mDa=6g!.&ca8pC%<Mjo&;K4(*U5q
%pV^)aQ?]1J$HuC)?fY\p1g$NYaLJj59-O_>&4\#u1"2e^&<?j_=Oi=GV8,'\e;7.9^]Mmb5[Z-/*tY1ndA9<,Fn(pL6ID^R1KfT2
%TVMp.!LdmO;=O:$rt9.+a(dKKjPol0l9pUY-,R>%Y*l++Q?6;,P4J&YU6=q)(^8->Lt!'k.DX.@m3mfVJKub3Tt3u\9WC3U?R=NF
%i\2@Z:eZFac$;$3MeJWoW2FEc>A#MG!)OGQ"#:C\!"lXSWohL4E2-JKcQc0&/XiJp)Vda2YW+YBiXU5/k/;(%V9laHW+,i'c)l)`
%\[SFW?BqBoG%iI%n@`bXGo%Y'pi_!0F"%rZl%6ij%&/k+mRA_NI*1c^SQCC'e2T69Ab(bcZ;P(]*&D:eK=%@88m>I#c$`gKe[,#8
%gK:9Bm\[CFhA.u7/f?>E(j_+#jjR2K6VV[c0HA8f]?_t(K(s3`V-"a)W13W?,ZWNt'cAEsp.9$0gF<Rlp"!9dD;\/\(]Zi``d>)V
%%N4fsI8'TOP`a5DMf9d+U<N&T8ddVNh$k:G0Tt8IKlB1MofA2QGD/C96DL_J#3cJRCbfEqmZR3qE\.c8:5XAEa]^qWF@2g7'j>^_
%ReX[$6\e2q6uEp%q(+P0g]Igpq>iU/W3a9AM/,(#ANA80R!Q/5Qs5q*7gE]LA!D`'";\fkT]ZHOXRBM=;ngA\lQYs@92Un6Ii.X>
%2T(8A=RW$]S#b;eN45Y_@:r*;O!lD!+i"i#C_8#B,/f6DG:DlFAOQPc.[Yn3/Q;a<@pXSbU)TW,$6[BQeF=2c^d6mS/42b\V@TFp
%(=c$^":(HbAuYj.46/8b6o+u$ZI`X^(jtmdL]t[/"AeQWLTj49Ck,tCeBrdXeIdEHlse"c(b?&CDZk*6KhE&<jKH6%1$Jt$RSbt!
%>/4Xr\o?KCKTe-[(*Z$io0.c@r72g=Ihe'o++?Lt7n35_Np%5%d:kMt53n)Hd+oR)Br@7cqjSm>3Z#al7F:6N6t/XMDQ[S@hOmcq
%d=C>Kl?YO6BdWAH8X;V6'2'gXitt?]>d?0&$gLgFhE:(dA0!KKdH)=LBd:k8QC]37(!0+O>q_("&"jFuMFm1n/X@:n#Z6%A3hV.k
%&-IT_dnmWrCF(!P?S/5Ha4oPNp;\Bbj7()6L&Z<jO,nef0-C5S^KZj">(6.tdijRR(n-\CK(@Wh1B/_B`j8%G#4Q6pJ"bP[X(`mB
%>_Jne98NMX3$W*,$Z\j0>f9[pmQ)+=H&*rY0!hM!Xt:&.Z`oD4pn/B](1$d$AJY(X75AIt)s4*1N`M'/F<\IoZU2>L,'LN;eb^(c
%>UQ4:?*J])i;:)I.d\[c<!o;5CrS:tA$'!;JsioNFAq3/<T2:mo'<'IY5eQYE"U``bq(fH(gBHuEBdssEhs2V<R\4m:9p^,#1sj3
%I[2+ULU71DWbK`M;?F.*e]JKi'Zc<3Aml"f'q3UROS0_BrEftLYM%YCJ<9EVk'q`)g&Jc$i.B\*83]^en8dI!?E0pK[;FmD0u3X@
%VTuU?i3uD'c73u,:$+/MU51K[kOkc!,/rsk(<Nk;S8Y242f1rnmFKq<d9EHXdG)*%RsB*+Y;IGU5$7.LP$sH2RZA6SXfA+O/C_%e
%L:[WU(S$urrCJ(?GS'si;=N,@D^:-2c%B>,^?;a>lmVllR'"u@-f*72g_";Nmu?ZjkWR@$1s)ifVO@(HMK>8FH#Fn=?EJ(T8cN+1
%@fB*`$ei'40%AXGdT(#0$gH8b?,tsEN2)t'lhYd%2(&"=e.1[%L"K6>2`gWQhY<+F!$G43eBbPBir+<*qk%hbGlu#p\(<6Jp[$Wm
%-R^,m#PosTAI>G7W&cB-s4rHBX3SmQVFLq3/a8ugVEn<"FrK9`h'2:%G\XA6T_L3uOjJo15,'Bpg`i6UdS91qO(J80Kb.s:,5%0k
%;n7`3]!4FD8;%FY[oQO"IRrefb/49N6Ej(X2\C012=lu13RsXXNG_#1.S(Gp^SZu'fE"qOUt@@Yojedd/,QlN:a2Y]WSQL8/BjOC
%it+VU65tu&;cIL$#QHo&H3:RPY6PT:qi,-HK8CR!2@q4SJdV`VE%h,fi`&3;eoh#J6EJTa^>*NFagtX2CGA]=o&<M\XH]5e2O"4u
%YXTrs6<&'N@OpSiTIjNL12O>,dlH$dM$qq]GqW]!UtRt[,mY\`D9$C\gTi\eD:Hbh1sLQq-&NKIU@^Y#Ta>fZ::^3:s'm.Nn#<:#
%I,@ll.0K7b^[F7I&qT\tU(XFf:_FiqlSL;4Ct8%_JP/SBguC\0)4CX&LR=`<X01MbZ7q4k2p"*QG6FSg?hW=rV(2\(,lC#Y]pVt*
%b/$Z#hQoS,lRIOIrA(+/r5ileo7:=KA!i*.+u+bKB%n:H/X`*cP;l9*7`m>@*=D*<^b[R@-*PXhP*Ze)HZ/<NK%,M#lkXs\)f8E!
%l0oAMINY@$B/WZE.tYdr/KL?Qnuf0Wn!GYi<,)$e#HP<Jl-nhorM69D-ZoY0.dp:[$7W"J"FX48>F:!FJs2&GrGul$?oBGn`jJ,B
%A\lk.dHauVjN+WA-+"Y@fh:20.9t%n=)VeWX/!%;=U%g'?M"T1**"M$=F;VWBB\k?cQ;eR?e8_qXg'HG#X9j_0WJ"'Qt^,*7]@YJ
%n[=]2EG11]N&AB#V]<kiVt;/%#[(kS&=*+M\6F7&1h)TIqIOS<D0Mn5C4=hNgqc)mk-U-4400)6_Ob//XLp+P4\_'+Ua2.hID%rt
%c1lmL9/YVd>kJF#ZW4F"/nJ:9>>c1[K8uJ#=4mS9@Ep2G38Z#kF^f[\aG9$/#Z[8pe]&dF%jil6l=R-j/<S"?ia,KJR#$E'@th%^
%R*!1FXoN9;4n0M,fF'OCXD+-7:3pMgg!&]lLh2;WkS=tf,;caPpubAi<UT8qHk=qLiePoC1O2D5,etpsOBPD+Km(JSA2+t32`=o(
%$.a\`_9uc@W^:<V7C6L(>FV<g/*7N5l3N7ORS^)j/WGJ(-mA!>MunEmH5SL*^9jn!Z3]Rj+8`hnVj2_[n@Xo[9\-"q,,279.fjX]
%S7[]tp>a4ai\nbSB3X_K+sNkf?R;`!g+gBaEQ]EI2T<DT"rf[lW#Dn%95pYsT*+098r8L4md$u6;^ISCo%"uo^i"kQQKK;#qQ#ko
%U(JdK9;>$#BG,oDCLX/0>;>6bm^IcHg/rZt4g+&,ZC6G48U@ul'A/'J1m9M6I6GBJ.3lY=ULbd&%8Y)TWY.DapP>EJ@^t_3hTlWE
%&28.'J]4>BYIVHEKKl*eY/&$rLHqY0bD!-2A$.^HZpM)`('H7i>)FHknLT=t3f$7X?EWl'-u0eS6laep5^ebac_TFL>1\pM+bVEC
%Nr9-c&rPs\-(hM)-8b\>T\d>#Y_r#JPE[ujIVEQ38kp`@-1RaQpoMib]ZWA?17NLSQ+EH(e\#?](>Ipk7e8VPC]/Z'g'M%1/(-O^
%;OW,*$@:Cf72@VU.NZ?"$?4h'fS>5bd(A1L<`#d_Yqce1]htRj:Qsl83eV>`efU;lO"!Nc@"Q5OD50$2NXRBL'$NP',fs?SS!eCn
%Voq4PEbu1#FF<0O;:MrEH[-EmOhD:_-Hj$NQ<="'>21Y(2Xu[tI:_t3&9e-VP8YgWMHa_Yf48fSc]U#V@lO,QJu/,i<B\KcE@oKS
%"Ti_dJNO&nVFNFW0slCq"PD\1q30>EkVZFY@(:TtHc:apY"5`nC;]psO\AeuN.l+p70+J_H$3'.qJG7a0]R\GVNgi$-&tnUjuA"f
%&S]+N/6CL]9GHAeTUBOLlmG<J8p\EH.&So:qTh]&[;u/j0hU+8U)q)*&Q]cAe*"</kTM5r9,XR&niE"d(149$0lBo@1Ha&%B;ZM>
%:g3jFpXY'KE,'R)A+6Qh,$"3+?1KR[bK>b=69"9(PbEe:7:"?j;+Bke+5m[LZW8n;oGC=DHLnjUQL&+C-sU)BThC`<$ojatp\p8P
%d>6f4nb0.*Q"oej.m1&)lK$;=`:BEuZ)9!Oi+K6>hpi_hCZW@$ThS7ReVs+V+?H]W%o@jrriB^4G8O"UZ"sZ'AQD(jqs$^QF!4)/
%\sGh3Q.ChXE+rPb2q].X:\@lZ27fT$=l;OVZ;s`rZ"SDoItAm"GBZA&-/GV&O9R?,=3om%QDA!06nm&)BbX3Gdlt*$6TFmd1^Wg%
%BChm@poMgF=^'/A5q$o*4(_?1!Jhb>nu-)n[u?;GadV-dEI:UeU0"rWZPkS"TDA[m^2--KdJ&sISg9]*;?C/YSt?CJ-,!@*0mLaX
%=f@;!M:Yn^(SnCd?=qsR+XQI"XB>r27htKY?K\kDG2GY"42%!'R2>bA&F3J'&aGb$,j?m&-QJol82fupXpL,'1r4rhjeIIZ#doH`
%9YroMh-?u*@#!8C!O#93NA]Z^>G`C*9gk'7h"d%^GZ%sZG/qu4qQsj>L/s;#1)4)0WF?$u-Wbi](Ce-G-hMHQ6A5#F")"gdLrbX^
%i6.HS\pl@1J$\=\9td(1kfR_*X]p]r'lKPfY+=fo#Ku\8V4SLMA2mBof<t>#:?sgCZ7$(3iglFWh"B7md^rDX<(X:Xn/qPSKJnYs
%/U^tsiKVUp`o=)J8^p)d6>cTjFN1jcoqa<G>XD,4k/YaZV-lkdWLrQ#$"CjQO([>^(`bOcf>eO^0Pu'i/Y/RCJ0,))j:L(sifXq;
%hU*39jj7EdY:#Y]!95pq<YC<Y:1$uYD9fIrAd;#H^oo[o*;>AdV`=!/?D_T9S_O/lcRYkTl@!r;:gHb5;eh2"9rpnJ=+VK75-dPX
%/gd)n4kh8tL!+;7kOc%B.Y2-.R[2:M&Jld;7kVNZboR#0>`(_oSiP[TD.4X]`gl;mG/I,kGu`Gol&/V=<I@S/((S0k+i%r=DMlq1
%o`@)AnSN'8\J2Yg_'J-KKGJo\XEggjCNXKBYHD4Kik7a$jWSn;7';/B'5TR8Q5D(D[;3;fpSnoK8+u<Cb$9=K2Y>7M;,7Mn,3iV)
%6->?YoLk'dD2%!&gNpe\asY.+mt<mWVXo$tc`B)Y6/o>m$:1]JAC?sUCs(Eel#RO(erYk:8p=?o6D.\/kp9LH1L%0k)emc7+knc;
%knJ?6j_f?RgP#ZE'.s!RGX\#V.+.;moBsms7YuiaP_;,8-_t-sZC::2&](?SeVDH.$l^UBklDpL>.+qCk.)+BA$4l!/mFel;8bAI
%J)8+Q>_Fek@jcq<(V.Pla]s^Nr[@0jlpH,?I[h%:'_buC90:[UghaH!0c6mTG_>*`K#o9pe"*.qnhG#QfN5iEgY=*D3^%Rm09f]a
%c7d:R:#_=NS+,\nM+P<3Pp=M%8L-r=)g0huAV-$pH0OLE/rr&D(p51-[F,nVaHRS$d,MH?fqftsf#F*Oc<c$/a^"3qdKuV!s(5F*
%.T5QCUGC-[0Ubip1?X$c`n>c1R<4]1d-KNbNhk0NLD"_=;i54G>FUj,?KL%>AmOD+Ts+Dg3"7+ZV-<]h^$Fgh?i>kq\^;DplLVAI
%4chtULA"uTi:^h5A7Wr^Anl/n;f:'m4Bs\8X#^Fm["`i!r2F:094>;0'+,q5Yq>ZLXFV]E=IctsYWi<&Fg]ajA4b(QW_]neDg%D1
%6j,IID3#\KM^V>W3sdk-S\f8tn6.R-'8mPS/>jYV;isttDQF>VlM;0ERC\X/b=\!,BXec+Q18/;iM%H]RdSOlV\7dHHBT.$rB.Ib
%GVf^p\$ICF<S2f.e7S)IX:2Vc>*5:tT4e\8V&/%8)BrOHYF+FdC4\uR3<e/h?^nPgBa'j4Fn-(f&'\=n0R3O!e!DWOfB\f>q+N"b
%Oo)D)F99L`>XQ6YWW+4J[U?SIXYWk6-qc"n`P$Es[MO"mIN<h^FVVoP,HJOoEVm,>6[D1Qqr_M$kRNb9CY7<uZ>e\NgO&,)6k7\d
%U"Qu*c462i*Y318g!$K82eRWIB/5>%mLD=9ddBa(7V9\jmi1eRU'^u@k5B.H4,H<#U:aqpQV(R4HbHD+KR_muJ5MaOLQP[#T+n6f
%_Ge`ATic(NMaDeE2Ul4;!@\o6S[o'IJYtpli`_Y<q5Vs,S95D)g.;P[_IkV7;F,=+3[,B<qlAE[K<5m$S+(imMmUAr*2%-#hd#"b
%V(hU>lAO1mTE)Tf!g,BHF7deXUa<_aYnPj_(*E"PTQ\S[dX`2?EO\@nf&Hm&C0rHOM@3TX,"UT"U<M<DWYirkO)<CTQSdp@VMJE]
%;`<99)2YN@Np\a;eUG*FN]EBl`W:u(dd!cHQ(RPuBT2i^%AlO?e@Q-oIe1'D,"gQHYR7R`R1Rj`AH5K0IZ'8fD]cJaZ@MX[Q2eVo
%AVbG>MI!&gOhbrtWTUAng!\G,N]!*HL4eAELQXdcV_g^;a$)-.W0L;I3f7i/OB2;V3_k#GO$RqV[o2=-Fk+L4+!X>o]^&a:#Xfb>
%SHB;<@n$6?XMH9C\4l8#Rp)Mec"mHcDm#<PEne59!JF.03._g>3"[:3R#"(uXVY'_gr,`M/cu@$^lhl>I2DL*$^>1i]b4+q<1o$3
%O/&%!_5K?ugLA_p)8OosjTB298`*$]:J#kDTU^:%q!6,IZK:GW-&R-+^%iS1osmL=Eg9CAjr5l?SEj*t`\sf!]ulX:1,72"Nf0uD
%qC5S[,C;lD4l+Z6[T8u>Or\Wqbd-"\4&9fj.1IDIj619<MJ(27-fbkjGP2@mD)a1fc2Gpt8"W6"p@c*r\<f1l=8PO.N4k7#?#otM
%Y4cZ%h*/&4hejBE89U(PP$f)hGfSqVg#]R]gS[2MLt?Eg*\%6j4O`n\a*+WPT5Sc_-&-U8I7>@I`2q:C+5<]#UMo`fE]qQ*g\6d+
%q%nj'_obYQbTbg=^OG7pradk>SoZ.o^:^u1$GL8OB#R%`q<cDco]=mLRg21ICG@f@6NK_[cga3\D>X1tNZ#XVnceb:MqK>i^:\=S
%bM+uP4ENg6IE&`$s#^A<p$2kuWL/\6LZk*s2,/"iE)idL8M9?Wggd^-T0)ft>'04#`S)oTn,&?YmCP+,k/"-*0UmL5WTK03jm(U/
%`b=8nj3[B_pF5!lrU]eog+Lk/W,/dU/rp>WEFH9U$I&#$h&Y5g'sK0m4:`1+]Y]3rPdg&GW#W-i9&`=Fq37\7g\<gJ\':[gDY.r4
%H(b&!n'?I/Sb@3oW$o1,ho@,c1[]%"Og?po7:rqDIeVrBgZM=LNO7-T)Zg_b\U#?q]PV"Gl'N'bSPCc/;\BK**9Y'4[]NE\2u5N+
%4OE,QDpNmp:6T>arLdtBOVl9E@7Ke"'7\7*p"aK>k>(\OQ003D6>duu[`9hXmE:mPAjBM"H@&DDgeWi8kO#_RkN>;VL[O>NSFQI]
%s83P?g$`#3bE5'b_,A.-6be%^AuRJK<<]%l6X57-HQqneK_3nZ8SE`Rg?!VD1uRtNb1jA-rjhW8b=ho/ms(I%0]b@0>l<7*k.g?U
%H0G2hkDX=T^1WghL!*@5^1,3p`oK%A!*qScZLL11ML,9_<$5*cNJDBBD1T3\<5nH*@]c07T(:Obe^r-.\QQ*'b:0D$48X;1IG$f.
%VK:SWj3[B_O&LN-lt9:X;l!Ag=>BHc%)RK?COnYV_2dPXSCBu!!27JNo6o#e>]TdhW,t]/f2EaF])(U8Sh)\\1"uMp'#Ch$s8Th0
%[]Q1j)gr]P5L=i$[qEIj]g'lUr0h.H!'LiA/M%-nAl<l5J;,FO'.9o05cm>KWb)#a.0.@u8i[3HI-QBd"[m2!QdK\qKkk+F1aFPD
%9e3AAn0DPDR2dSE?oZ_VZEOh#b-2GPX6bRG&UX/(m1D7o^UCk;<R_X?EB1BSfd:fi_0D(jI!ar#heji0#b^h)\tReKJ3nT&;"+l,
%N.VLa;AJ`MKV3nY,EQFZA#8C)-E.SX_(J2].2=]oa\u(_RM8"CBIhBN7NQ=.V&[Y)VtM,,P1J!,Xk22=0kfq.\As'$Ys6tj[2K&^
%J,puaP\<_9dtF(*]-kkl&f0[DJt7+)g-golR\cPDoErSI*fflofiBpI(`a6BT-oaiOT^&cR\[I>@)3Fg5b1/e)t:W7c2SJl^hZi1
%OIDgjPu_a>6H1HH!0pgr-^YHCl=%=qQ^%%(:(#E[;,UY+*hkbk&/F+Vp/+]d6J8>/nB5a(hG3;3!L(j>f4"RqLdd3*LP>uM>#4OJ
%FW`a*$94n,Q,;_56C[`9R:%WBc@UZ^Jk@o.e$]b*faf/#?hWka):hF-q9.J_8Y&8VH/OICgkFpRGX15k),;#[M2\u.B<I)%s&nXV
%_TJ[<e0niLOg5tK^3:306eC%`7Qo/p4qr7e!r5:,%%.!e/p%1%:#HDlkIYKK=UY&mU34"_I&0`4l6U+dT%BUXIf8O$qULFupMW/L
%n%XkTqA2bjf3e)trTDSu.G5aj!@<*libfhDSC:]UntFs%q_*Hd"Serk/U"?n3t)t-$L=a:^StC#YG#JQ3[m+*%a^0i[/e*G_AAo5
%WiUfs6nMu+e;t:i7F%kri8Li7CV+13(#:g87H-5/n;!"0Z^fHFH&Y#np/PVO<`P[3=#1i;c)sg3^:-;;@[j?MV>@kh5To_Na_=Hj
%3o7kuHWN5p'1(]2IJnO:(s-P?[?l#[E@@ZPZDaV!4YFL8`m#ZE@Wcb`S`aaI#;gpCob`-Bf"_%F>G!/<@31Q'>C<3q9ld\*C8&=g
%+X=QUlJt2E9k1EYKb>$CDlXofbX4oSEt$!pL!o]-@'Z^!W2I)[_eLKci\E6"4nJa)U+%,Xm5!*V/uk6<QtteTJu,])-B-37q!9c:
%#X6Q)UTd&$)DG!RjY?m[=qhq\"2@(sn#X@W^09],:?Z0-^U;&;dXWqG*<_(o%a[g2n.=:T6'G@H(5R4r<XaHnG2uX%b*:ls#`)lt
%S,/sLUl+7CpF?6$Ti\JM@(cURPNWa[Rc[\5r!!pQ6H*CoaLm)ppiVd22<YKnnYq%4PG*;i>_=VCr#4;M9+SX2%Gn-X:a!:tfZDqU
%>QJ&23"B%cb1_Dfg0#JC4:;/ig)H@\kX/KOpoLI7p:T_3?\eS5IK)P-+]8`8*#m*j'AmuPDKNpTk64R/k=VWtbaN3Uip*-VCA"rh
%d`_HL=?(S+pk-*d-OG;eR$G5f2i(aT'#HQBoQMQG*f3.g\dpD/pK+?AO>3*Jgt`U!Y07GuHsBW-7OrS[FPqHO]k<U'SrrEmn;6o&
%r`=N%U,Q0m1O40of.AQXU<H18(m6%4X:e%Qj<QGIOrbJ(5OH6(`[CiU2#(Y6>ejtD,\/YYjLODbe9$\)_QH<9/g&ZQ,*<N\.:@^3
%W&1%C"<C41QS#S:-<uWMKfta1ipJM;%>2ngOi[cD]m-9,p#bl+bu73m`OjAt0A`8Pl36S@`E,pilHPB75IZ;079A@$m"gEemJrA%
%M)i>1q!U1-5Ps;eY#Sc]:3m:)+'$d)?"U`3osKVO6RsJkDFf]:4YGe9NCGHV,o6@[$N`VY`]ukd<TH-^jq(7hc8qepJAjM?*d.uY
%GWsh8MjpPeNQc_B0S<HqK6.E5BcW!:Qi.)NHqUO-;f2Hh)[GBY]Z.3(@'m^9'22k&DKOsf\IkWs1KM;CdH^(HmiNu5.?T`tg1Q/g
%W.oS'f+i`UVlp(%m[WFUpjUkFoBT0PIBFmYT<ngO5n_-)V`Ticf0$ij,#qA7qJKIJ-):i*(@iFmQ4sG5FIm!?'DR[2%Z)V_4![>[
%$UceoFpZ,0'6"2PqSkA8cItn0PM/3p`+RnY?-D+0+0\3k]07A6RNfnl*6o0lh\CtZ;"q@<`W;u#W4C0,XS`"=IqKM1VFgYtXMT)F
%bUIO/DBqC%!1TV;!,gqF"!EU%#0MAs;GGa^35mR<'POZQS18s=h5,K":MI*jULG)-3&#i=7GsLQd2.m,Ed#oHr7WaAJC(q4$X5%(
%pE>dZ?H?Vu9+A)_RLFW?6;?ZTask6b'dtN=*g_=gZF!0>SsBKlSpMD)e)Xf>bd44"/EHK%H+Z,MI`?4UjnJ`M`QuiqG:<CfW;jhT
%s!MMJ\AKRECiEru1PT1[8/@B_e2Ha'M92AQA2h]8DKe?_Je]m<UF>o<AjJ&GXM%kuP/sr<ma7$ALcus0]uES@.C7gHFr3=DJ\F[)
%!4ahre+EWB.NUIoZ-+Gn=`^C;#Fmt%+5>%%'m;`W8GX*Lju=3-ocePq)p50,RT7JhL9nGT*e8=^U;0+N*n@n/02RhCW,ibs^>OUL
%VBgf&h?X!<kJ3"ARJIR7M'$\=$$uaC:8m\*!+Ob_A'iL*[FOAk>hbP>7>k8Lg..?+Uk@4M`=N5H79f+s^L@A6"pL/-9<Rg&g?*@l
%Q_[#?j'R-I9e+PUp,L"r:V'Ss_a(^IZfi.De+_75alIcU^]*_oIW_b0nniC#M:%&aTPsko,hE3.=p'<b1C,8oIKU"_JtELi<j.u]
%:o#'--jDTcCol1Vjg:QPfTFd=b9!m+-//@kL\J/nQ7g3CG;__@K[9M^+._K(/R[\r("UO%j,je2oRK&83ZqhL6aa2!A3GZL^a414
%/jV)AflVM1$EAC+RQC\&rS]p8Aq+d0e2/$T@-B6gMW2?Sa:"XVV#?LVUq9Vf-Fq126soJiP)fZ7:O=oQZQ:X*V$AcTi`mfi(9%gH
%?MugSiI?^mOS(rV'>6+DY$(W4mYcZ4TOu!X\5fth?NuFS<Zfq99*dFEla>*9_S-98A!2^rkY=_.'b]T9];58gO7-f=/Qs1D2%R!e
%_%L)SkVO"g/A2oDcI[S*etF8B9HpF%Sd!M#fQ"ck,(b88+t[n2N=PjD*4lCe;GD\35cB22nNF"dA_HL!]3qfMNnh*nGS]@e>I0Dd
%"u5RtkT"=s9/BF./S%2dTEC+rFb<O$Z3%G'oL0Y!n;k5U@+9_aJ,S=HX]pL*[O>EQJ0)D'rI^:fg=K'pPAW4Ppg+j!ZMQ@%%gufO
%AiZW^N$S7B'Qp1I1gS8<=!ZXX93(8bqXoWQ["hZK@b7&,Lh9aA^\u'60W[9lH&0=@87u2(P=&,(@!98X^DXX/n?up4%W@.rBdI!H
%U^Ft7n7[4F)V2AZ>.=?W\8IQ?$2a*$EQh[sg-q/=Q%@'\F0Ztq5)NG&b]78FD9g7JZtgoG$.SdPOt;.LOS6V!H?sY8DsiCAn3;DI
%"(&LqgqC^9Jnl\-qt2'!C/+8m`dC$V,TG!-JFga$=1"bg8qeXnUgDZT66Qn?"k4UOe_s"C@\1AN6-JW?WCjK>IRP=Gph:'!!\tiq
%>XQ5EBtFl-ph:W5<NY`U\TY(areDEDX2-8$$[<SX*'J$6Xh.?TJ-g'unV3eUm7KAqL=_HRSAjf0Me]Wh.fFaKfR-]Ni?5X_aaAqj
%DMq&dk5%tnCQ\JKRLI6Xnm%*.ZdK^dMI_fkrP9o7K=[Wdr3^'aaZ*M;MH6@mSW+DJT<[7j,K)`G_$7++V@95Q?*N[n7OR[P"H"Un
%GJ:03q)?^up9g`%0dCS2klLo'#.Y.0AFi0BD[DNPAQ]f*@+E,nn6C/iVI?3\^<XgoYH0lK+Z4'_b;I`pCIN.r-^:8u20^pt732@k
%'PC33e\+!#gm]U(UJ\NNgW@.$lhZb_X)^'IR2B-OO%>##%4:ajq]]mI]D[cE;B+PGbdF%/[q'9gXaV)9I@;cen,iR6`&^1"7`n&g
%\4g_7d&A>/<d\JP3i3gX`js&Vn#6"Jkhj*JaW5u#UqlbXU%mDQ<4@Z#Hfjg82l5[@_FVj`>F2?&=IeXX/q*,<S[PJj!4>5N4e.4Z
%;Fr@@/9>+LM<sC'9Rl($bbht8P)*T%q9CJ>La#X3+-D=A-j4(S+uD=45@_#Kjh-A)VqIVs[B;UPjgDPRKOipWU+B=Vh@]rW58]5?
%7&9aK<\ujuA.:@d1?l*YU,s"MFa_e&;U87iTkjZZ*VACR.T3'!gKJ)K=_^tO-?,%^:IqOWL(U,%ja'a2.5ZoJb.`'VI9L/%B[WKZ
%J,!#/<N4Pd2*+A##9Y0(#nZu"61ffm=V'47N?D.H'bdJC[t"<HaHn/[#Ei3uj7n-lbY!!'Zuh7.$oZ&5PbDt>pVcX?>t'*)1/4DP
%c@2!HH;3RO>Z-Nka)gVs#tpN1+a_dBWe:B.3?IY0&"[At-;8HC,,$lOU^3$\6m]3T:_$EXj[tfKQr7*m=NrM0,(;fpN^KB5%O)f%
%0o6#uS7s`Y(Rh!bCW.3Gf8O:aAC!dtp0mjD5f%+RbY$M546,=u!RF$gNdQPrVlM(9%r66;%';)3k\F+$kJOFM.u"/+BZLLr9mY?J
%FI:q)@1?$J/NOpqX*ZS'F&\L:Rk"cNW[BNi$FNhlS7ec_Ch:HOQHZ,N(ZFp<<9i"O:.Ti%]"K4[Eu=714ru7E;F>2YCY<N$;L350
%eaa,=TBTqGBBZS^a(lQhH-3BZ/q&"p+sVZb9q32O^I3s&K%LHWntFZ==i#@Lld,+]#:$L/8DHl'+O=@:^WE7P\-j(!DrA?P,rL<Y
%gEKJhOg-6#O=6XgrZ\u+KYC4C'j[AQMm4#!e^uN;-$*RSpiLC<e>F1)fI#uio%HH5aC0YUY$hGQ_qnV:Q/,5he=eq!4."O[oa\sR
%k2'A._g8@,/V-N;h]E9E*Zt6+\W@LH$nmWM4!L(aZn#%.rG!_5i<!FU=l3=+L;l6(n?NcX(pXd;81]+1;&!T)?9A>"^H^>%;c5J,
%8+9<FZ1(%^PU"S^GE$,[ERQb-39f#t@]?;/S>A5MkVXR;goBXJeSKhdK5;3,0/*NgL:A.A-M&pgj*_p@)AELD<Oe(WQVp4&%,J<V
%ZKSd.5-_!*jgjW3:4)_sS3s6T85D[m[ms"F;Fuo'"O:k]n,6)j96GXFOGY\PCJ>Ru5Z/F4MO+nlH)eE/o1XL2K?,GZbQP!,YNm&r
%&o*.d^JDU2.33*0L%t6E,OtS/$2P;a]kac'DJkuG0T&*?LD?shAF0U!Ci6SS$aqZd%Ut8_oYV>W"Gh)!T1"9hl<5NJXCUo,Jj<XL
%-3<b\6X=Sd=.a7g,/P1#VD>iFfBL*=Z#TkPJkP8^2:Gs[_\*`8kH\-+`_;D3\8Yi!b*\0+i:gM(EP>Fs:,SC&0.S&L/Bl=^g_i8E
%((MH<#nNR3"$1=_Hobs>dq7<*#\59-BcbI?8an)B9(_b?Tk^']&Xd(H3Z\3c-G^<cEg$u4CSBE"[?,LQH7F@E+ML<`r=lPC(nOR\
%OO.DX_YT\K0asPmpVZpGHs--0b?+-"X@-u%<'r]#j74P=rfB7l;<"H-s24E(@(0'P?h$MC[r?b-obR\>k3Gnt%NZ>3`V-SMF;36:
%Onb@&fRZF`DAO_N1DSZc';0S(Q^!-^KA)X4=-9:KYO6[kYd$0@&sZjFr=@tVSNjECg^9!Nau:OtWd[Jraru8bZcF,ElW/;G*j@LU
%aRE+WYfih9$"O&bKe#,6Hus%UL(RKB&r[\s/Z<"`4@`!u9+2Tba:_2Z$UM&((tV2"?)FM5E"lhj8u-+U#"g.eoMA4lV1Zo#H%H[E
%.Ya`G8^ggJJ)T7Yne14<JVPW`_^)W6;4J!)./5hk:WR5qrK8V`j<>d?0WjNeo?&&^XsQBbK[`r!S4:k*BnN/W>et^l9=\:S0<Kni
%-ji-J%&UDn:8X6-Y^/j0JqQ:N7DG+F"()3B1?I(RJsWIPdbLo)DCe)<>VM#6cW_IinanD3Y`T;A@5b)$9s<Ae.2S/4)V^e_=tZ'b
%nf'""2Bahq`DO#%c,nWG'1Omc`G%aa/P=A`!]ElNB\+#(0lX+lgSHq2$<M;V\+N*h^a?Wjk$2G4+;e)-a:38mQqEuZ7kGe-gTWFG
%\9!<!&un89:*6=p._oq!;a<*GcY_sb5m2*PeE[\'B[i@c1TqS5[Ogr7F\"=/.afGc0)D'8d5.+(E[9e8g1IW#KUU]-0*MS18eFh+
%6XFB-b6-9!==b=GJZ%/0@fWNl*:b0?fic21bIc?b.T$1cm_JnL+QJIj7?aI&Dg!/-<2^oq0)MX][Ge$6dJt1kY%V%0fC4,:`K+tA
%UDUi<>XMXH+cD\EaY:NH//0UmQTdku7%5/_KAE;9I!^%G6::o#N$Xdii/#O+k0mk-PH+gYQbIY,bej?b1tag0e"';H<'7^>f9JkX
%bFq'Hfkp1tY4nsW;mU/&'G=kL$YUkuX5^Gt0n:%)qU\i9743u'8EhE'74'jALpMfCdjiOmK28u0C1#`I%Dl%1*ip1]';L5]&-2sW
%'$1=:;P^-W(]c#ooB</fKDX]8S0L3[P_Wt`1/>N$/!M4$);T<\C5*Fr,BBTBP#*HP*Q#Aa\hLPM(U39]c2>)'FnT5]LrXGQDHG+Z
%iP-N<g@A>VgVoV3&(&J5&X>QU:4!uDVbQ.-*/8pb1rYpl0T7Tl$I:S'9\RsuM#dEj^d/:V32+Y&Z:VYu:[=onc\V3)m\N7HS`&q@
%CVf-@+I%c*neM\G'[>61`&%g2h,n%"27KVc4eNmp,>MTrUllb?&VO3$SA8U7'd;tJLD34`K.WaZ!s'f%MtDNNTIqE8B7NqInH9et
%O)H_E-s?4g;^a4ALmlShLQ[bY,&R3-J5sI&Urb"eXZSld<Ap_I[nRTH3TYBhZP+0obk%&53#pZCk^.F67E_EmrTGm!Gm.ERT2Y*W
%g,:f`f.%_IDPnZuZ\$p4^F)fG%o1r3'n(>BrlXnl8n[u-f(E6dn+pkR"uH?/f^uR*HG;_7#rm0ke9>"%5;^/(PgMrV=k&-NRsWm6
%isHKJ!k+1p+\>=Ibtok[lE2^7>HVq$F^LAD9[PMkl#i(4-4VN:kYrIm[7uO;36cSo49Xl)MG0-<WB:uR?)Af.gZ9faiX\a_6FcD_
%VA84W5_m3j($%Y+';6T+=M!9,..6R30b$/Wm#VA!]2g)ojH%AN)1neg>/5#_k*U<87o%Cj5VQeU^Vt6q=Ot'n$U#\DI<[#"Q%$\U
%=\"_-($ZP$]qX3s3OA[gF"WP?irqtaPt3H?LcGe/(Y,8H33>K"oW'4:Ck.-6.#Tgd@WiQtTrIbf^)u'Fa?[Q+Wu#r]d`\PK''&:U
%[gZH53]dW;L^qqYmOT8R^SSYCf4>]Md@DZ5D(9%d9L0>@)*V!mc^r*?dY)Zm4*'aXKd,i'MF:'>>k)SQI6(K2<"MlC>p%3O"bH"G
%6Q_Te)H,Bk:eYou$m,'BJ^Z'geM>_9OtT,@JbG;#XK^geAW`Rd`Gdh+phncQR9=^#eou`]i"Wt&3j=J<U^EZo:l>c(SJJanbH:!A
%R9>Pj<gZ4G5`q/Io$4hb?J?n^AAOMPVi;F@.'YW=4)[E]'35kA.op"#A1s,p\@U8TCI)4?Ktp7M6gC5i%Is]L6OVn>oo4LQ:I.is
%0$ftg[=[Zd/KuKViGF`-Zn)fh\?N"_LIG@?brZ&`4O!a)K[I`mJJB.B,cPf6.$m%mJH@_]Ve"`A,^(e"iBV]qVJMo6OV4%e#)#E6
%gFqSjkK,\/knW0-Oa2&=%pt^4DC2S]K1<g2H/,qd*Rhih>QI=k3ZY%2P,eBRn[F;56LeDS7BEZX$IbsQfW&uUST6`>b'S$go2LJq
%'akR_$+,S1m#W$3/J<9,fM^B;ejp+>:@W]JmnUa_@9pu@RBefHWlgpTVN<(hJLXRQD]Lfj=BlG;eO'S<d]5,e.Wf)*lin__c3DQu
%(\;,P+'%iYR<[h<R"F^?<Xh*fKt^,/;b`QHPr!g=CCT=q@-2W07i/'k=?V=a@2E.0]PH5"g89cgFE]]O-CA)7j+1Tl<__9TQ#W-9
%e&k$#2PWA;P;rFa@c8K5Vc/M&FMkQ^E$,P&mX/B-2E=)4\:TK:=&&uoK7[$G4VG%UCG)>!POGm%KKr293:)ULZ+rDU.4,krn3bp(
%'2JG"ZoF3u(K$:r`R2J!O]jX:V9f]<Lup$2qK*Lt0UiBlSaNGm$9eg05lCbp"0]%5Lr19E8Q[<4K2OsB;-+i>GG8b!;3XM=QBWd1
%D6N\iLhf^Y.E9Bl_QT?EPBr8/Jg65J5Sc;(q(&#a]-58f^cK_l.jP=/<^j],jn?N]U2NtR[9]kI8co)<AWS?PJ2BjGZ6OhbU,@`)
%!P+5r(L0cJ^mC5>mAc_Eh1C3U$eh7(p.OW1"F:P.lcF#dBW_J*/!`8n?R"5Cf<&!9Bl\K1R8R4"@Ic';$'Raq>qQjdlB-BLbl#Tc
%hYELT3r'S+^t]/=`i@f"O^hCo!J_R55na**q`@cSZL4U5hd2<Z#\Xch8Uq5O#=Rfq\[B*!0<G2b#08*ec7)2EUB?45NM;:C[36\0
%(Dujd*s'h=k=>59=a,HiG"fU;<`f,D#;Qq9\%Q%.I]7q"(\6X514_08j^BWj5H\_a7S$Bok;f"4<-]%&<LHJ%L5HAG<^C2nLaZTS
%'k=0G3LXD/.p/Zc6cgnE>^T\@[kG1^We7bK>\UdQc?RR4TFDJr4qN."=YX]YGh)FFg[bV62$9cO\-6GDl6YqN:hgd9M/k6U3ZdP^
%bZ/U.!ihstQTJEW$]fpBR?U2G0<8P`mSY$\mSWUpdn9EE8]2(Y@OYt2'E``'fd@>JORetj#%U_*ef^'?*-bZ\oP!?gXJ\n^7TonF
%qXr!%;!94UJ6k*@2O"1m)TQ%<Wnrb>I^8MeV6/GoiM\Fmj?XDV@esei'gOY(WM#?e4UE[gbHm+W1e?U_J34*tMm__)mpnj1/,?TX
%8fSP@=/_X?Yt"2@oLq`miftC))FRG=ftua%]6.ZdYm(Mi<@Ioq-tlBX<I3C@?VJcsaKa`1N3RD&+\M"0]D"^jg_W=l=DWBqjb]'n
%Ek-dK+\Rs8#qQRt\$T+<k$hY[EUqt;_27PaUN51,Qc$ctlCjtF,5.>5_qcjiLMdYud[V`Vf?J4JUr:Nr#llHJf'#2i@e*JX7=h&^
%iQPR_?"Qqc$>65.)(Wlb/Tk]RkR!G`@M8S;oXo5QR[0SMAnQae>5n#oNA.h3RP$m-VmDV:N,G)Eg+HA0(/GE^M0kmd67=N?g!'7e
%4c#+'n2?P>V&jrAY#&H%SWMdi;@=Xgbg*U/HK2l#arSEhQ3C:4BoqOogX6^$Q;)dG3!'ib"!A:UABDt<NaWeenflN[o\u0AAg9=!
%Z`_+pALS9;!4=d<J\WAk6Z-J5M[4g_!_88?Rp,kVMdt)NA-&caJs5J)8R4QW.%c7jq#P`=dS4"$=N,:FA[;L27al2relDD2;=-]+
%.ta(one#W#QW@VK5S'nh&JV+%6r@E`e-P96[CHJ<_F0taE&XJA_$-$M8SJ2N"\"7lWo-W$RB_*N.!CH5L$rE9/^b08@d't8&1*FN
%;^FpQj5./RCsqTlG5#M#)%!hSNs"Vd"X7:V4&icka&DQ<".k<tB-bug32ebD/OG:b$=S$9.Mui.D^3#l"b.>A-DN[DICjMf@B/[&
%))TpDJsEYdq8NDN-n,lPhd/Z;Fno_iG>N.h+F/$2iB=$Qos?m(5FhSP1@Ih,"JE5mAjuJK+R"t'_k5d#lRj2HE7K3]JsK:0"*msI
%[#cZV$kTo_@7>?7Hb$YI`Q3s2.ePR5W67]X"KRI#Pte;!265Hb\OJqUh]BWuAU2nmqW/YqJ3_usHYJVcgc&D7I`:^_(Xhk8F-=*p
%NoQ-1-D3ql&5].(5U%gL.I*X^+N"'3@T*J^F#sZl/?m+kj(jUq:m*+Q&n#Z6K/s6qW+;&3r3.ea\(mu=iSP8r/!5455@Y_2@:K%D
%G>o,#M&i_GEUKl.-No=gBX>T;r:qNAXq`<4,*!+hJOmJr+X0#d9FCZ44=hWN+rEsCSNAk?U39=o\#jS],t\9`4>CLXLTi1q2A>li
%k61jR'Qjk=[-D6g$qRQ/HS<0gJm*0n8h.",AZ@>Mr]/3YLdUg8!1Q,s3$@(?\TdK;nUhC%k63K!S.1#;%?.Sh+-Gt`,iu5N*7'P/
%$oNEQG6\@>C+4it^Insif'8;f0<UDr`sE%Ziku+"jK!rH#-,5m,RQXDDdukN#QJ#-+Zc:(nUke^#@RU4(VU&J^7icTAL&E^V8lc1
%192$+TJX$5@U3Yn.AI58UuQ,W$'l?)cb8bB"4Y+*<:]H^[Q>iJr(6Qtj?OIi"9&m>&(.^+Q?DAP3m+7!pEY/WBH\o`Y?oACo(0Ju
%d['U.o)X6)4,+Ab*r9i4XA_3g_r>5M.tX&Se5"L*1UF?J4\2eqC@Q!fWIl;?C.-6'_)^2e]bQ]:]iN@[gd)AZYUfK/Mgq%icRbjY
%RF4\Tln;Ll#GNQV00Q$XU8uFqDc9a*f;K&Wm&dCF"c]G,6qSKMMg9<k<]?gZ97H>%*7,aR?kKJ'AH=99qX+L]=WOtK$]+!XeA-nr
%HFf=$]h5mRd2SA-a^-k/B(.@Mpq`CCq,+-qBt^*-!_4DC<H3)iWD:'r@_XD^TI#CGYgdi"9J(/(A<a*&WCA$&5[DXkO2-.4:1,\j
%bC(LTT;:U`65?JjC)?u<><:#S-NrA&i#Q2WV<tu7e\IS,8^0LOob(ZO<SdubM>@DYGpLh46B"/]b2T?"WesMW"-qU^AF^Fl7G4re
%d0gghgc;KY:2u\838Hq?lN#qUQ%O<IUC56GITs#hp$LHP>QWD?0]IgVnCQZV=/&s2CT1B76Von",4$a6rN[X,L#l-M::c#cD"Vdu
%qWP3MlGZ;sYZ6)Pr+X2=6;WbO@7,-M6CSM#+=,69o-s%N\q4;>`?!U/^F>M"LT"B5Jnfn/&Gu<u?$V0:rOoQ?+opj'<9A4O<-Q"1
%r,.Ub$Hb@-b$?M==p5>"/BN(7WDOKI_,JaRA\FSMJ5Hn1E!@ao]!EKd9!>0CX.$h3lbH7A3K)&+Lh5M[AMI$5[8cYM,iMYDfD;K>
%P,lI\R049J`Bbi90R4XC";k:UROhf5Ba<A!&8kE.,3'nH:24__+T=cYdu$6gXI?:H2bmQ2=SuWSL<7KYpo)_o>F)4i[cDQYjEIHQ
%TiS<Rb-efe!E`_>h-ZB@LZBd/,cr[\(GS,eU[7]iQ7P0e5>^Z4`:LeiXU\MWPe+jT9VWSmb>ThP[jn85P%plY"ALFJ`N<,TC4Hfh
%U;Y0hU=N,\icl^\*YbiY#-OgS]&)Gh!);2H*BL[#mNLP#pFQindo<nId@#[H:C]Eq>YKZ__=2Odk&nU0$r->&X@3<ASAH`6aG[W`
%p+1@pIm;BJl7,O<\Rd&5,[3^14G=TGI$t0pBI7^^!@sC[`5sJ*o9M.4QT#n]<lVpa"mQjo6!@q&WoZTYThIf/E`95bR\QcA,`K^R
%:)p[B]BjKWi!]A$l:"P=G\!C5'!<%lKj#TF8[_m&k"[#mH`!em3"D$P7fa_?>UuJ9JCMLVq9eFL1]]!.<T+[s-;iiGIC@5uX$@X)
%(ZJQ=#R.:Z.C*B9ZC4:;YpPbDIZ,bI84W1reoDtc8uHr3^J*E?F<''[;>?`S&aM@BLc'u=lTS.3,DbT3r+[K&j=gdA,U)9&X95ao
%IQO=/KL=Qf8OLk%]AHb^K>Y)O2O71>Y"?XkG5"<#A_b<@_ldUHgoK\Q7Tim`/f)IbbXdY4C83%prJ$IX]p,9?#`Fa%m])6)U'kcm
%'bl9LK`a\?\j7AHeVp0&9f)@eIT1MHKh59b=>!_"$K>/He7ltA:lJ,"-LGb%9CL\'iQ3Zs,XQ4G.$A(>rEXirPZ0sA/OCZsgEgN)
%l:Os]$>n>(/7cLN`a/B/iWdlTB@um$6DS>djL@8FZtYtJg3o)7HG"*\Mm8gQWPh>t4>GmGU"@t%Rog3m:lMN%:-+,W:tbA!Z[i./
%(90iL[0k*B)GJUg#a391Dm7.1NE52.!q<^=WJVfn#-ih$$HJ0ID3VU?U$g8tAPe_Xe_*3T**?Ps.JHkekn!NRK^#FHs"p*E,l8DQ
%_oUGem6Cg&H96`U:eLu/Gj$k-Mc:ZX)B<ak\$MR;LO#Lb=lIJJImkV^;VP&:WU:,G<[o9L$FuEPI(P--d#&O%NbVUp4XMOW]@e@q
%"'ITT-er@hQ7%+\0nR,1L/RG\Z/lC@jnkdmZuZJ`]DKD8%/9#C+85=+^XrtAm)C(lZ'k2jpPo0,f$&e?j*Rnrg]E"9Z4[KAn@MSL
%P!F/M,tG4><Zflm(.;S4P0.K>lu_Vkeb95\k#f9A"b+i@a&O^#.k:8GDUZ>$*JA"CP??$=qfG9o^qqt2b9"i%k3;U-j3C$IB7#-^
%cU0\la5qW]Q_REZ9jmMI+<G;4#$8U=#g3E+iW+Al*l;da&8F!qO5o`u6WK2<cZL2@%,eROScS30I57Ya[*#!Ag_Of\lfRWqc3)j7
%H[jJie\k,V>KqS'L>Z1u&ss$tl,7"#,?<]/T/-c-Z;^3Z;"AZI9qY'%Y30W1l,tb#/'pc9(!l,<*3EhP4Ug)N[qFORIGFc4kA9T_
%]8$E/0#@)0@5q<OYT._A^GNMXW7\H1_lt_9b(L;Ncf=6+Pb.Ss[UXUn_ekslad2gG7B!!Zpkk-Orlr$fqmcMHcIq'HFq4[,+<u7u
%)icf)3]r^P-(gDKhO*V=2B7YRb=,,$3)96G[\`k;a7Np[N`Cn+?&7`be*E(8+S`]7"RFY41&((-o=R<N*WQI-?k*,s!66QOK@3@Z
%L%26REDgn*#%1Xt!5O1YHQK)NV9tlI4/OY5E3'6ND<-CG2oT@tR"!(b+*lc#3UV?PF11h@rS/F^eA/fq)NKs(QTJpY!X*,?SBf0q
%Gq=siR.0A[36/kbpcOiAqoe$S"D,g,;K0q0q24LuocK*%Mg\\$EVn>UPC<IapP/6OeUn9r%a`:qcS_.5k@%r.E]YjEIFUk2V@onT
%\%!L.?4\p&^AG]\[k^*ApFr`83dfdb]CPLPEB5k!,W[!uh'T<jqZcKkcXWKo]g(sg7R6!uF_Q_KhnE8Cm)BbnOgIr5>ZH6l;uh3)
%ku8$Hjhgm[6r)M7Ejj`00'hD4/'_];K)(r)4PkMBk;]"/HQ9L:i]c,Oe"09F\gE]q`/%j9IC736*F=d1Fp-^T(@)C*Q_f-Ye)qXd
%de\>4W*Gli/*D#`BjGpIbH_b@ZutOq?-]<DG[,H^51`9f)giWM*oidYm<LoTE<:7e2E]sE(ZETUg8s\E$u+(k7?`Zr3LeskR-ZNS
%7S&g5EM0<Qq0BR+['%$IX37NWQ&kfYU5b^Y=5'!(-@\t[rZ2=$:U/7>p9]/`BFXFJ;R8)2reQ=Egkm(i'^fJ8U2Z^l'ake]5:52^
%;Ys"4*iLDSajcp2h55=#s7TRFUX_OLVc/rsa7HmsUu.a_HlRAPj.,Q)H&pEGbrO"/)G*H+m<!6H2"d)?aQf%*;KM(F\qLX=:#-W/
%[*p;I$U5.)/dP&.j)i>KYNt'eCB<sr59?_deEpqqlY_nb/GfVn#G-]4VgEdI4X7nI;hZTZBoU"b%Z3G)3?(*&9i2R?cMN2O;H[e)
%Ft12Wg:eOt0LYh_TC/*?Ac:@n"XB@7^>>bd"l"!pIGJa\!4Zt:54C\g3SX9=]*:Q,A(2m?OE]P^<Ki7@eYHT?&4plUn075_aL=`T
%KV[MFkCGH/2DVQ3l&KIbf=sILI[cVAfV]\bm<i5aS+PHVK9$,\_k#8i4n%RY1R,`R*?L;\?`duf/KdhY9L0)Z@+/-Y;Q7.ISe-a\
%/*qX'fHdWM*bW):l`.*\/h>W%d?M2uB4FFP-5t[+4XONZh;@8.r=G%=]fkcGbq%>d`e,fe55=h.U2<&QZk:heqLFbjC*OKR]\F9P
%U$,4kk@%>g!&rf5g6R0+]qj9dP[,0BIB'Op_=n\R`Mq=/A+sEpM9`*7J&_0JBN7c1V^nl:E8l<C@YLsYog!'A8Y1=.GXRn\9hok*
%gs)YMEm:l0ESL`phrAOnZnJJPhUVo,m/4B>7dX,^_u$IgUn=75]+;Orm@<S2C%mc%kaqjF]Qr)BIC2CALW`!'(*1fGPSUSA);EBZ
%4sk/<'f2j=cNE\>5S]g<4\Y84p,oJ,2H`*_Vjh:\G[>UN`"J+Mg]p"aA"W2fH1u]:!sAOd(oSl0IgjAT'LX+65)#07em5_RWLV($
%+*/(rJni!Y+T6;d!oC]JQ?*N8BNnp5&eO5r-c/UcZcRWpA(#;ih)l00%s"<1mFg&X6PqUh>BT/BGiasJJJ<-4OAdk'(I3hepgPdX
%]M71B)U?,pS`Ao^C8cI6B=gn(Wqr$B&]t=kGir>da*h4al#,B;G9;&NiLK93-f+Cog)2qW0nQ?i`BJNN+eS*nYZ!%Sg`ZkFDejkH
%E(Q)3RIs6.Y<3>+]=?2*J*j<$(DnR8,:WNbI9khYNsffgIWk/C54IA%ICclmgeSF.m.),B"\)"P2o2C0#S?NVW`lo;0@d55X\MN%
%XBQ9lB1i&O]sBrLnZ].=I;o<pUebt$mrN>L_oDqiBarh.X8B\RoB0rY:O2+Frd]BN4H5rfJNAU04@fWlP""HUqb(3iYXr*h!lo)@
%hJep\Gg*dUS0`iMgr60Tn"cPP`>KP$>"%Ek#cR$!/Zj[Z-lj&1P^jOC$Ac'ddP[TPUg%Nq'<?FjqLs>p1u-UY/=o)o%cBXJ#6jR!
%13E!2qYAkaD?W)apfGXMXDnoK+6,7a-e#TQE:%Z*j_E^Q.Fc.qRF&a7\OLILGJl:/6AnO6+!:Ioos]kE6)EQdLe/:FS!;BNiMX'*
%ctZ3V:no,=b.!+D%\um.3AU"\e%2(4@rA=`#&KJAMtQ5Jn5J"WO@[L0/T_\`XdI?(0:I'WrYJDG:=$+QnM/Z=npXfbd"=Nk='`ck
%ji.Yl2Qs)OViIW$fU_a[rgd,MY'c]<'SRGgX&sGb%]$c@99eU[R>@HR.\MpHCj)n87<iV]O-rfPnYit&A8DB_WYrCZ$?8L#]3W/W
%5KrH%"BBW_rE-VW,l/oo1$\JL9@2W7BU9O%K.uE*=qS!K1<3f,qH5+D/_t!#+Ai`C5Z+5WbMo"<HecC..uPVYCO:?Ui_E^rIRB(,
%f?aV]#C8W]bGAB'-):<5LFBL_'ub\Kb^GiTL%&V?6\Hhh**rl3!Yo7%S![X"YRE:`pW]NW^9Qu-FO?GP`U43E'$*>+8pEt3[s\Z@
%E:%]-P$K"P,/Ms3'00CZHb'#-.3o3/IK-Od1RL=3hfAP9Q`L37MMDGtd_1hSkaZTLS$Z-4Uk-)f&DAXV22S$ISFWf&I)f-D3Uh=1
%38K@l0s>_ZH.bP+X,"@<]+-#28KbUnc'trR!.aA6Rn>)L$0R'^W12;A,]\taF+L"'MT2V'gD\U<UVm>n*SfCG?g#]B_,GRFrZ]Q$
%$<)`fk_po:%3!(U^4Zl268G\(0CL\^c4&VZ$h;-m.7XGm\>]`%q_A*3YC+e`[pi(>:_UsgqKjXZO-NI(j_h7ja;l60h?=4&5hfOo
%HleK,@%,C$E?Mf5RUbd7h55U+45J(plFX-S[SA4DALP1ZlQ27BO*-*LJ`ecUe%J!7G,"uopG#O!:"#6)VM4bpd3$CZ<I\+Id$3=(
%k&FM49f[84p0`#FQ-MZ6JLdnN:oP>t2X-MD)Z-tk*Y._$M(TnX,Wh0iM(TnW<E`s9l1l.7)9"?WoNA0>$VR/E6-WNK$6N39C(ae-
%/&s-FD]K+H*&U&n1"<<ILY@%KT!ug[#j?Y\*]RTZMpZEkG)5lN^qW!'9`O=h-8!Jc$>(iqqgSEO:$MspFJhMtrKq?B*2GPBV/M9!
%eE&\e_n-EeC1M)*Eui`DW8H+5ZEgMul'uUp!\0p.=$7o/G2M,(i;F)IFRKb;\R^?Nm;u'?d`a8756Y$$&_<5gOuU4=A=osm)$"^-
%`rl")/'67T-b?!XXD:4UA#aZa^tMs[K,#srHgSl`Jr+`_4MZX%ZN*/okRM]9Yj@0*FbO/DS;=PULEJh?UIgce4+Zg%+t!5pJh^#/
%%^RR@F"StIo(KH*\V7bLE5?DheU-NAc`%:p#X-PS@RV[1eZ-Pq?jnH`3l,&q[r\HM;@A_E]rkdN81P.]?Q$cLKlNKc;8_h(VDbpS
%H._l$K4lO=!3'7gMjXV-FVN0bYeZ\k]+!9s8<QR2oSYn9ZEa3DpdlNjoZVhB"g0kJ=uUHMN(%TXb"l7C0ofEHC1'GN#:F_7\M!-"
%_Df<TCCnHV7euVGG/#A<`)+uF8'rk;HV)NpOpu*ULgAtfS:>T-rTP-tP=lBH$(t2\?3+qhA?TgG+%`RV'83i>7KcT;@R<#V1!%P6
%&POSg=rq5qLaUX#^N*(nS+_!d`GB=USdZds3M"YB>'X@r>;Z'Np<I+0)=DRZ5O;26UU\Ah6D<]Nn=i(j@hmT&Pt4$^3E86ik)3E:
%QZ+V<,,DPg[3YT%gc?!TAW;X0Hc#>!+"#ffGmm^jk)PhGJL9K&gDYaRhGLlagRfd_l6SWT_Nfe]RGcs#]gEK[mUHr&N:%Hd"VY+W
%A`CZK1E!,6P8G[e'OtOa9tDl<'WK%6JS3o<AFAHt%n??ccYTD='b'[c_8NXBaYo%A>4gt/<kq>!9TU/MV[%#rFke>"]7eR>280SH
%Da6F(TC/)lA\ACg/$L)K\aS!Yod#_o3S-D@4!3bmmfUn2S[6!mm*@_JZoQaKGce-6E-WHA4E`M6#B%qs!"U&&;g3?fZ0+h7b?dM^
%S'SukLW>iWH:nb^b[bcWgi-KV>18L/=DG_tMPW2WO^1r,.]j&'I7Zg]AZXs:XQP:ZZbfITl![IKkJC3UeuDK`o8]\&Bg'Zr2u:$Y
%H:O^]=Ue4l&D-&JZC8.7L:@`N#Pl\*LfNYc3iEo<g'bVXX[OhJ_dN$Y2TtDZVd1R2A;TqlD2\#*oOL3"YRcAm22IuGSS9%g"^NKZ
%7b6&JUrkaIjm$4AL64Z$4=1fipRU+Fh@Fa(p\p[I3N%:W&_@=]Gmoq=8:IM>$G-(_H1dp(X0P.:!lIJ<,q5%YMXe,'&P24q2q<dB
%XcQcTl3-`(bElH\-d(I,$04D@""!Xf;QOq#`jDJWp:Mrr6r3Eb3t8n"[a-0\9^>j-4-EU=9&e>RBtklnXE2;"FMFUH4RaE&F11fd
%r\H(tJ1#s!L!ES"2SUj,&"/UlE<@ZcOB"35iu`B9#m7[=K&7c#h'HdnT]k+iUCT:[X(V3[c<Xk@l)9VUHo0A.S[F$/&%=2]WLQ\8
%]Qt2l2+_S'bd%#Ri),ReJYPlBQD/''*^pHjg>[D*FT.-Hkj:B[-W,$rh6lSJonbH]`k%))MpYoEkTg/m[HS1e12YT]!/o)8!ko^,
%&u<J^^^R5p0o.2S,sH#t0tYV<M\Y\&eaAf+6H_Ut#nrC7L/4H[EaRe6i>XJ16@e1W3Z/hd86^%1+;KS_-n>/4<-E@8?h#_DW."#V
%RssjE$2SnU##Ol.-2=3Y)p<]>HJQ6gPj`fX,V5A]rq=NplfC`?j1A1e9Af-_I8==X^lNkc3%DA*Z(tAPn)@@2m1QK7#`hBjRgAkg
%;::HZql9pf64Ari%\@$Dc:*u4LrmH1q+@Z'M#BhsrtK]$K\S`jimEf/C,sf@,%#<F*W9>24GN&80_r:&)Oi?(S+!jY$fsaO-TLjr
%$nPc\p6`T62:(UXn<\W$-B"!7WUk=\\7ZMEO,V1p!kd);aH(qYl'+tJ-M`B!cV<!C+k:'X/q*u#Xr8D!!oFY;_gBG;mHt'[C^F.C
%pb3KJiC&:l"UkEop8HIT+Ji/f=SJ)&(A/m[k0T#g6r)ZUl&QSMhC@Gh0/q/RI(<N9f4lFS]9bUV\(gh$1PnG<Sa9r_$6O@OW*NF%
%Fq>;&Z,ndO:%1'@^\eDb]%SO&Z9S\-$-m^.-4Hp;:jnSY(n)RB@YSNha2kq`P#F#E[H=?h@QUG/o7]M4E=m^(5X?Mr'^EPmM(Od.
%k!<eT3(':_X*KQD<Tn\=JEV%9KbST`.Y;KbS#5.d6bA(QWEq-D9t2\;(F$M@NEM<HG\2K7TG15Wc1;nu-Dm,1IG#SeV&CociX`>J
%)bjJ64ZV#e*AtARa<]^3.?t[,ZWZbWqg75YjhY10nNU[F_poM,QP+BL>I3a"Mg1Z[BQ5=p'Vru3&r(#G`WLeK-5WfSN?kg9%tkrl
%)p`r@gU&W7hejsl9dMT?T+5DBZKLt)O%GAd]"c:*q]YC6]g(m[3ljJcStAc>*i"FOkNgjFFZ4^Z=39d:_;?>uDEBBig&"$sHD!EW
%WN&+B_Cb!^<+I2g'R@5\C:jBX9S=DHCS/btgAsMEAEmT,GO1L]18<*^Q(C$LK31\h)<\"V@a._.Z=)K/"'sj3]:ZoL0<i9AfOMMM
%;4l/:pXo9fZ&$&PnXjf_`L8e6$##WZI#ugF0:&,B<D!o#at#Fn@UR:"b/*d1kjk&=nSTF%$@EZGpo*LB6^;I.e],*_&i&SN@7IXk
%:X+(nWjA.oZ#O%?XHnZL(Dqe#.t"[$,g<=[6OUX7-!ErR&<.fC)T9HiYV`'8GL-,h!Pis8EaRj-bJIt;bC>Gp?*q]t;eN%[RY68g
%$Rd;V+\Cj`]Os4'3q[h5d<(#JkXpY6U`[8U6J[m%Smo1PS,=/>I?XpXbluq:ietI-J#"5+9tG!E)bH(99t+J0cD(AmFGab@C61V/
%<A&NSpoVIIi50:;H/]0Veau7@*;uC9\Y$A=?fL49qitG#A\G@N-`Q@`SC4%\qZ0U*->,?&o/XmA.0Sc\>m5bK"f2AFZ2kAjEaWm`
%M'Jh3lD,R.jJAqjbH%Um@7IS;W`K?p?+D^pZd<\J8An+Jq3rl`#[3+B)e<M_#i7"bl#-@\WI2Mr9652NEYjH&PgfkqI+LG$>GGp=
%ltX5L+aFPq]9R2RG5[SZl-8M<XH8&fnDnbJ'F9PdQ!'&6KYi91Ng`jM:ro)J\;.Jf9HgZ;.20\,dZd-k-G*TIW';-Zht%Y1kh"&R
%_u9][,KWME3u.TaqEP6:.T<d3NXm1F)UZ&&NN.ZF1kJjo-*+N_8T^-V.T,0jALk1/;BG[hi_!,LE]LYkOucDUW'6&9"Y0n(\SOOf
%Zph6t`@)B6)kmdsVJMj+Pc!8O\\OlP:'h@si!04*&mAG4d8Ft]f,N.cXYb,D!7F4-9JVI9865:B=0)6eBeuVT;j"NtCf8*HQj(cX
%N22o@e:h'&WDC0fno)942CJ]NrpX]Vlm.dr"h(&WJjm"O"d4m&X;.V*:im.e,Z8eg]b^6l%2NZ&cgp5BKW<4"P!D.B$Leq+bik(P
%jrHR!)+R;V:-EL=k;4n70Xr_J.qmV=*S9+O0ae8$=aJ9+:oi%*&VUiL"<[su$:j=G)Q^^5Uk\[t64YFHQh6E\+r*MuXU)K__4Rg\
%%?3B@$[`Ja=]4t-,/C"NHl)4Ep<83Bm)[V0'V:Hk$DR5>-0b.Irk04\`OEqg*7l3n_a0TpMqr8n")XfDX3I7A:7"!m\H(`LWA^N%
%]*qG@,0^*Ddl@cE"omSPkudW_]iQh]JG[CugujR6bl-^^gRtKahq'mRh"uN"[qGV1J%_i5L'SmiC5icVGou#m1rsLk&c>AQ`p:Ct
%9O"_X)1YmcPBpsA\K]&L4pnZ/)*Eq4LUR`OKYOd8!-.3D_h&j59Y5"a%+/P.Of:9&IZn7u12HO5J"2X"51P/W+GJ@';'#p2D/3Q3
%PCPPQ(I_XV/u[T9R/U(=!5*2%DLO;fT\VhGmm$qh#7LtO/$;cXp7[i'"Xb(\)9p_ZhmWq@3-\G+ShCF*+-=;h.u)JWAG\2<o'UHb
%Pm7F5AZoQd_`7dhATUg];l>QA=8^lLbZ:u'"([$Pb2RF=$^.NsC""C,$Kk>CTN=&Y86Q_,U).:aZO;RV"Feq5H35@Zr_?eV5?%-b
%BP%uj6t!A/aoeCt!-I9,,PmnQNDq$5puc0YYL$+=/ZTb#B8$t::fqbBb@!b;:gT)UV0TbfY0n*$ZRXQScamC('gJS*:1dInPc[:5
%/fbNAoge1Z*_\UGj)/V'E9flX"f8iP]TH!0K6A!\).q)hobs!4dNr,&:H.'t<5$6B!r*lkM+g?_W)p\tlb<d26pe@XHWLlp6:&3$
%eH:7nHIHu;TfEi=!*UY#UG8ZBbbO%dA(1gn2<nqFf;P#ll@"`)"O2Wd>Y(!/F<Z*"NH@*BJJkh0't_*Sl*%..^DcWA<W[3>,p"7S
%]FIu\.<Q22]uIc^.1f97X!rQCaO\D!'#Wpk;B$F"nc`0&1dS0c4Z[qkKUr`iGI$/<k<Zq`MnW05&Xj3'/4S);%A`aGrA3bG$?AVJ
%-q5Fj<dI:(,#4jo/J@[^MZ0Xo)^YijCH7tZ)G=W58Ls7P@)V_^^R4)(K2RpF-dW)SFmng#9%bFlkLQu/cN#^u8N%Mk"2Ge"3`[iZ
%b1CRrYbO-[nhDcM>h:*fWA]HJ+jt/MZikJ.DhKNBK.Mu^qPf$t)i[34JRrYUGj-?^AT0`54"r9&(,:DMpnt0efrZ<[=RMW&2l._@
%_m+>r.'):D$W?kM)s"an"p.*,55QM7Iltbi?`ghgAH<ofEJ!^iL1EZJP1LlF/1V*IKnn8MEXd[8a\'k-`_8FOSjC26`Hmn[p,aU&
%1[)JHcN=c,P'5c33mhBE*ku#_%G+<uZgJ>sTb$.3L50J+m-"5EXXpO%,*5-terSeNH[OW>0e%P]C/^^b"7NKVVgBNHQ.[C:N^*oE
%>*sC(dX[LCNe7TSMKAh'N>^Q>hIpj7.)T"A%+5m=U-gmFL5r!B&k=H<3E&Ka!;A1/ntFZ-V"G[@6/Wj+.m`CVWo3o-)qh"%@F)#U
%c,.P,b:7G<,Mf-(:5]k;"e%]3&mG@5",rtE:>$a.!j8qf\hVL].dmd[.pYNX#W;f0i*[iG2KW)CQiJF)XAgT-[_CL1;fnuN)SAsC
%(GC2Gl9L\8e,(9fp,<\rn!_rp-[:ct'C$*s$de>j6!K\U(T$N%@MmC0#+l$6^rjWQ_"2UA@#5nPob3u!dO&g)<*iSf/u#)3i9#<;
%,$2!&cNe3&\ZG$GQ]3O#arWlD7As<Wd\==6PeK]R-;lTuFM`otQ"D<9-RjV2Q^CUD]%`_JhPEs=okAn'CNk3)fAcOkVe@r.alBgU
%k4ta_`_=Wlcp`;_e^OuqZ8``gHq#jD?@O%X/4teR_t!C>g]/P.[e_R$]cn2[DBtm.07TP_RcJq.j8b$k!;e;XSdr2Egr2e]Tn'/A
%"\;n["i!ND+3VD!F]5#0;9Y\8Xpp(<+1]*KoH*d%$I1glpEWsACe_/5n_G>dRGn=Fb^/ZT*tTj.Z!'FN/EF=m9"QLp-CJgeg^Ts,
%UNC/?c;*`U0\$aR-)bohZV%23FcWJD=/tH:m/@V6hE3ug;oV;.<i7PU('OTSe<7,'U7@[X"&lhDDoH^.[5^0=.7k+U'/kuVJl7##
%A_XE7qG3R657rd1O#d_+LB(*F[Yu(4.U\U*"isNlBi8_?;993()S;,"5$1cAL[g:/(2:-^;]q4GIM0%_R$F;sNVI(2kh4?nK/@2]
%;WPu>,$hIQRRmW-Y%3dEK$bU*[@L9>iYK-JK%fO+88t<0[PYtKpLTa;S&bB\SofkEa5\&5G:h7.o<;shfdu6Jrrdbc*`D9dQ`*b`
%VIj#$pE@8!kMJqS0Ypt9,t/uEahF.=HlN`EhR_A5$`c%bK-Ql\MD4XJ;7$n2l;WIk"KAiWXkM$7"9_Ag4tr2"EIlW:A4>G!]\^S-
%jJ(Hb%%XXra@K$[R5IXoFRer]k`c*5N@d,@?3n[nOuJYm<q+]f6O\HpdS!DQ!s]Soi*]'JBrB3Mj!sFJV,=EPZYWbt:*17"0`&$I
%0#o0!!I]2)M1-+hKS\6A'L.%#`;V+`gOK2uoAea-bK'YXn,N2JrGONET]54KUm/0O0hQ1P0+X']:ddQa3h;Doq#Xj]]Z(a084N[J
%7Jl*JFS60MdO!N!r)+=L't'B.G-56F`@;j1TO*t?6YYi^(P=T>kO!%]];_I#Ui27D_+WT^i%&,>U,itU"::)_kSBo>0,gD5bf[).
%5Ts[KG+R:g9h0q--Rpt!^oEJia7YmidUis(hG!#)U52fPLG<*C2g7$&rG;22$&Wd>rfsgD/TcD)6&NQ5W_m?k8)tIQf."[taM4Z0
%ED%"TH?J8/X>"S6g.3msBU&O(]uh-?k_tjJNJ/?EQ#0j+'22"4f1DnX?d@qpGmVt)mno&(0D=kf#FC<YrX;)BZ)oqDlIT#4HLuR,
%6ItY!%2?cS%8)-YY,?s@D\#%2#4CNJ`_/FilX/0Sgl'rTL]?dg+k=daf=r4JJ_`P'Ai%-mY=e9]oe40G!-lt-WRtmU+$'lt_;O+'
%c:V2g=g\ZY)cCL1gq.6<ostluL8rk:14o?_JL+P_Sc]!sDGR1hA,4jR-bT\ONQ<JaqooA&XmmVAICnY:Co4[f6$FTBKbk=p",hBV
%=ReN>n_8a?S8+!lrXI7U%OMaP)nc%!JFSq$;3,nr"REHQM)/QUr;]V%Hl$69*b'ZXAJu[+cpV'S:qLE3C2pi0=]7NJl]aR;k[-L)
%5d9]I'@(Cm9:bRn[_*daQ!VZno'/ir>`8+;$M%&UjR%kJStaYEU`GC1Kt',pK@nU3*S)n%b:8T[p8ITsK)cE&AEfF8+99p!7aU3S
%or@4;MtTLp<D2iI(-oQQ3>rMeql^YeQ(oDcnk=T^_#Aq'Dd8Kp*oE]'TL!+f.H]3DWFM'%dVQ!q7!p7F`[+]/c+%M>$g`f/?di/q
%ES5:40Nf!-kcW"BmGDuC=hg$73U0d90-tAKe4%[iY'juh?U8<l<79@I<_5+5?jT,57T.eQ4S=R<H1Er.(gM9](C#&&Ucl6p41!dH
%"jO(?!*sf.GU/?jIeFsrXj&c(na#50RgP!MbQ;hU&l:"<4,?b^76I5f&VBHcV!;oZkXC#n@:3Ui!Sh1F'&#98AZo77L2,!@Okgq.
%PSAasD1_Btm"k"-4W.maP,U<-`^[W=_o]RRq;_os)KeUK\ZFpRp(UZgA_2US(3ITa/ltGV&#(n/s1U.ldd+jQo$MQR-lomc<i%Kl
%E2.&;Wu("/1.%<>?F@$RDE;FkKYLLUUaq/.WJsnI_C#%6oI;)STe@./[kbVIV/)F\?m%?20u3+g&UOn5.9aZ`S[F>6</AbOY2ii[
%)U0qB#/:pgL!,VFkg0OIjJ</=rYe[=eo['Q1]gCdkR?,0D>3IFIJMfG(l-%r?.]3340mpQ$V=5f0C%!uBmA#2OlluoHjZl^Z7a.m
%*3%[7q#_h*eOpSqP\+W[@jPjM,&AV@"ZVf$/a6@QlsS*LmUS<Ema"@9Ic!)>E&8OP6(h\mce72()5#HYGHD+mTkafOP$Z>g*ddH:
%6=7HTK-*cRHZrdY!uWCk!U3oh$F=]eWh];Z\&-WF-!OV^H[\E8=1k3BBEmW@'8/ola]ADV))XTEkb2GEV.qTpRUfS/d/q=9jF"aP
%H8NkWIg@ATGR67[Hcg+9]p9+U!*sUKH>.=H9M]goldZij8XAj!mhgS1m[!a63#;\7-SG7s.-A/seen+fh`U9bUNHNe$BYOE*MnhZ
%Pm5N"XUZ%W>P"F4nAJL1/pjr>OJe/<J$H#<;V.J@<A"Y<VWg]EGaaV^5G/HFo`tDSW!B*Y2juY-"L(I1_jH?'#$JjVoL\`ugAXH2
%qWEp:_t"kP2bpC$;h@(9kNSs$8Q_:`*[t#N3S&@XbK'XX_oL1ZiLbE_0Bjn-G^"_VX+e762kHN-A=#V;dfuN_7mXbO[W`'E9R%%d
%W8@'VS=-rNJi(W==P'hYjd=p@BI]Wm(AGXQ>nZ<O!Rq@;LPQrA5"VKQ55*?K&/*pHk]nBN\[^P=EXSTUi7:6-rm9BpK>**_NV7k'
%2aKI8&:q!hU'.JT_<NKW+\p""JNk2%c5c`_QW5oSX9uT;IL%sSSf)K=L$GN$MI,pI:gdXO.k7pW5P_6XSme^&):j"-Yq>=GA+E''
%WY/%lfcp@Yft//:VkLN_$@'cPk>C1Q.kZu$'tlH&.p+.rIGI$4Yl\"dAVJd1QLu6I0o>2g#C8J=IF&^4LW5@kF7adZp<fkK(Z5u[
%b=DTk;#e+6KB1TUFDt9DnMDmU.4cSoLE1.)%i^uZ_I!-t^A8aM!i8uf=sP'DO[6"M0I!2;WDa))(A4K?:HMq%aH@SO/&8)8b%X/3
%(&B$X4^Po)Sl)Q.G9"n/q[>"V<H4l[DsbY<,0MP-;de$iUH!RE\/O0,iR&-c-5:hAW<d1kYZH_.O='/;]tCCdX,n+SFt_5uB>o,(
%O,k@mnbre>o*mbJ"]b1s<7cTd=trKA0&6K=Skq[7bc"YjN@d8FP>p.,Sbh1A']iC*!/7.47ICtAl%AjXcJj3;p'eNTNF,N9j:V+f
%hO=A6Y3dh0'B$Ui(,?u-=<mnXApk#7ZKlA*V<SXREtRm7Q[eMCHR_Ko6ic8NPr7iRBgu!%)&6#jNP.tNNM8O->rt,;LsTJtVKJE)
%c[CB`ec&#9Wd@lF.)O.Q?E8FB6QhI2*[SDNG(,*KRku\2@(7-.:;'W5\Za!k1*%(eT.9CU.p(K^m05QV;BL]hZsn5ok\XR+X&P7W
%6Um=LLsgfM#n-Wg[gT]D=;Lp$k2)ueE[89BSf?%+\3jtl%E<V1Ztns+@!O/u"PH%O%h)Zms8C,RXW8Z_hXbo6Ff!e]:TAX0nrOI"
%M#FUP>#5tVaX=HKgGG@PIr_.qQUkZU$^gcopMRq.1USXBr0.pdl]L\0LSX2V4!oR[o!PS_#[(LLZeVXMkVHs+"d0!]eNo-:_(?l*
%?H[eJo-_Q:1mLJZI?#"h8mMk]NR(l[s'=q,GB3+I*4OE=YF$D4p5jpkd^gTXEA79%0l;,3\.Lkf]'&Z5i@Q*!7=`n`JeE6peXgPg
%5)U5L_Li!J6O0`is([3CMo#Ypo5K)=S?r<T5[jd\:8MUKn"HE\q?:''3l\\HeH*5I(JnfJ?)B9J[b&k-&LB9g-=;$rTS(s5%W5]d
%!`$e$Q/GC[V$o=kpt>m$<B?%3URLM_<..*<_A=err1>XlE02jMOA3\(feSu>J(LO76D3MsJ0[ug/16kLOo+<=Esu"7MN?`.$ALn6
%$jCVQ1"DeOhnXnUJ7Ri4*)nj]*9pM6hUkkNkRsd9Em?MfIYCb:7qf$P'0s_>&HRl0._Wo5mdLIr;)+L(R!$G0#D@h=-uL,4qr!sO
%nhl*_;6$7%V\QlETqq^.8@2)q7+$L+R&6h9.!p@@#T6J+T-RgBEAL30/;dDqkY,UN=62]gMJED/:!De0nS>3_&C/QD'ffB"I9A?7
%qOX8DZn\P+HhNsamdZob-eejtFhc)EVkt;6o0P/U7R]mE-LhrK4!P>LZp2=X.ENTU`LS)o6>L-c%^BFqmi8\/C\p4Vn^UCpAb`h`
%bL0o:qS887$TdLW4WEJm1Z=58dj\+lZ`'-LkV!hteL"GABV1?r;bp@GZp74LUq!<Vio<WZ/$5K8NRH+"o*RMo2.bso`9nT!-])6Y
%OX`Xog!XtD5u3P4PP=E#fAX`U0?`iW-.[>djcNDqhjO@#_\1!=q9S(t-(l(;7))1=ZoT).;F1'<F*4*qEZh;HW^:=oFiptZ?5=qa
%.K6Ei#$\3)qh&pS6\VJoB^sB?c+5EcDg";UU)Ni)?#7O7G+d'%/kB7kgqO@Y(&>#,A9CWiT0)!(W+o/Wqr/,;d0mCePf)2P:SSO1
%9P>&o&n_LELK+e<EdE6#<'"^NEfC+'dB;k7':^hWN3%2c-+$dg;R'BM#>H1f@/0gV!%73po?_<XCSAkK1V(s:idcG<12da6WCc<3
%PZ+K.#RRp1P0e_3a'B%pQfZD%mkaFR2X<je(6r?>XP.VJ*cp_M:a`aJMt2tN*'*:O]KtrrgWX>k)Teq;Xppp5^XroSm[[cYLZc0&
%XJc2M6$-(kF#sCQQP`/H>"QR]EUkW02\[AHr^lHOeJ`'0&6.3S=Hqrh4@kt:\l4U[n0F)T<XB&H'W)45N-!*[e4"IGDcG)jWlhW;
%F??AH[p$)$c79oX?mq1Cr$INAMHE\d,sT4&H5/M1'br"PrDI(Ma`jQn[1J*?<su9tGR!M?R24Pb`\BBD?SYr3phhPL<Bf1)lf*?R
%&c:dDaA/uBdB92D:AU1qZU.us![XIOG$pN5-m(O?4%-O:[$:Wmc/7n#Bh@eC8_Y30h,:D+i2*<LkH(Q[W>6*=84j)Xj#/dLB6:$1
%^:(0Ip/jU6HgFL$YmDLDOe^R)*5<hrNuU)GN2-4hnnpf$W[apreDjooU3,oZ_,2f(K[Zlsri1?5jYVf<(S`K*3NKMcWt5FS:>DH$
%cuA)rh+)r8%TMprFfpMM?`gumoDS[EQR>Tf+&4MlVSMl?1[gG=,/^+2cN9QUGF3EaO88(;5uf,;=^!kl]N>5pV$C#nD)d<kWh3@,
%;Mia4p9'd8'f9uJ1CMX(naUd*?1'W6VKWb)$Pe4QqqJ1K98%oYoQ-6k_jJ%P#<3;C[)gNf<B?Z,Y#.5\F\?5aC4m2JrX":S6]2-Y
%]JViIPK!p*7l+Q1gpTRB9PPr:r6FP1ebIBD'P;neG-_$BhFn<<FNj#3'7%/>B1/hS&q3;n[RHj)`DkC`G7@ahc],56V![@!d>`6U
%FU`3%/KMG+=IX%boS_ei<$QZOq)+!]@0ktEfr<Yr'S7-`EOMG,>1r"u+sIM$]="u9J.bI",!Ddo26-#!_eT7m]&m;eW@f-*n!lG`
%Z?f0Ir$E]KSc`H#l.&'Q99416GN7uc-#t=+$+Tq.H[VeB/Wero<@W,B#JVc3?2d0t;(L*YL:kg-Nm&oU-0`qhVe5$=3pW"5I&O=<
%=4%0cem/4+(>/a#j7GiYZ&lqXk,h?<03KgqTQVI39;*BSJ&6n=pItp&rB6@8)EREQ)U0nWOV*K3%[7-,GV3-+/Wr2i'$pZ@BTY9?
%B9jJ6i@UE@Li_lIJ%Lp5oRNe(0ds@B-cp<Z<SCLp@elgjP4EXa$+IUO33(GdK0Wf8\b0*4"Aa<^R.fbY5=_"Q8&kfKfFuD;h<C(;
%c@oZbrc-JN/R/?i?;r?rdTaElBn\&Z84BMfVNQHN*I5RB\0S7p;6"I$=4po27GkO#'lPb5A*kff11+h9[Pb]fX*qgP(jq.go5YV/
%;P_p@\Cfrh1S80$c@P<X_VQ\88tOU_'SM%kK[/2KXZ=p-3':ZFVq8>@E+Ja@oGFegjQ,<?cMR2ED6U<=b0lg7>6KX&?sVK\@WNUI
%N+Wl^QZkVQ%uYg#C8,eF$t90>=)Lef@QTj>e<;5`YQ.r[;EMeTlnGr:S@5%hY"oZ^gsQU:TPEo+OB]jj#BJTW?u#V]0$*^-[7^6.
%3ZUrnB%&cS=$=CrLPotOeSqQV\86kO?]Vl@Me:HX\]T?W4qBnpZ7SXmc&_TLjB=\l0r@n%LKj&VG\Y;Z.uShcN`ps0p)IJ5<:/ZF
%"A@$U'*dh\#W*.<)=pUUo%N8#/ILQ<2V(5g?"=rpNg/.%3DK-M$L.UaB`5Q^755l_;<16qK6[//aG?(/gh>@XGD.8?_f[_2r/1`^
%`a/fRXk#h$*.91\l#fijNU0"[?4d<:Xs-I"17`D4^Sh-0NTk#PgoHaRm,E`JOO<a&;Q6;k+s0H(?Vi<%^hM[+-s.QG#i5B&#EZ.2
%iE7.Mq2Eh=T](@d;5@]N;IEKCCq(snlGkZ5Mf@3"p3A7VA]!/+M*G"GD!*`P4%_8#^PJc@LG^]O;Z6gO]7`"[89KROqWIN#BJos&
%kTqls4Dmu/ce$4U6'2WXKlSGpY+ga5c'0bX0.X5m_Q>!o.oHsc:D"Ng'lZrYVhLf"a\u>b2oocb!"^B2V0$Edg0,W05+Fc;]k>sC
%$XXXRi"pp:8P$+-WH6>rSk,Nli..8039Ja&g+"TQ;*(N9E./4a675C0'29sAeg'68D)e+M1=F^e4KI&@(W"1:j`H3cJNukF5&iSB
%[H'$5:1$uBE-R+.\3OT5DQb7`\=/@;=oJQ1LesB_["sRA6>b;9>TGmZ=3'EOW9OCRGmWr7ma$bPjP9M*Y2"Z'@tX2@7pG9Om>g(F
%TI`8[aNGkKa^c"/$k1<63`)5J<X<7IU6f5XpSZc4nd+&:)._!'(L,<(H@e`upOG*%dXhWKcLkocU%/@1\BKs)n@EOR1VhH,1Dd."
%4qsm/qIBcYV(@Wpl,l1P.)C*.LkZSAOWUFPEkVa]]d-'X-SmO,?g&7Rc&dJ%"8)9>:B<7++Z)oA?(cXs:A>e/OO#"Z)5pbZB)\R^
%9bt`_MM/mPk-8CfT6AlK$tc3SH8mT=E;,8F4WnV-FNP=Dpq2-mamA]u6ZZ&.@A'@MF6^F#Y]B"XB5gi?;XAb/A>;d_eh6-[.7L3u
%6r.RJ,>m^M/hM-n?`41#JeXI9FJp.M`1H#0Vh64/0fU)r%udeph:8NXYKa[>=MpEb7NY$eeK0>K<]in[K`#eR=7-nd,;t[f9T%l-
%,I=lV2d%<E%aEJ6,"GWq,:QB'Ibbjc[To9:Esd:#'BdRG\?%TYX#hRL\o1L>BcEn1EOJ$sUp]?.'+^37-5r`4kkc^7?N?gA3s*=m
%iM^V%NC%Rg?*<n,.gggBLi,_Z]0_NN[QG]#?p-E`1Q>[$4?jF=D\!,U>Y:i#,2>r]QF0f)S3`Y:/k<,Qp=cjXZj26pHfQ2O.QKF@
%-q>ri(56W:*"aT<43P[K%ctSHiAOSuZ[[0Zq3rGjLa:<LT3(KEXlZQO&VssfA%^#>peb7W@"YnRq"[GdH:6J@4!9#U@PK:Kj#p%^
%\AM.irm"?9.LdNVO0`_0aK>_MCQ$;O21TrqD]A:MS:_PKF'[a)F?]4*(YrX8!k<'n81TEP*GYC*]FX+)UCTY=e@sg0gkB=7lAjA<
%1`h0V^6rfI/W,>gdBEUc?<=f[+3'rO,VjA0YHCrF5.G"<9-<kd_]'[j/!LFU.#FL8XAGo8?Ma"V5(!N#G!&+FC.<poQ`k6'+2YO5
%q!2HDE[!1f+)Se<]ue=RP_RgLG1b4.`X`msVfbb^2K53X'J9>1V>9I#7Bd[.*$'U>VkI^N]h9)XBSNRMo8K5MA4&#'d;Zn?pD(qp
%c<sU)GY5#-cKOh.mC&@&j(XKO-D'7+LZu\t.:TIZ4?+)8"MpOr=_3Y%,_u])O`1ER1\u*fQtMX8>=n.,(&?uOhkb1V)mAK;&8C;*
%]eDiWf`oDea_ihcX>l*oJT4rD$FWg<[^>1fq$-d@Y902$!!@g4:uKg'2qqG=J;jg;;0P#fmL;FDU5"fq1QoGQ2^Rc=i9\Pc\Ykn+
%0M#[jNktJL(6B_4fi[*:H%3]1Oo$@ni`n293CY%RK/.=Gr+XV+&%Vdf>hIcU4Q*gC0%;dQRa*_ZXe2lPZLRFueY/lYJUeBJ6gQeM
%*-%u<j8_A%*S;J!(o^hNCeYo;?P\L)G2[JA*.`"#K0:SS#>Jc!E=g.[dA-KShZklmGLe[;eX"7<2[EE6@QHJ`aP]r@OK6!$l8Ypc
%^d3ECRo<jep6i_VO+:JA-cfkX%-Kfm*Z(%#d$[1lI9h#WQ83XYmIUi/HNqPMpj9pHAhWgh[,npNNSP;!=P->?_RX"90htDSjsV>'
%l"kVmDHH2H2AQ!Sgm8n"+KWE@'3([?G__]"ND8\Wm:8Vqe6CF#%g>Wi=(oT+2$=h1&PSgH3$q">2GnlXGk<,:=9?do_/lA3P3][*
%>ul;N7=iO9Eq?NI6XS'a2[]b1a#(;(<M:FE^-`(a"@L>BqNbpG`OSB[ZDtfGjg]:j7ZpDDY?DSmo7]_dMGIUS81rMU?rIK,m9j7V
%'$8C4M'LdhLCW-=/aW\#qd,qq#8hIK8)d^d4^J`?$.7+A"KQl!WEjCZd,Ygu<j+s/\F!T=Z)IM[,];1WhI/fD?Woemf5=tA^GpEf
%Q-^bVn,9kXbJCq;NGG_I'7YDCRp[&<8SWj*">]a1;c+%P:>:=./%3KkY-C:i[lIf7p4EhtVgEEt947IWBFm>_32:ghl*PSX5^m4A
%G]Ic-$M8UIH#A*^b*Y6>+AG`)/d`nd^25OY1U]6>8Q:%#aihtinT]g^1l$lRqRiG2"Aka!Wj?'6cF),eh3dQH+<A'.UqJC13JST]
%h="j!EH/AKETKc-1i'=YS`.f4e&F<J8)r<PGr`%Y%Kk25F@n%7i$8i;1dcJ]ljt,<0:+qm"#jYir*FVKLPMRD:q-]p"Br!b$5Cm.
%Kq;%6Vn:W$Uq(<nridcd);:gUJ^0Kq`rQ&VI^IP.hOmC@"^IYiLCsIL?:tcHFN@]++#Tf2:i7<)p'>+*%.ALKTeO+jm]do"OVU6!
%i%X1Oa*n#PXYDduT^sGoLR7K3s)Yg8f?V3hi+U/!G\*3Ci5,>130_(cG_;IO_Ja4[A2L,ChKW;.c0Er3s"`d:cgu4Jn^+UImP:2m
%jRdkTgrkrpRdcl=P;U_UUr^2W0Ht5u73Y"]&OV8tGM=h#11M*p'bA6n84ndhTZLlugG(+:?R.1jGJf!*a.CCjO,4R?iAo"_MZ#FE
%hGh5kR3\]nM2.s:UGU9GW;ZBuY152JoSX>=DSd_>2<A8RV5'hm*R!s.7,Pm)r/:!97!7I'oT8F9er^)<?#IS\CqCH[ZTU2:T@$.t
%dUK].WG9tYTJ6RN2Y'l-]'e""/B9q"=h(op!)hW5"KJ+mhXS$QP7+*-ZQcU#2Cqbbd#*fP;"r.UQVr/5/K?XNjhfCaeJuo+K;>r&
%*nUuG?edSkMkS*MJ)n8S)%C:m'C-,`1!Z^%TuijL^Bo`+[nMst3K,O6<Z=\sYfG_m[-j.?$LP!G&:^Ea%S0?34k+\cUSO$b=WK1=
%**47KZmuXqN'qaZFG,1"!#H5tqd&"F*8Jm1(k<2$ntVp8*Od"3bUhQ/Ek2C-V%q89]LZo6M\LA'S@ec8JVL'HAlKEpeG`QIdWO'e
%'d[2&7(3H!i/@:?Lr$FoD")T@r^X/Md=9_u\:X_=r6,sf'@RO)'1aWP3+7UAb7HFS9&LJ&E4A(;`Ioq]:U^n`M5cLC2e4m;k[YY)
%>\.6i]?Y..H:<PO4KrIGn=p@b%9.I_K=f3B*DtWOBK;e(MHN)4%oP/=L&B]ae\DC><)f*FjHZTP7r-T4$co4->gMij?27>nAP[>Z
%4oNoH:B^J8jVGDELo:eQ']j_.dP[U&2>WcJJNhFrcN6UOW"-AcS9DWm#6^^Lj4K2CT-i;.;9_:NmRoRn77F;^b`GRIk<.kjYYJ"7
%MKH\"#V!&p.LL<%$.Rhj.PWs6)-',IMenGe9IhqK#VAOhj@BXc29Nuk-TJ]aK\^-BYCm9965?)OQUh>'*9uFGP>/=&p]j@fg2I`7
%1\TTo]C6aa:jU6!=+3bu$=]$SESE^n,+iXhElrfg:-n+</#@<gNT\jDj1Xt2]!@H_\?b$]Xan6+cs>=(Reb=+[H(qo09O#XO^_qV
%1QfZQ<W,d,]1bKDO02Rc`j"k5!?]dC985C'I,A?LJ39Luo>H9.n=YgoEK^s6>tqj?e^eXT3/]mK;DlaQ*hr/R1B>Hl?\H:mJipF6
%a+!h1OEtO7JP.toBIPHt\C@t!U7lCA`VRp9qA!:I/#%A`h[/R0rjXldcS:8dS,?],TB"t(ke^AEQ]nPt)U-*Xo.uH?_n_GH:W.@-
%4iT\N05GCde#H.rQd["b\K^HG5HM%k]#u]/\TXdhNTho##(ZS*/n5=CId$[gqt9Bh^);e!n,N1?'FsDXJ,Jcb^&J!Qs7E4=rq<Pq
%o'pYuo:Q'EJ,JW)rmsXjrt&8-O,GoQli0\DJi'0#)89AUmq(#Bci*B<7%\u,j)9oCO4RP-)Eq'uDH^E6@[jAZ9@>#KJH7BWa*Ko-
%AW>/M>4)=NEcR2=CqSX$BmlE$b78j/)u+[8R.T2!G<IA,HbpWSg4&8+`V96mDYn$"*cXALq4G[:B'H<;6F*5qX,(4&qq"]jWbJA,
%U\q>0(;$i@`)Rgti7r5M@i]CO<<[)HNUJJ98YWJEpT:(=k:#52n]d<+F-sZrWS-Q9qdYl"0ohn)d#X+RpNt]hc!]ln48XMK&+f*H
%4m[^ng6DdX4_c4ljP6s![&r;deECXq\XZ?5U^?Hn5HQU!FP25+:HS%>NL(46lh.$_N)r$e&,j$5I_Wp?h[IL^:3Z6hFdsLrdX;>F
%'&g%H14c_9EpteYgD]T5Ve,AXgm:BFOaDMip!`am:7#7BlIc-?)_^l$kL\Pb11"[$5P4!qqu%SFI5;_l35G\48+"JZ4mWou2_rYk
%j7-"I?Ilh4VeqE53d*=Vo5]skcL5ZL[(_LJA`o_)h+<Cf`_4MBG^YOo(p<%Nkf:[:q`SioAh^B-;H9rKhObj4@L9rL":Z>7!%W<5
%2SU3/D%6Ld?erooEOcr>`p9b!esCBfliKud%/.7ebXl=-hQCkP`lggF6U*3;hsYR>2hQ+0dfb=#At0oc_/obrfqUi5[E:6gNRP=B
%[@&*/cH##R#<X4)Xe412EI-8W33,tnf:C$Ach.0$D.@,>p/=1.I_O`gh`&GmT9k$fMruI[KKN;EIli9#qV.ot=IZr--Xo(bUK36f
%9J]Z5Nr$-&64f;7I<R^EW\rs`[shN@8RdeLIi-+0D:e1LXa?*U[?i8oei4$)#Cg"XGfe".hi,[*)H=i"/"A-OaSR[DB(G(GZUOUs
%%nu6q&i0%MXsS!q4<HGc5/4^3/[MX)]kmQHY4i<F<I<`sNaroc4C3Md)oHU+T(R*nrN?$hTAKPc(SXat%LA%Z>6!?TIgG9NT-L,7
%N@3AkEP?jI>-B^@aE)cR3HVe`^^g+@T@S7M(o$mL:tUR\_rK=`rrTe%G`lqB\ki;'i/c&'0DW-NRk`UVPpC,/2@K*>.9Oo&rrEc1
%Zsbt97]V8ip#kX4G?HRX[2=ek]NhfY#/!0<rNsS.>ktDc*uZCG:2rL9>qE8Ph33Nbb-bRerj_mrP4u*9N6*+ojL#IV5gYA6"+:"&
%0&^%u(aKqN'aqeDJklCUih!X&qUP<?`FRWjI<du-TDms'0@k@Zh;nAB5bUo5pq4#Mk1Tg-:U7+m,klpU0>HB6H07s*&n<52:goTF
%%T]s#4KNX14+i;DX@gi>?'dY?PE`'&2H=^10DD*o<t785b0(64>Ptl.ppRKMCAYPZ-m"Q]</I7(2Z<=AOS>$$2nX&'l)h-bD1^I7
%G>BurD>L]=>s6S=K^+eb)iicYHW3.Ug0E4-HLN!DIsPE2kf7'0j47#,+!g8ogFIY4L8@$#$tVrU8j4;,>H\b<IdY8<O*?!,qX]MJ
%hjFX%*!d^&<MQ,UjWE!)W@n^sT1I^.hFDE0dKOSr2N1tu`"D.KH<r`6YbDJShtCK;LPS%Ip:PseceD@,&`3NK+h#qqGWbQWo&o>p
%[sg+OGJ#/pKOXpl<?f2+D\r9:JeST]44O&k$FJO<;gB4pmRY.;T._#(Zha$t%q@^hgu5O@hAV`a*Oj:644idSCh"HNf)n5i^0g8I
%gX"pL%%XHAZ5#^<<q77lLE.(#<%f['2YEeEg11:a@u'0b)@m*\`qo]*Tc-T'ma_p7IZPDEa$0P\YQOm72#sR9qKG`@X]Ne`5PX:0
%a1L5Qr]D;X<bH*"4B.4c"Q6NA?HiK$W[Ohh,nXa;MSCC:&YMSqeRddo@$OktjBMAT9Dr2_jd*Ams184-15gEN3ViQ<KA*)NPkV@g
%2Z<IETT;aL(OFm-o=No7&_t$:.&=>;Y2O<Vrr^D:G";UjRg"@$bG#>c)3@(iqCooQJ0[fFptcg>*HNUkj0lF:5=F;dnINOKVQVpJ
%(U2ODH9B3U`_GlVIU<"un].ar%n@$C9HM;dXD2\^][Me,"uELe-`B5(Mjmc'R6DZs0=R&KUnbnn)38R`e_s9HqlW_iT0Ro+0T4@\
%4<4)iBc0oHl14qa;)`_^m="Nb^$`L]*eQU:&5WL0XTJiicGL(F8'Rp1b=5F2+\IHZ.8H\(SjkltMGip'>-ZEB-K_i&dh]\Ohr\XM
%TpAC>j.='&6n.s0rGC'Q59BO4q"_5I>sFCcrlC2MblTW#+09A;qI+$G15%M`IT)4+Nk_Zd+Q^.\=YF8!MEn_KQYR0:?EhI4n+na+
%8+=Q=gUi!>/lqAO$=,]!+!>D!rVL$l9CK?9h"(%J>[*;'Q;kT1[eF^ts+>R('ab^6odNgB[u-Kbq.,e]bN]n>2^>6hXsWC[N;hY(
%+4cb\kkPa^c&EB`gf_:EqXN`iCod$pGjNK4O&p_aq9=^`/de=m3;+Ui8]j"b3*152eN>RRSbm3[:sFRoCgO86A&cN',.KS>Fds$h
%\.Am/kIKQA)0D'W5#'QWU=lN/Z$,-">-KhD501:f1MBTu2.)m04E\Y#S!Zr3&O@QLPlU4D4IZJR<8)$k&2!@(6>0AY`=2HD3WnR!
%NS`l,8K@]aT)]/_&`>0AAlu)t6/E$ef0?J7;rMI^5?lEJ&#M+i)U'1=Rg2l"(CfN>#?*=#%Ap@M*_b[e(sID7@Q%-gkk41HH/u(Q
%OXVWI_^*E"*#Y&h@)W<T7:g7N)\(Y'ig6Ur@2A;5VmH=POK.#R5]2gli@>Z!FYQdo.DQoOddA15IC,TreP:6l%=um.+#nLo#)]3t
%;q<N**lRlr9tg3$F*^<pn\^=:.fu+S8Ficu3r6OilX&+r%)83d+"W8u+n#2dic9P)8'<jta?;p1&6+:.\MENVdMH@:j[1LC%)`,K
%U\tEm\>0cSR)djP=14>R2f#!b4f%gW"M'sg3+eHt\j]o,$r]1a\3\SOk7LCG#'3Gt8ApVm[#5mc#ol@;6(F5'NdW0lVj7?/S5rWd
%>pZR(Q</SmE^r;(_,(#=/M\O$Y-t(Ja..-I_E%o(*@<eLZtE'pP]hS$C96G?25[KC\(6SaUfB^NiHHg1G,EqTW!%+I3@/1%.QuJu
%3>#0$>[<d@SL"[F4P&>ZWd%6%3!@Ne'VuYd]''=mC3Jip]#G:/"\SB_)[0?<^C",PXr`?W"7UpTk1ad'YupU)]I/RE:?8[N`sd,^
%;4Oiu+rfY;=Km?^>Fa2nk+2f47sQ0@@i@bEa#*.C#Gse/HV?g!hJ!l6;EYJ5L^l]O^VDXbNU8*5c/:r#*:b9fOb__b%^#L5AI(`-
%Y.f$UGXOQXr`Oaj?%Bo.HXk:)e7h,8japjeo>g9[AD%SN)r0'@cFa:9.6#1ANYZrT,;aME75etmGC>:1\%&df=g[e.Ah`\&)ZF)m
%jsp-hgYbIp:&@P<B8.acD_G^%n<3:jGa<&C;,Yce.$hY9)pHd.EQJdAjn3ZYPodVWH/#K/GJa#._p4Wn(S>X!%7H`4?b^Ca.]s#i
%07CLrFiu`4^.XW=iF`<qAQIeUSC-]'*^0?pfn5AJl\HH0IQ<-.cuRl?mWs?LakLuuSk-X=QYK(d/i7l`lagpqIm$\ZN1S7D'b;\5
%QY!^'S(Na3ldUD@,Z&S'js_K]S`C_6l\K)X'C@D)o&keU`=EnUP6"j4R&PERSiaYbb/`[dU\#3@e.QloZ@.^g<k8U`96$'C8rr+J
%1@P)&OoOO.6fP<F(s#8s#Mm5:+2K`(0]P)Q=[53[FunKo]6$X(<T3L[o-Qbo]t@V'P[\ppn2B[+p0<>PkJq!i2/_%8f9?(apCCUh
%#M8hjmn<+n\aT=U[3Kp\po/X7`1#tsf"CX>%_'H`c&:a^_Fk)8+P.ckkokqh'spL^Prg4S`/W*8Qf_+Hb]f(Fc3#2YOiQOd=X':*
%qVt6VI8C'fp0MDZ2fC4FTrcHoqC+er7_GrWCIV2Zm6=Ca?Nf"s1],CuX7uG/s6RT#KsU&,39F"$\Og.(_,?W\i+%B\&sYA905]%0
%'ghFb#M5+_][NF?Jf.Lk_&nWqq.Z-X"kqik"lcN3*/FTb3KQXn-R$cQ#&6mB,LkKmY*rCU`?qu6k=)FjS;<7:3:D;n<jkH!Pm".6
%L.IFaF4;k]s,I@OLM:bl]5R3s6-3Z%q@jcFRl_))!\FaWcea@$HLX0&b.@dQ@*hT=XEHOs6QImtP8Ib5Ein5XqO]pVJ+NU<Y&0'3
%A@e$:G:fHp:GYb+fib:u-5.ZR7'57dKNFn9c>FT/gX&g2.tIM+Yl)u+?h\E0`cqW)rjUQhk3g^l?"m1j%FjDM/u,<<Ibr,aO#O[g
%qdpOkj6:F\f3L?)r_p?+p77`YMJ/]eeKf`'`i8D36E)hp+;(KOj=oJujC>Z[8X)>l->&%`P$`&p9`pGR]O09g[77E+j.\)X#157M
%gZV!=^LGaFMnAgg4L1nDLh'[GA&a$2Qr9(H77SDCkSmXbNoqiMh;,a](&<ch.j/0QkfiV/H98<gT-GlGOB+R%:;b]@J!SRWSr_]G
%GQG]'G'2GpU1Hr40CWoFc1`Q0SqlE9o6[`pXRs/ieM5mWGMi"#I)1Fum@?FL3CDCmBm2:9`T$tOUHan,@36:M?MD%sRj%R/%PIO0
%^gj+.MS+m;Z)ShhJ1`E3,tI/!$g8>Za:bt,XH.5*F4)s"aF,cQZ.[%NJD?1RN!jp>^5EL44)()u+i.c.7mP09#BXP&5ZDdY&Kg9U
%`Wu%aK'P`UM5DZ!F\"qLVL'4!aWMCJg)5$iBR2H22*K]pg%arOe0m/ZZS(h*(SaV:J:IjOWGJ1SiqGOIdP5M\Bgsk7`l)fQrI[?s
%c<-blQ"i&3^]c4:Hb-*K/=Qs'eC.D+N,.Bl0*)WqDYpYE:D("Rq]D8IcRpkUGG[WJqB=n\0eT5:./,M^Y("+[IHPglnJf61\4=:$
%Og]eciua-sp9d1rm;Bps4EX1I6e:K74sd#SK0qPt=jh\eIEP9N/(qq:f%I^V_\>q62'rNBDDrn,/k:EeosPu;VRue6*eINdAs@U(
%ZKE^7id/:nobrh1eG:7D!A9mgC<JJ;oD;VBepD;D/F.HSEsD&:^RLSIJ'<^h`t_G?JIRkdq%-'NX@5r&)nHF2/")imSh7GI6CVZ>
%//7m!UT\TPM)=f#-$!_@p_9'S`D0hM4g5#if\n;@0%=j2:_UCX\c1OX&_o#q#eB3lD;*soE2WpNG(\"UX,i`]91+ck^p#(@D:DVa
%K0Q]B1\/d]r#j[Lgh$Kr89X8i7_YK?VI\+$@cSoX<q/F`N*V6C<jho-CK#jZZq9*!Ibh6f(b8.O]ut,O)$6SK0MFYTRRiJM4mTTR
%!O>turZ?3>2q%Sc;Vg55?Ttbmm;NkNOoFg.c]<^QR>1drlscmtCEU[\U7Moh@;'5*jJl6MH`i=S!+]XXF0;?J[X+6o)fX:a19[N/
%[O@H-L0o\3@0Rc)%HEAS1rSMIGsZuFb4o6a0_c06&VV2heB;#I;[T?NcI,Q.UiSrI\a0Zo>IMM$F-oY%MAGR<qS\4>_7Vj#=RD]I
%)+@J#O3s.A+p4Tbg2mM^!dPgOd6He*.^S&pJf89<*:l2`DJI<"9Be.-ZTIrCfPN/g,2LP^UeB'?H>10=@?Th5U[c7?a#[;onajM)
%&uOeg0C[HbE_jn5GpErPAsPHW\F/\BRkS9Y[a6gtCAY^-V2J4?3;Wj`8DZhJi(t`6\@c&K;KJ9#i@_jJ$[fF,X'?5=Nj"c*Ug_U-
%IWf+@5*FJ0!lGR\peuo)20?=$oo&cV8t+RB(,U9Vju>G(pUo(teR.>/;>0i?SVG]c3l\Qkgb9o]$4AY*I7-`j1'DTh+A:^%ipepE
%WDN660)oNaIebMjGU.+__SZCn`qSTZSXVOH83k.*+e#`sBVb6IKcF:i$FQPoBUa#^QsqeV@R]-c"iV1D6[a+^]?aOYWBNfH94MkN
%7a6X+i2H'1D,M)%;q[4Fc5Mg?;h;[4M`Ip+)SHh[VH(=P`kR*1mQj1*nN?I]HHldT78mf<B*<%s=`(ltjj7.EOAO#S5eAsXhB.Fp
%SQ]c*ZAXGSk`B\Dkg8_N6/-,QNAjf,UQ>FgGohHT7JQTllpWbiY"*U)E.boRrsqFmLreOs8l05AM[7Olh12,-9.jLN(X;dT9`O^o
%*2(N5S(tK%>5+3`5ihbHD=[4dpT=6lK8]*d,aUCX2V3RG0>ClbH0[D!nll23hkTi0*pYhf[d2b7U5>dPf/RI^qIQB74KO*g!,GT_
%pQn6/C@3iVe_KqUElM]k<kW5UB>De)fpTu/g3sU&au.g\c<!&=qT^!4'8(Va@CA50#<qPamoqR3^uIGBJ;&rE+67le"l[EKMYe,O
%?_tDqaCTcpn+uJCHa#ZH!h?umRbo3m8Elh+BceX&L*iQH#D[hP.-p$#Q3SrB&_'4p&T"^@-(Qif+P4Rmb*I9ii5Hhcl8Cb81s?Ii
%7=C=X*,c-622fE-\'PIk>GA\2?el^P$G33\"6JO8-ENWM;mIH2X:#:nq6R06,-THSQI(4Je:gR=oPPNF0*0WdS<?&Q.TgU?'%.X)
%Y,3$e6fgos[lohe-@`3C[c%G-\BVZ4B1hZ2$?kM&#Ue+9/K0=`92)&%2$9b6-Zq;J<-;oSOJ"T>a'ji"#ebguEk\9$TS7n0:=ka7
%,"c^@3`N&Z56@EDE0J-4m"h$<]]a8<[jk6+dM$_03Y?C'iQNSo%*ru/O@\3VR9We@FD_46X$GuPMqS33(NkU(mImD9Zg^o@C;8.^
%RZc0>FTE!`E_NB;B=O5d[p)T[As9Etkt5'K#NAqXh!d`]ZO`)R0`EB<\7AR.U]K7SAP`B*_&?9TnrWtWM%W@NhU1RG'La=J+%NI1
%6o5lSaitlR/mXgk[K8RcAeSUiDku0.(K(*#,ZpE-(26uuVhEqOA9CkAY\"Jj'6d<eXN`29^'j%*85fa/%$rCCM!%B<h8dt[kh(W*
%O=S:sU!PCNiAZti,F<)6Sl]cY0h>%f^)7iELGTu/?55BQ)RRW_deJ+h?Og"7Tf-N68ku5pOWr@D!QH(/1n>Tp\\ZR1mn5O'E=#W%
%gltsc9F'kUb!bcMdJAlBeM7pT!ng(_:D-o($q9C#hLZXZDO8UZ;TD61R+oN!UU:JG'#o+%NU0t-1^;$Km+k?mU+Y7e[VBt,IPFgj
%Pt/)0+n=')eWed1^4=!.8dLXg<$FMS&@bA"3=n`Uc_rc9oB.L9W/-Q8i[V0`e5hNl3]llHkMEM!e%8cW(L*^umsRup<B;+82LYDb
%&olSp1#6jWe2T7NieI%f$&DlV7kpbW^eA77KWWS)8:=<XAgt@86"T4AbWh$5PVh_/e\VpRTr=L&=Q;F?iZ!tOeqV>0YlaQdJe8C+
%^i]A&e4qe'b@nttL=b!iM]_igfT*Y`%g2lDKd@*t9$Ts_]c8JH'/(Q<279h$[=d5MPLP[).fbM$-U,kpO%TE7L3,WOh^%ujlJ2@1
%kXZ$-s6]]5i.Q3D%Mn]uN;C>DN98ms(%$BPSOTN[^V7=I.+Q`4j1Z&aIL=ukrWgrZ\n/+KqpM'VN9CGZ*oaL%(ABUL/q:Ojj2UOW
%j0sb+*0o^XgYFIH<W@7@6QJ7T1gE5KePSElR`#$Ldu&p'd7cb'JPn`>R7BLiY5<`6$Bh_f"/`]/[Pc2HF9RruXp.;KSV3Sa837dH
%?#)+9<L2"(A&uZOLC!)!k\JL61VUXLh=&m&Oc=4+9[#4u0D?1)CW>NWY?"HCeKY!s92a!Yi+:BTOL)CL_V9qCX&;XS_HeLIoMUp#
%BucZ)p>K^nF*-,@EduBq9>7.h@UnpU+]n6EoE@mEPSEFlV5TS$(R4jJ+>[Ck<#S/cle6VUlfKg.SJ20F=;FApUF)DJf04CZGK!?_
%$X"(6Tkra\(+n[Ro>=)+G\DlVa_cs[D"@G>?a;k#Z,ZUNh;m^W;C=nHR8(cG;r9%#3hkYs!2Ss$F73=BVl0`Iotsd.;3J$ITkTG?
%=31pQ5#9Fqh/3mOnoak)C'#F7W%?_"O[uJmZJP>a,iNVQ&9P:)Ki_HP`LAIUaISLsQWjRBbZWD[L$-dGK3Y4>PMpd;W/6']3o@-D
%__'rbT2/a=l/nPO"RFqB#k^M-(X[i#LSd>q#^LN`4Y<)@LT!ihN>q:jP)mHVI"(bg9>JS3V<+AE6q3JQ"niYe=L%-cKg"i]38IBT
%!M>:#`gR!p"uHSF0a0&sBaX?#1^3_d@gYh%JJ?0g"b@s:_LbAiECcN7YG-W4$T*-1TZM+2,ASed6]m0Fi-%L[0Ypu:HNUQVQ?+9Y
%l_Kb8H]$j1A-*jtk_GU`5U9Cl2$Re&8o()3H7hWP`]*p[aKB;,q@$p^Kc_Z*2`r)HVV/+d)U3$npb_2ae^dCZ6hE08FZ):khf7J,
%q6eVL:n!+c$[90:W71AIAA,)i6D\9R'0'[;3AgJ<G5Fas-Y:ccrbH!&l)]gU[Fl1j.:7VYV3d(Nd>ZHV=Tu-1N*<+b@)+tucB6c]
%2`r&qP:dY^+0BEHL58@32T-cpX&>LDkrd0CqJ.RW7RM_uC*)RaY.^gAK=[9O.MICt%l*UnDZd$qQAR4iTCJ<jC@5:mWd_T"nXgf"
%_I)=E.lIm#0J;#5Ac]ZsRn3".7c\qcMhR&e7d5S$4!L;oWY5A<F96X&&9H('&]MBe^RXq%iGe/#<*m#3YWt33TCspI_^s5T\8SBn
%q@H<lb6+,==u$Z@Z^Qq^L\q$F:ZHp(YPSN4-bMKl+;n8]iG=.fAQ]iDHA??9M$O$>om5^_VUmEW%0+p%#@L[Sl:!t^#JCWoMA@$Q
%$,BH22P+-1F#@c'@8F#N'E`uL[^.Lu2LW<iNpNJZegI(ld_N_N./d'l'9\ik:,b#X6iqCU_I*@FEu?DBIF`7icFhMrLP1eZ]YVKl
%%8^k_@eA8XI]F0lZCC(YKY*50I$]>:G1U$hL-^(RTeN@oSIa/b;s/dj?Rsj9Mj>f[b^T3qOYp_KFni+4^m1+p')LjU2V$X@%/Z[s
%iY((`k@=Nd!_-nmC>j7gr&J\'T4IV@1d@QNQH:@Jn'E#k.;OZJ&M>M(8rLsA2e<\#M$5a5dP/jQ7]tL*8?GB]+E?[[0C!W156-Hr
%,qKnU@>-ptR]1T!5\*3%=cF;'0XkBaW6G"jAVQK/_Ybuo.[[OWR).*Yn:Q[;5/WMNIt!.PqluYg\jT-E8F0+%`um%jj<i,7AtoS[
%(,;C"1XUeC)o:Aqq*:cLC#WqpUeY+2*H2:?>N@,0LJasrQ[h?4[%@lli9=\*AEZq/>Uc*iM\1,KPhltuG/&VGaY=n&bep,:2B;1I
%4>*b(ZRW)5EF`G0aT=jPB1>(,`!u(g8W@_3IrPJ8*Nj-Dnap9WpEO?KYI58?]%47^9<IHR^0/p+QV2g8E[D/hZ@":Vh+(k4,jA$G
%P\Z^raT\8]Yng30.W-^Q3E3n0q.k7\D"g(@$ZIRs+=!07N"3B:K%=I.O'"0tib&J72-%?=hB(R>dUq4<P8_!Ue\^jtpO`V'eLN5?
%Stpe%%beRB'b2Ba\mQ?*r:iAYs$>PrDohu5fFj@.k.A3;VPlAT]:lLk[?Jj6XsC_jFZ:p1@BIcY>K9IXbeu2nHjlK7*KPQE(mo@d
%F@l\F?OL"5UQ#FfJ`fB:T.@<KMj$L)+K7iUP\sZ3k0*Q(]`d2k5FY!@VQYOciJJ!"R-BL>ZCI7f;*4qs($X`2]H8!X*%,pt2p7Gq
%g?U/[B=Mq>8Q%B8Zs"!h=^Z&g`e[>f9"p^K40J?eVG84'O!\@NX^?oGlWb).+&+aAG-3(#9=\@A&r!i*KnmC&W/dO7HC+[uqd#!k
%$*9^=8nBME,^0VcA,G':Nl!5%dALsD3_aH[(.NFg4SjAk9cm3Hg=_jp;7@#B715G+g&-_9Vp']L<Ud>0nk(/2/m70Dqb$+8s5=GT
%@ZXl#WRgQ);d+=G0$nSDROOUBnVsEZK6s6=4DLM"^4me"54);!bi57m_I*+'rnW'-++O;$+91t?rpE#LD`1Kk?Ps;s1tB51g5gr6
%)rT"o!Z%Liar-D&e-drCQSQG)en%T'QkbPj)a^eV"[fXDc4>N-P,r@IhW+/m7q\cj6D`r)T>=+MJ\V_K5Gs?%cb:\BmILFS&lE`B
%#;.\%M?]IFeQGCT%0$@j6TZFH\-&)+OuUi*Zqrr&7d!eJHNbHq%G&F<>HKdY5K"CY!%nl$NclYq&uYWWr3rWAD:+aYOqoIbE7d\*
%p[gTtr$OEH%Ier=ZXTT37R30@<$u'A]u'g_I/X<2XX<PADRRc@e0NotblM_1c4^F^;cWfnGq\B\>GA)P%0uG]Oq^W5GsM\IC<Q4D
%;*.TXK.n[hR/plR:\Ftc-Q7TJjB%"j5JNH,*iQkUJr.#5b#jRQ_A]=C2MJs05k`;d8I,)4k;uNZU>5F87^S&KoU?$G4bssDn88aa
%EleO(FD3bG9+ilb:e@GT_&5qgrp'HF1[OIj]pP.f8U;m^b;4[B8Cb)AoG-JLO)HJW@J'r8k*QYLT]W"5WUb4ea,Ln9TrLE-d:*.p
%>88M2V<Z#\7D%j=/n0Ir0+3]f?#YS_LE<R=fXKQle_W@ci%2H]b['g&BE89j'T=iroHfA"=]2]j,9^+c3Gm@kSTDM_!bQJEen?+N
%=2G8(5<+pQ@q/L2_gGo.!RH4O+s01E>,1_)`89_qQZKi>`MWKI7/9<b3TUg1]-.7We-lu7?Itc%l$cP4?<,4L8Q(sOOZ"Jg6faXG
%j8;[f0QXe)s6&?jqLkAqqI<oBbLr^M'Skt_WF/V:n"shl;:7GM!s7^JmB@`YQ43T,QQ9(+!6gT2,fU@k3c*t1^K[O@^VEc<h(CnE
%rGOS`o8Xgjo1Qp,6M0_'Fk.,:9ueY2Csr2j/;:R`(_KCT@VH1Fe]:tBeS-(-^h38;8Z.:g8#=,\K38K@3UOU6Q&YeEBR7Btjcf4,
%0@[S5,B-[W?GT\pg7iX'F\2EIq:D.YK:0(cH"U5INJ2oRg4q+VO`@<"R73O+[(RW/E-`qRNk'O3n>]0[XU9Vq4Wd"h=hdX2Abc2h
%s)SZ(D*9BVC/V)O+/7Z$9O^q0ru>EDNEq4X$SUdm7T"3<F"hC1ar_asnd7-AAE;(_W(7LPLuV(d=P9/#5,(i4c'c)(`uOtS<SPe@
%Qcc4qX:gET(/G%g>J"[,,ZP[?iT>MXp><\,5HUtW32t5F)V_1h0.!.@X/`W8gt70fq!2XkV^1ZdX[QYO.?bErAp*qtjgg3L#t8$=
%QRBMs$roS-(sYoR)et1/87;-rdG2!\FQg8(f3etOb]UI<ak&#WON/=cQrg-WIK"L9QYTZJ-6?7Wb.2GX%.)K7F+qt'HBn<'E?7Y/
%]A!Nib*Dl2aQi&lX@`YF*k217&^=eLo6GoaO>f`U,YZB:6a1#]J<TS:g/cd"%uFSDJJgQ<(1s4m&85A=rbD<SV(R'JJR-L?.QWE.
%_.M0aYaYdl@imFeUiXH4h,EgXo-MJUcY,Z^MFXF3%eq_>(U*rPI>%@8V)m)qaRO28Fd\'(G5JcL]e'M\.&&D[U^u6NMMP$U@OGf(
%s-WM>)&tX)`q.eV02F>:l7V9tL22-=]&pN1S\4*1^]2Mj&eZ[YL`1g`4rd4@6Cc%&*H^WSTS[82IdXb'9E?/&;#k\.q-R);Jfkos
%s1*<NiZ[_ak68eLr#sVeW=g=Z3p/eaBWf.u6FG$YPr7:.*8I(CbGOY%rg!DallJo^O.+ji`Q>p;g.[[(%M%qJm1A)PNeL<*b(RA^
%aN13FdfIpj8rr/r=*.o%N[DSUqdcGHY>KYgE2KT8.S)a%kdoRFkaF^!Q's>b82B_jN%=dr\AB0_=/#Lo7J;p5A<Vi#cg;[_2Xqou
%7Um2$O9c8Z8;D19W(t:oQOO@d_!JVZ9$Otc'1fHZkJG+J7?uC=]SH,2pUP"1)pqm#[#bOE7m6oZh`=JB9l+g`'34TPFjZo^]"nS8
%B]ImFjXq/ATW;HPW^K2/WHK5'B8Am.c<!\<1:NJQ5rng\=(Hg]_U@$+6*\2*SA<=AOneHY)$F&rRMU_j8<&7Z$icV+!K]u\Jb>EB
%NpIQ3Fi7i2BSXG;0Ni*M/u'A'C8YGlfcbiV[/^3O;<L&t%)SIWeV=r3Y!U=3X-O.6":,l=&]]ftcS:OfP]>hS=ZH3jmb$Gs<(_!s
%3D%,]NKJKq9Q.gok;DWV4KM4;50'k1eo(+AkB0Z]&/APhT5OqN_g4f)Ih:$?,**It4iB9XZ*tq#V?,]!U]D[l'()a$LqtJR@Q-?n
%%of))dim@!o)d*@R5nDB37+:Vg^i2W>S5CY0[saf!:6OC#$]GOaS.S1UG>)(1@`9)$m;'[DK=>22N,=:>(A<,HR;?iR&Kt3*elg?
%._(fNAI_8%=[CtE95nj3Jg'^#I2B3Y["1Q\&L=C@Te![Tg`/UYe."D;<1mo@OuXG53o.oUX[jT]m1VATN2E`5B.D_[k;RGdHi7CR
%Teq2/5p'&DmJS7;\Eo5aN&FJU,BmM)b1r>Hch`04/(I0=!Cf$3Kerq;NIL'GbfHNM+nI^,:*:2JZWTQTH\<).V^CaP8!&'Yb\3I;
%o7uCb3uu@8COT]*2$sVkpgu4\=I\%T\0Ph8</tMhJ2/o4e)5>o?,\BTg$35(Qq@)!NV5NQ0(KrXIJ)u`9HkUjDjk7>'^,`A(TEK3
%Re:3c3Me_:C((%CJu<bFfLnpW;pAbBeZ4!a=EurdF!bA8Zq18YYNXA:DMLaLR!+t6`[X+5[0g=CPqCq8ZCSW)]@H1hI/6S#0ekTR
%Jr"Y2?3*&((m^lDdqP2M]B(3;4C@c6DGRiA4q,q=Fb9!oQ,o6sC0-gW6>NX<I<8FA>$D`L/N_-S#IY.F5a[QLfCEscZsKYD'373X
%3?j!`XW+7Jf]FYSKg?lDDN1fDc=:$n9KU+<9nZ1tR?-dY*Vrif7rDo?]Zd?D@OldjCR2X'eG=._O&(<<.ZR?j^h^hPF7W^?FL=!`
%o<RAUD,/Xp*fsC_!*<-6ARMi>SrO8_ZKiH4r^teY]\Erh3U$r`IBms@U`K!&X?Zl%JEdXg1JUra"-!]n@MXNOZFp[gTZ9qicu$TU
%L'r<<cf'M([q)64PV1p+ZI1<qX)ZML0fJ@r,c-Cc0S(l1FYLGoNhnel@%\bBJZh*qoZ7=ok9;<PED\B.!"],1&:o7pf;0A$96,5R
%md^]KJ3P'j?3#-1\\>l7\FkNF^^+4s$A'^o:*@,-5Bgj3ajIk.rps!3:j:P"'j9A#"?tVcGDKoQBA!*t2IYloQojr=[,D49aA@%\
%^/VkY2)7ZW)R;&D`e`elr>7#d=3[d9h@)`+P]mX4+^`)_Q!cDC/"*D%6b;;T>%QKb0?r`"-cN<"C1U-fO%:3dcQGne4lh`5hfMPO
%39@]L*C<e>8I8[<a=-7c4.kQh,4Y6G_J(J$UY0`jqp.]N*,][?7[Vc]g'%YZ2[WJZTu.9L&0]::2(F%PF`Su\h[O/l&YcZe3OnDU
%MiuPA+C$g%*u1!qRHerq=CbS\2M#mo.0["$n]G?c[F<lIZ46q;IH087M+M6Y]/?,=."6q2oZ0lF3Uf4aPNt?-ZnDo?!hC8^Jbu8V
%BQaQ2=*>9JOMmDu;lGt[WY!28;H4RZfkD'qR1[i4iPH.2%j_>dM^>>OSo9TY+PN$T`?ho"VnmC6L5ab=V$C-]ZJO#kaLaB1T?cWq
%%d-HlZXsK<E,j#(P1a)+\4EY*[2i0c%pBAHRiSTlg&38bn;3m`<7,91VA2$NnAmGJ:sf"d7.&FTZ0[QQFI&jt0QKpKF-`12,Lr<5
%NZp2b;p7WuUj:4i!Y4f._gWs3JdbV/F[d_Xr1U2MrUCJ)bYaP"7G0CCR7&pWo%oh*1RR2S=hg%d)?7WhiR]%c[k;3&*.bk&C#V6_
%5j65n;ZJ">\a@e0FZD#VK8sIJb$5B;U\Lg9&:Gh2*)E]o0Jo>#nd#EN>_hR^36!7d4bPs_+.r=+c(B*pf#'R"S187rR%hGL:(\J?
%a]-"Rr+*`KW9B?H<joUC$@>scLnG0[$KoXtNG`+qoA]QU*-'j$TVcp^]rJ`GV=^:H(RakdmTb)$^!fcPTJ<F3U]l*oQj#sLDm*c?
%4/#A!I!OE"78csMA]sN?KOVS9/mncG+2nSQ=e5-Hb2uA><r:)bf0+%DI<,SfdA.'/,<q#Agk\7eMPn@RKh4&!"50]nY?+Q5qAFmS
%idp(?V]5/6XTD9sda]4eD38!P8M&s!CHCAU2cE7-3gBl]KrbU*e(/c[VPf)SlO9`:4FnaG%WE"r\U06.f_H$?;hCdHYn[]u.WSfP
%_F.Se_tb#:?ffN8=ii[:'a&k8^adHPc^Yll//]*k_qn!$SUp$Zi8B<)&2.!3'=VLa6N'T$hSMk^GmXOS*]jb(5<hu-^n"Rf]&1Is
%M_,+=^9iNf8crI9f!K.5:,hQf:,_,TIoePqI'tR8>lF1jKhbuNjt!\%UdE]ol?#h'*;)'2MY!/Lou,^5L>U]le>*aW!Q]-)p7+^P
%(d#V%3,R_TPu%mtM*EV;5p"-r+h>t%3P=.SMqbh=I3;`'$6VGlUDNPXMq;#X;<aF,%h5e>d7mP+WFrdK/uL:JU(`$Mo8o$@RgO<3
%d)6=C.#kg-84t_uZCE2H:pQ52aHW"?YM,Qdb-:='=o45[qAc@+piOAGgf,T'_u`Q>!I6j6+c351X>k+LLsplX>4Ge\bCg85?,Q?N
%_r^+2Y@;c<B[eaVZpfiC+VsS3Ui^i'dtm;%D6oe*Xa"^M`KG&/LQR=J!k:l>;B"J88R:!-'d%-98XjZ\h62-\c,(N5Jm5Vf5o[fC
%1EK?]d03U)W^5g::ZoFCn4-[0kjt6_ODZk01C%Gghbs19`(>@QCrG`6n6UXg\SC`.+4Mo#7p.9koAM4(!&"o]&V('W=[J=qZ#s72
%"khXJDC]Jf\?+c=lh"ZDHhGjr[rqZC_[JMdBd6Q@`NZm@#$kf'/fN4sCO3ORPW>'OM'U']kA%%Y>GhMOdK9,0lVE4M=Ri<4rfUB@
%)@0Y=@81b(;"GkqUbPgR0`;2+QaS!h12u<q$GI7oiTO9<n&5%5?#8lXW/$u(:W\SEB2'13Atqu@B1fT=PQ8`Ild"i!$doV7$Rn[_
%;oXsZk#gY]X13M-SrV+e"=g1Y'tJhQA$V38R]:tq3IH2YKfZ"^*:/[GR>O0ZY,]<qH$\&>a!9G*"LT(<5"^NFE//X#0sdUl=VTo@
%*9bM=5fnQKo>KS()%Ordc^.?@R"5",'QtFmTgICN$d2t8'g`jVWr-G*n4c2fWS5Lek")]ime!fI3gg(REN[.gGkm4JPW1OhK["#F
%m^^D31g:@Lfm>f8*'E3!hY["Xd\ac<q"qoX0XH4ojQ&E^:-Q(3"Mc$/Zd0Q\EZ,&PDE)@_?ZU>YSDWf2ZAh[[kSQpdaeuaSpV\YN
%Kk3=V1XV+T^O<pC=35aa03,5mqeSF>CP^#!3[8Q*W#<q-J^e,!e;CNL-g10`k.Dp"^G>4/f]#8p*B=!0-Md_@I>DKd4RYb!#lZE1
%,K+',N6i5A8?JfsV^E5Zi1/C=&d$!HP6L!pV[Q<'1d8U/<SZN>Z=m7&@ms+/_)dm10]H7^e,DtW'Q<<qlh,HqmJ@kd4KU/H21;lP
%[)ag\p'8?3/Pg,OM7e0scLjO<la/PdZ(noWeWa3Qm$:<Lj\Us9)Tt;..+/Fj`tjql[$V'BWkG";Cs"b\f3.d$=-*]](UQ*N$:*DO
%aq!`8?SX_,65oR:XcAD7SZD_^``fN5hXGc4fuo(f`ij=>Z;ZDCq`];NE7o/NidP8?./>i"JBNCp-Tm!e1_!rL2!X``'f33RW"q8I
%g\K#=$Bf/^Yfd..D\sA21-!&@(2)H#jP5g[h[uttd0`JiZ.WI])1S"OlXc?^)i//pZtrJD:o9mo!CqNl*sL.>\VjT#G.'B5EnlRa
%c<bCGP,_[pDDNE5&CF3#U\NSsbp.TR8kA,aEb4.]K4JL5Q_iW/lXD*q552"rVQj?=3b.K5KB4mHc4Q4Y_5SP@pDQ+#9l61CL!C6+
%#Q$iea6':_.UCVFFT(m"iNRCMbl,R6C&:I)jZ?]iSVq-pAgfP.[FX!Sa=;OeM#r4lZ,*!fIZ#0Na,bD\ERAZ&mdVXXs'R9kANnBM
%!@Z).dEM)M$P9SEXH[E0jeI.DK=>OqKu6V%VrP^U?CQQ[6>pmI=\R?2`>24\kpr?lP*PJt>3J^kU5X)nYiY#59/&JtrJ$7UUlaYV
%MqjF;(I(,_J2tZ+3!\p/]Yl(hLCnQofj$8^,O!1&f4l($XYW6m=2fJ_h`uj>i]9.#r.(s=fX*Y$7Y993`$?DIh^I[ed6iq_@'&@n
%X!Cfbl0a<h#$e?.\MfG.r`\,'-.]8)OQCmR<k5lZWK"6<a5'+7;g=mABqt6VP=Q'T#XpSt5i]`a0mBkU`4?NJ4t`GIU;:JbY$&E5
%i6mjI(c;o<1R/UOI?2a!Us@O\^30au-To,+_hL7!*a8>mbK_[I-PYq;p3Xl'K75j_5:FJAm-nm]IGfM4UijC-&c$AdT9<\\'-C1^
%aJ'7rPZU.Jfj(>saK,-U6/K$=?)]eDh0A@,%Ilk%#\1172Z:#M*F2J?0_<iX-7?>uT0UTEb]q3aJ8C,Q0#6Ljp!pB>!([O<j+r<2
%>b9lBrS2FAcA8WW5KFd=,I]$,:&W.jcKI-;%nKgJ6g*J@)aqGm.lE:5W6@sU`/SGXm[9H,XJOZAM&pGWYc;!-pJB,RPuWG*Z;5qX
%7n,bDk:Y#[SNjto3>L?UkM51O<uP`4qb.bpdJD)/\m&_CAiTZ<KL-J_!kOBe%&Tb//hDqh?VAic`Dr<OTtW#H5ZC5WC<GIu9_u\o
%&EPG\JU?dfEB6SOJkY.^n,Ze9P'c&NIE0l2W;PVDc_)GK;,(J;3>APeduGoQ;@N,O#rV7#Z<6hmqGNDujb`,c.e5e&FFs'r59/4f
%1la9E@9.[#%e5?G9^QMfoMV;>8u;8Wbk"lhf^D!#153L2h>P'L0>&><:Fre3jEJIX`01RL!"qRl=@'$@^e6;mUg@_55"=Z/dI,V'
%>0VnYXPRtj\;H#i-n."nU+udlJ`4Vp,qo(Aa#'=)jEOCG0#Te_c>^`9YSEb1m"6K`l^!d2.FL;#VWt*Z#W#,cO\YS7\(c<Z%EJ4:
%0Fh"*i.b=fi)#1o,CVUJ8Xoo\3Q`#=jPHR704UdOB/efMa(#Ia9.4$&,Z.L<a@TE2.PF<WZ:@-'mit)K</d0YT?:saBrbuei,_#o
%EMYE$Gqo/5*Sp$7*QSZ*>H9m,/58:?o0cFl\)&_#**k_u]TBN/'dF<1-"TB@Aa_ash<"NLY@`QieWB?rE(`@Y<&\6=_)/$4%s?o2
%!(gSoMDn"5c1InfOQf9WplWsKnYfrmIHP038ajPK;9-^A$#NA9b@gi2Jc7@8\5bA3diKe-`_:B&n2;4\H.fPN&],SBAjA42?V[83
%q6W<V4I92T&H.dd*U*rMn>"mUI@7sAp/>;Kqdlqb]mK/<O8o"4'[>ikJ,JaL./s2fs7E4=rq<Pqo'pYuo:Q'EJ,JW)rmsXjrt&8-
%O/ogMli/R%[<rW)^0L^,0hU'$rUF+1:4N2:!-@>PWcr0J/m)-?"K5q3.!"f_MN00e6'4p\g!rbgJ>KL8Gb*E]6Sj3VXUd2s1ii?P
%YWF3[BL.'7f#sr>Jh2.m>*Dc0&_"Z=T=3pa?=lCB9KqXN+djGb[GATFRC&=JB=t>?X'BjqpX5*.oaLWEV[/PeAelfbmL[R#luOjp
%@6O1Z_0hUVnOB<MAdrq?F#TkJml?ci[e&Ci]pS=>:X:=MDu$b'8+SL"DB-I]mQ1an='g@Q1<%Z!VnB,*b?VN'pY)m+/4%#)G6@Cm
%(J\ns7!+CN^7FofcknD<Z>CKkFZPhd=_U@+fNbn5g7ACeR:57BJElPa0"[=n:[p4)SD?td?[09.IChGA*<SVX-IVA/!I:'K*<9ot
%@T.@OeTPj$0d,5J:p%MV4.g,:ULIX1Fj$]M3?XZV_h^ST^*-'!8U*G=A"+Z@k_Hf(]\_b]gRFOiiLp3j\H_^HNe^c?)R%FU*+9[Z
%<l,Z!%*,ej3#5<iHE!8M?LN-.*`$o]3H1HokdhdiHi^SD(lW<p"1KBB^@6H4qfZo73C\WVcBt4nj'h(D-_?F'R%1ZHh7u^Jh/bE]
%/^aW.&:\"Y+<LonIE1+7*0"f(1Eada]5G+=r#IGcYt`uDeK`oe?>jlAm`di6BXAD6m+9X0Qm(X_F"&F'#%X"X#8jN)BP^luj3Jk+
%p!PD,`600>drR@SQ2KeJ.<OI-h!"m=p_]!-;IH^Nn\4L=PP]NAhYHJE6%AQR`_1tkM#m8TpDD!+lG-T;6nM1)dIGRONC"FIm4YoO
%6?^2k^0WElLgW6%IESO*s#>N-2#!Y2HeaeZ<!ibh?f/;qEeCM"h<*m)`Z<sL\4<lU751n4dHpM4!]?fqJYkZ\'p9HuA2`YeW7J>e
%CgZ!9Y]>0*o_'?p><Zooj'Q.5kp-Tu&<$9'!HZU;rVZ2&j0'QNH!bm2cG&9#fCjFhLH?<S(#21c2D58sgC@i5A0E5?KZbVER1<.k
%S7?HrP\p>5M?CSInp5<,%Hct^T>l*Yhr/#,%Nd>_*Lj(pq#oIIeas"ABckqj?7YI>AcuR^BX9Ar4\^"JmB'0"-TOFBQuMpFTu\E,
%eUDYr>pat^o_=?JpqC^%<:PCKLFI[RIsY<aM5^E"hbM*X,ZO6ih'W-pI_b9dq_bP2I=>N6"Nu*2mN/6Y9[_kRWu:2Npl8JD_%j!J
%4%':qhmm!2fqN.dJdh@aP[p"[rdDtFD?%3Hr*^@KJPuMr9/opmHN!MRMq$j;d/283HgY+PH$>=,E[B;&%H>9D01NJ%]!-P+N^03"
%rJV7j@=gcu/E[JSWpo>").c,T-i6pT9Dfu`GT#HSU#'eH.Q,!;rJTG$<A;=8Y\h#pIc'G^4+7XC-h(&C'EOL)1!7rpPQG+jl7`eQ
%&bm>W1I-YkceKj*Z:4Z5Ge";TVFVU!h4CM==oISr7HO\mMYh;@+96"<IW_-oo#0/?D<p4.p>+T<D7D(B:.<(0A?5o_^9-daWh&V[
%c!#T.^'bKuHQ&5">ZfhFGpNpLNg?jfhPTV*p"'^1SidMPI7K+bKfHerq_H::\XrA3jo'r2L7_i,UB/\4$e;=Hol@BAgh%*"FKiTh
%2S>0Qb)3*GpSlt,f(Tcqd>,8`X><`IFj$\"s8#eXU`O,M[OSB]pFQougumESIsp)HouD\kQTj;Jht#%(n'.%?S+[`c<6!d?=Xc[)
%$C[](l8F_.?m[1$0ch[M0%sW9H!14b:3V<YgHA7-GL+$P>)2^!O4str7r.bq]A(9mh@Fj:pis>t]?fs3JUl=E,ni:W=ikTcAgCU+
%!JYV?LoomN;>WH"GK[)MgViiede7o?_k`Ag-F[pg2!pq7C<hOVS3=F/3s)N,p&4[QD.7'>SoU<-hD+Hnm_-NI(K65)GK0aS[=AGJ
%>c`2KPLe@LOJSS&";UcO(9sVm-7UomIk[%5Mk9h2XUFe2+^UJf.1F>,&@D*(\q&NlVAql-"o`@qJ2R`!aqH#N+EbDD80FI76JJmj
%>`qdjf_?jFLCVWJj&r:6EkI3ue3BW@+ui!,_M/7HD[LFJ%FU"slh#/`E`)$m^@Y[<$DP7an#nrS3=3P?!WK[oAql\F#qNrjr1tVT
%:G&:b]-lM_/8gj[S=29#do;QGg@J4_2\CUsI)S!K<$<%+)NXu#&8^r2M%UXUgC]ERlELul,#oS^?m'HpOI^K=FrKcV*1-MN)_'AO
%EPW@()@dqP+=&/YSu=tScsD"u5Q1Mk58_Z:O+'1N[btO=<p;350Q]kBYd1^2kK343d85*"M.RF*ThTpr>C"L;2FA:5ZuK'=+$9d;
%(54/k^e'c&6iCmIVF;K2RMN(c:Q&r:R?hoe4>"-@dm@])VF>$/:$`h=c`9@0M@,N('7ZMEEG-KZ&>V=_MM?/?+1<I/17,:,=eOC6
%]H8/-I>Jl%])[]ND_%Bbio1XB.cSYr3dY29ct?6)"P#jJ#W+0_8]l%fbV@q4nR8?=dU"D0YH#"(@[7`&FJ;eCcC]mfQ_1f.Y%E^/
%Emq'Uc"^>p00"3S6$Pr6"(KN3O"+0d.F>#57j`U&pP],h$f35aHmRu+/oUCT(t$6uE>YI1(0XJ&qg-f;;a`74#Bf7(*Iu-Qo/QnY
%QAGf4SXFL0U(ID9.^:W!F':V/DY4hA+XZElk4%MEs6R5j"d]+5hWo+[ERKnZ#$n\o<DNu6*0L2Xhrjpg6qLIupBlk@<10Y<c/-q/
%^&cL%b'R=3N+imqYGS/9XGC^kZSJ;8)*i'LAn:I+8@d#5T/B"PY`mP<Cd($Hi0#X(5q#R*Y6nDJ]4-J*`^H;rfiD8H&5Qq%30EoQ
%-FI6)ou7Y4Yj%NsdZQoL<+[<W"qbL8^[bAK$_JVeK3T\k2Yt<;]!Tf$qe*[dhn0MLmq9b+$6V$8GNV"^^C!LR69[=H9Hb!P7[JXV
%#'1<CA9EkRm_e*NU7jJ]F?*fEBS&1o;Kcaj9HR5_+:$Gu4,%jLD?'!>;K--07[b0gfe.thLiP`lnqgMm$?`?4:U41XHh]76>.]IJ
%U_$%f'/G-bDu-5)nukriq#-g1T1$#e2X#,\ZJWn"[Nb*Xd#cd$2`-EPgqsb'nbnuF-VeaBquK^tc\'nab+=dfX4ELDViO*H*5PF+
%gI\n7MjTWa#V$8"`6kArTGpJWXbGA#:'!.s'6J>.Xj6N>JLQ2)5B"R1bJ],aah@9G+2tde7PlbDfUP4Lo=9YcRS]^]grm5hfm\kM
%U4TZU/>c?'1Kk%o<NVX!Z7hUM+6o=-rm=gCgXa71r@/b'pT$8.$j9C^jjVr6_@"+(9kS'56s5S:5*X?u`N(ZH=48>#jBVA#.67f+
%.F23^D=QZaotr8!D"3BhGGHtiJ?eb:j-NL1f(GQ"q>!5OQ>bW-QVr:`M2-Qr$#tt<IpNX9Seha$Y`oQYCR_`nr.JGfCr'c$&CS8.
%ksN1)"@:5:BTgEZgi-;+=YD\HSDauSZZX=5Ze=nh%3s(>;Ip9Lo!Ws("&:f$_0maqM9CmD.jBIpj"]="c@;#Qpr-*TZ49"Zdha<j
%#)'Xmli:&De61U@d;>(+e9AEI?[@cEl3;jR)>(,94i2^9QU9S_M*>S[X=<]Q&+^E"f=A7L@DFQ?N7qP57r'MO#^p^G=KR_j2S6bI
%.5f_b?>oYDm9f&&+(c/c^pG2m"?kOJ@"%tLA`M,*#JDd=][1fE2t-a058F`ZDR*@F\<e^>NAdNX)MbV":P5Q\iHs9"4,b6jo%n78
%a0o],f4M;#0?p5*oIVG<Xfo0900%"1=[XW/QWga6K_tkG&B)-"\ls#.qB`oGf-Nhco[faPV+qm2K+sVb:O:_3g`.^$_lS,CB@KlG
%:']%q3=h_8P+OX,/Y1`E]j-FmVm563+K6Ep)tmWfb4hW>JsHg9\ktV_%kI3mUe=+hUg0ZDG/2Ek?"L:MD,U)*Kbi3UL-f;glD)(2
%ppBF\k0Is%\>@S(%D$JG`PaR(5CT$]K^YhOXS9>3pNuM[5P[COC,GpDQEF'o,?*A^`7?h1XIH,q6a*^i:c0[Bf![Q!TP5oYh*m53
%XT]kq#C2?@$u3$<h^3!r2V7/(r_h8+0qUC8i*Ch[q.[*@*&1RcOIi4&*cLUYnf(r")>lO)j;WG$e".f*M]P[.9m\Xtla!Ye&75,.
%4OcUY,XLe1(N[L\bUW)`A44qE)q+8uD1ukKY$tgU7Q_dE<M`21W-SShZ<&Is_0J9rLY7.8kUNN4!qCH>0L;upR9KSpr<56Nd5`9R
%m(*ha2%(4(9M&J=H$@Ht3l<uN6=tHEIkV+LL.s5iqOoA2D?pP5^\EjVURG!YkAQup+Lfpl?A<[q?s]7r9#407#qV43BUQ;39cU#'
%c.YV7O\G(F#khn=37PF8@6tTj$o.7'AO.2>$'llq,gK<]d\H+EZc"9k?<.%GYa):F"A+@O-;Vmr5)i)ed"0-u7e+-Zm=JjRk@[ft
%H/7Oq"85tQOF)E*q,ea3=s#>^8&(B\+'p!?V/(?90%A%0D0\nkPB?QA7)+EkL3FmA_[OP1[eJ[`3,!qF%VA@ZoEIT'r6LP&d*0BV
%A2RVT8(B[PYE5PQ`o!7-%f3AjLOtt4JHpt^DX>]5r@cm\3<'L@Ot'3tg>1u;2-q16]EBkh4<llMb*QRNc^fBA"C`M<"W^As)l<"Z
%&0S[4FN]B^3Vit@RSlG]fY])I5K,rVT4#+/3^eXcZ?SkIDaN>RUMB;5o&m%IOq2Jq?a(P:Ji4,g]BcXhWH>9_=@79^)aYYtaA-/s
%8XQ8#PPmjXc/=VSLAcmab]?_Ij)5Y]Ij&[AGnrj1Bt_iJ=et8!k<*$qCSFd!epP9aOB&lOY,?DIeFIo?_N4+!I,+C'geXS)gif41
%j?)/+KsuC'%ehba7c!$LhYZ%(^$_B()1nLIhY8HLjeA@aoc@\62'/Vmd8SA,j?dPf1$eHg)C>YOs,k%-(`KBd-`S".9!uj70T$_U
%^sOf9d6a/8Or;V*\:]lFeQeg_L(&ICD#4rlK%mB@?m!Ve4^i0-DR?qrJ.C*l*DS_hQ>$uIjS<,R]9(%eK5_\Mo/pA4^5(8Q>sI1?
%_U!4M^,3u<;RM53HFRu&7s\77i)&SNAZ>:<g7448Vm7(Xlm0rDc[Nu?dMu$%G`!e$jSnB-)nn/=4JB3H5S@4Y^<=n5):TdZSm>El
%>,=XcJ9rOZ@+h7*$sn!R-%&j[FE'Si+O?:+^8Sms5&M2oR,Q@Er)5,n5OZM=kXmL,URNem002`qD,N(SbmFRbh\@NY&(/D'A>d_Y
%JT$)`]g!AgK:JCM"XKji3<*NA[@SrlASTOK]dh<%Hr65+g4XF@D?UpoBjXrB*VGo]<hXSZ;7eO8knj7O5n&VV=")#6;Ue$iCIl#=
%02'/aRs+B>.;L.b("DhJV]NM*9s?A>#!Ae1<Esd?<'RTgES[[_*4f0jRsPmRnaU4]J$:%nT/3[Clf>Ep[EI$!IOo!C_5cSY*:K[d
%OP1X=]+C"eDXY>slm4b>8QG>.C`CW'XNFH%0gu4]I>B$Na!UB?Y-(;A/8#KVC6InKbjbo/d?7%#EpWXV.XmT9l.e%'`nC-41ioO@
%pt=_mFs/_'XjR86W)P++@Hl@*K>C70Q<.fVDdp&)&/E!lIe_1P@"P9q'(6IghLr2N9\e9gmEd*n9?sAjel9r<3,ZgJd7/@:lp(&]
%I\R1S)WOogY">EMKK;LR&A3*!`DUMp/U5Q;ag*<DNM^<GfXX1ob@"J)6Nrok[2kH@D*d(e*$W^J4X?*Jr8l(*8e/.hDQP-!RWKdm
%ELq!jd^XIr^I`E*haZZGFkA"HL1`4fC9LE&a4NAA]",Z68Q#%U[j9qC3uK*cDcjd\fM(rYE/X*sQ[UCD8HF&X2jBBY]*1I"Mi^Jg
%lpk_h8cMKrVU%'gk9lb(bW5^B`?4YqYcMp&ON$Z3g+$A^TiFPW@RNGDXkKGK#^i0U6$R47i3W_@a;5M`&K5Wfocu_4QsKpg)Du8u
%?URC-H8N(jQ%N*RRY*%8!4K^Sq+k/pQ'm35;g\]Do22?KE:,6%Y+Wafr^B+.!XdJF8p1]\@3@HCD8;J`/TNrr?<n*\qneO(g5<RN
%*(;FW6]><@b+lE7&CQZ5#R<]'X*l^RnVXZfV+AH.(7q3]>m.'9^DlqiKrV'N4D4Io"Y8qJ73@BmU(5Z=5-,HPW.L^,D8@l'WYKq4
%L^9n:pWFhd"mD,I;%1L*p%R8`VZ!h(^UFr4(XR`bh;%mOmR?lR?Dap#Wnhu3g\Q/OICD.Rqieo1pde+f=L;>12H@#HV@qH8cJqJC
%D^o563re?me4cJ/0Z"e6BeuCb&VDD+6RPktF>6JBEg]nGUFoiD<W`gjTD8LgLf*X'djF)T:&-H2Mc%>[Q>Q\!Yi%Z<=!ORh@lu>i
%0'\?p"0ZRqF4&Rf";/K@cMb+J_Dhc$P"#6_&<R\gqqmA'03<APO.D^mD#2iOl7Yk(dU_4036^L/2]]2CH*[fS6IL+``S2j;dNiCp
%j-bF89-;"QMm+X*#ur>DrTg2"Cm+UU^+,;5VKc(a.=ir&0l#.RZ4DopjjZKH,\sWh`$3+Z<8F<*glhd+8/iK]/_\OS!aqWaXZp3L
%i#LLF$.JU5<_NK)jii\3]$YoD*dP]NXO-'[@+aOA;GD?@q0B@Ilm>8HF.Q2+\(Uoh;M?HQ!I7\!I7B/Q$#9rFha'+.W*#5"+9VZZ
%TF:TlC'7ak.1^'+:`D$`:]IEX),X3ELU&@=Lm(Virg['8Lin@Q(k8$EUckFMJ9hHoiiKY!d_^)I`ZH>4dL^Fi3g21Cn]6Ik4o!c*
%0m"ZI@KN&\=)ZB^O8J`is'GpM;+m4d)iCs,*shJd<N$YS$B1I6rhKS1+d`lI+-l"Xgm4CrqNr*cQ96lN-DpNQ@T#mY#XgO),8rLq
%_ji@n%7[iI5Z(`'INkf2T)u2ZK^n>"_8r$4\$uh@GKp?/0nbc0U9j!"#PhFBc;_`'Ks\I@(3s)mHh$&Q:e%f(NM+*J-rfn@r9P=O
%kqMY:86$*4;GMun=uaL."-^D>NqH2cr*/mC0&V;l_l0q>]i1JaMfLL^:9)o:)5h:K*`=%$;VG0G@&X:iYp)VNBG<bJjS9q/'"8KA
%pDcs15oN],>>R%#2Mf]1E_ru8.c#LfGF;#a2g)edFA"LRZ-RI,onl1]!PQA]$Mj]#R[2LkV6DSZ(_*/9!)JPWnLVT/`HTXi(?#`M
%j1n.p8i)eJ=MHS\<C2"L=gf1hFEg+H4K"VpRIEWom`c=CgfUe<Y=W,6P43uh^Y,(:"+sZTG,CQM-tBk'gPO[C\i5:S#+M.E4UCj8
%UU!0"mtiP_[6t7bU-:DcQDeaA9el`@/n.J?p`1g`.bV9GE\6nui"&^.XO8!N;T9>c#\3J0_P%K]BiWp^ZiYVNP!:HdMk6!,+OD)l
%GlAm\j\[KgdhW4"UBLF4^/tt:plKq/.)F?Em/kb>MIM,MMBAUFpiVc#X\T(ADoVR-AW+;Tm$=N5*0YB&U>&Jc.e1_Sl(s!,3RrH3
%'d4S?mOUs^gj4n<[rt67hC8.@@#1WD*1ef\Z/KB#i76i6K7H?`ZKu'1.M9!XX*hf9i!CW;JCG?I+-<,*,oO>D8>d&RkX3Us<D"s^
%,f0<Jq$hh8:s684RK)s\G`?Ci,O4\2ieH<Y8+[ASj`!:B1EkS;X32!3EWoM<$R@V!_KC>ANT-#kPLSKOPuDH?,6$i_P;A78\7t`+
%P<YVWnO6Ru6MW8SRMEc'CA:r\,oL(-?%Ic2Igq#S,OJ\Zcu"kej4qF(W@R`V$s;jRa@u5=liis39#V5m*QM@tW2=Z4TI&&iRJOk8
%7YfToE;!J1+.pUFkL:p<mpA[koSid2$c#?N2X8urE.u4:WJ[cj!Ys+81In1t7BJgoa_'i\Og^_,3'6#Mb%R&^PEBDsKaSg9J31BJ
%T[H)CITcGLrMbZUj`FI`Qs2:qbI!]j%'`4q^1sV`aaI#9KF'-$?q@(Ed9s<@8h0&Lg\s]j5(A^D_17tW&I`tD^f$u-b$=U+C5<-(
%dFP2>^9G?:0Zg0@._oWA,6`K8+6T=,Ri:NHiI5"r[,[D5&>sbMX'-m2DAAkK<]1WR74YSdqG(o]>J_b#9=-Jok?"tKO\+d-Fj_Xm
%;Rm:[e+o\-(IC8*D21lia3QY$SW?DZ_9^^9Ve*m:\"NLlAao6$=a8O@n0A$!=*,Q_TTlJKEYAfdL>5!WO)d47^OM0jo$;'%'U>s;
%Ou."s6CuPM"U45t2'hdqi_gh.(+!9Hgo%W_?M'/4n<1H!/s66;CY@s*5seoB^b7'HR?]GFXdn\_GmmM\lGs%LeYU/L[k6ujq"/$]
%B8!@<_2\dRg-Z21TuKZbC-;=7V%R0kkYWf?89oGYPTO(/#"`:$/hpY2M+3aG:&P9"`KU_i]8P"<*L@VbZMG6X5k5^Y-(2%t)/-TF
%O0V"'Im!I`O2(^MO+7!ZJ+oT7[odV=<gZ^J=Ltl#%RG_<&0F8%J`fsq[lG_$>++CJ@'F._:D<G[o?uaq9L=)`C4,Q3e=X'X_o167
%NY,gQLC/0u"Vii)97'ek7>D$QTYb"(6q^<N'X+_lOebcbVGraJP-aS%?0n;d775&qJ2tHZ/!&2N(=6$P0>U&5\J$EJ;1bgV#Q:er
%!%W]F*e_IrD!*`hGmWFZUkh=RAJtiS]=-K=9Mr!8&oiE7LecW981#b$N-BaSATq=p1Rfan]!f95e0a'i)`CR=g6B*WEu?XHJ*JAS
%7u+HmJhCf<_,)U#i4]kF,sLB5A$%P3>Rt#i\q2UY4]GoIbQML9@!C_A&c"Bk5f*N"03$CjU[h("-@(+l'%.Y*Eq02XK")]Ai%QN$
%Z?eMfRF'pWd^*-_R6O4e&-9p_P#t6$fY:X0hO`$%dM05J?/6+H>[S'm;HclCdS8-l8_eqkr)#-XS-oFB4"-M^geUb+f,6V-j:WG/
%-^6qCpHpW]"qg9>l"6#LU_dVka%DpV[Ts'S`AiD`MUG(,bGJ05We*Nt%?'fAHFUa?foMM&@[nmq"JegApqk#U@K!Hj$`WL""O`/X
%Vg,@l#>Pp95dIl#Nrm]=K3Bt3U(mbn`aS[JqB]p;4(Pu,M][O69DS_;*Et6.;P+Lp+I!(*)<8cE)K/IuC%u,%aFbC/@eEOC!u/mo
%oXo!H(N76;%`^8$5W@\n8NV$168H6Uqh7mM8.B&`0E^?kl465LC^cfX,*C;Ib(!O-#c4Mth,iK\:dgktFN#^o(Cg\=[;ag!LSg4j
%8eGp'XOX#tRCiBnjbQ=goo6,:pG1!`%pHTY3OqqolGt(9eoRqb#tf,AfikuQ^4giDUIqSSqP:&7U$T.GX@X@dZdot+&,(<p,;/$'
%r!X6]U2@'_W9l"KQ4XlnCS/I+<nos)e1`nRaVUdMe"I-*6M6\J``es,@P5ZT5TpikRd@q/)<<6;'Vr.t`&S"86j:jdPS%SX+^=,O
%FcmUAgjG'-,c@AlV.J8B<Y:Xp-?C)nLVq,Qlb^nJi+.2Km&Uef50#GRPQV_17K8.$3Sdpo,Lr[X56@d4fuh]$3So;o=AMPsYT>k6
%p0(_K7Ud/Hi<75uHZ&uXW*W##\O6lLXkBK;!<Y*i,3obSX<p1!X<'fI#>)+L5($+FLQY-:'G-VMWrZGbBMTap6LU?JlbuWAVe$YV
%<FMjJ-M*@_XQs4b9&(cF6Dl*$q\I>=M=.br.Uu)Z!lU]VEH@*X66"qS_@)7)>A56*$Bnj9_[([a:)K`UOcX+KdSn>u?*<7E^FdC5
%oa!^9>dKU049NBQk\VFV,/9J?+<S78m#g^E6kBUg2;NMog.n;097Cjm-I69Y*:tBC>lA9a!GC3(k=WMUS,i#4o"TL8ks\^"(gmX+
%\g_'S?tu=-9$>&qgStH:]]=`Q+9k[XDIau2ZKMS,0>^(_dfiY"+K=RW"QbE$(Kk_]Mejpd,N-4dK2#;Y!KhoA8A6o"6a]NYP&(W:
%dlH\>'["6Jm#k>70SI8!JgV[+%%hiZ?N;pXH!2osOM<u$nqLVU+S5!K$C4MR^:$)bD@2'Zhlh!$J;'L=Oi5lOTAf`+ei+,6.USO6
%L;ElP"GpBW)\!q+nGb%\i'G)9>"g:qV/V@JN>`3bM/LK`:sfijU(]JnM"_5:5iR,[/<9[%`:h37nVu#dd7(W%FP)T=O.0>."`LWp
%*'b`Yei;>1,j4+5CDC;F*,WjT^3e*A!9rpOBm(o_$MLGb(TPgn$."C/DG]Y_WnI32m(.l1;]=6b2#t?]560G"UcC[I^Iq.;/8.eD
%PJVU=5a%4_4i?UHE99]:T2fj5.:<?[=VH-8PcQp2:reh@:SPgTk6I12Up"j6<TRs!*L"q,\P#R6%-!8`p2\jmP_hbA5mkJ_"Gi1p
%6&(UL!Tsct6gi?pFF,(Hs/mm*1Gql`!BO['PDasb3(cWJ)7LE>YjG-hC8>\-@r$nddM*NEn0W9K@qM[@ZYaI_WUSf':(24(gr1O]
%A>=>KUWPJ*bo'7A4Z:tZN*FN2KQ"''6rI@>]]Y45Ye40Y!Nr(NML2NX)Walr1Ej=Q*qUZP'C\sHgYeN#MJ#=n-mWZ+/hc*O8fN+h
%)q6@P`Yu]k*7BDM9LX^Y`q-7ZLk>`"qG7]\g1_>6ie!lp7^t^Bpn>cDPgECW>tr,^4:r<#,`dZWn"IW<,."2,AtC4]>Ac7?!"GT.
%^GBqSGq(mB%0e%K%K,%L`5-63E-"&5X&D]sQmHJ^(]2S@g1!>Q$9S&=PLEDIPmHeSX@u?qCm2.D9?LCGkqe!Y,dja@ei)i[rJUmQ
%n'EqXQ?gf7@n,Ok'^9f2R7Z"KDZ:VSQK39G>or08Yog9p>K!&D'V4G38JW%On7MK@2]d=AWd&bXKNf(Fr"_ReZ2bdMP-lg?+fMVk
%)^3R+*f-Iu%J(&\P\kTjh3:!g&Jn0MYCqd(Zq`&&&plZ+;&2=?!gU^_8\uT0"3$'$l<"Y`&b$*9E)7^,jV7oHC'BVf@"B.l.D#[U
%knG3gN2f4`+t.RQq3HMe.I.a'L(-tcT.%+nmNtQ"O;+EIr*-k;!j4'<deKD3]L7AU4'DR0:aG[YW[,2+K+pTgMMaJV'L)A\4$9$+
%OW<W#i]GLP`:r1`L4)#9a15Y>U0Ha1%gSl(Yt%<^mQfU&@FV8GbW3Y`*L[;3)hC1CH`Ffi]7!ZC\)o(XB>ZP-`-H3tDb+Hb']qd2
%;1&PLN.$<bacr-%D>/(0A'+FagXEl[4`'0=m<\cC_o$;aD'P-%q]$Z/pkm,qf<3A;oFHS%ODEkF4H2X9MQo6sjWg+0i0kiP>U3Yj
%'bhn&.G.8ZgB$Gqn1^5.Hj?q))Gd<sLn908N9mE=eDQAG!&Gf%H<a@D;Png'h1'["G1!Qj[898][$F9srA:*Q>PB@9qCb/d%/Ve'
%73UL"UcYXK_dfGiJkZV_#\VMYHH[9\EC^M>m9p"Er+j5[/I0McFRh7a@4^/hPQ1)kEONpt@Fs^)FrWA!*ZKe6`IiD*BnS3XeQu>o
%X4JIk?>5Gd+X(/.94V,rMA2Z`ogM"N;0Kf?"(bTR_m4[[*8?bt?N6K0'l0o]#q-\e`E8'5Oe93/*:m#%a-jfsAf/A9ZCb+`Bl+g0
%$NI79>[@m#XA7Lq=KHi@)H%)BW>Op/=KUk11qYV1JsG-QO(oh:0!>#fLq@Pf4J5OJIDmTL3b_ScW.;(/h3Sqn?h5quK2C["B8JN.
%2)%SgXDl,Z2]On>OMQR?7W;Q4$,pK9SY-f5!MPU8F$DjZ7rHe@)CW,!dl='^7^tiPK[(A[RH>*OOt[7MCdDu/NF9++<GDYPO0Fn^
%95+lUM\SHR^mUm=FkTD]Rt[+@=@7mse,g/\:V/V^:WkaTOh_f@!S3.qbZIhQdWgG%HER/7a[?ral#.?cc7U5Vh+`AD`*nM&O`Ih_
%CsufI2=4J_%F6`6%tpMVdc^\!)L3IYSaVqS7u!.AW?-3VP^p5B3lI]@_bi'Pq)J!0S?7N:8qT\rnuUEt:!I`s@Qr'`Sf2E3oGFBC
%2l2ENmj<hnq,:nqs(h%-Fu@=B.m,cKGGp@RAOsIij=i#B5QCo.+S28RBfH,kG0g^=jR&^\X\FX5oqOTSFW=rC]h=-q6rF`0pUV%X
%[>HSgFLIG%%3.K_e^CEXZlqf73=.ZN\gNs9]4HY>!A:Ct]p8624F605rTT8'NehVYj^_e8iF`\f2Y3rQAEV3P.7:JZ3;o$lh7"7T
%8j'CqT3L`_>U(>:J\su498k.H9X43OjN)8'VrH1DYI1LEJSnr]X19oc,+c@29ZCt?c0"1KN&S!mR^.H)GjhGG9\H/Gg:Lk,'kYL3
%.eW-SR4E=Z:=JCsYJ1h0,gQ<n.>]8&N[T]d'r=GU;/RdG<`."NI3rNE81p)^Q-?t]mOh[DRXc5"dR.i&7"T?hFHoB,p%T^g(4W>m
%I&d)WShW\f]Gem:*AVa>+.CRI(Me@2"oAki7"=&>MD9M<Q7/h`4Nm"jKK.hIpr!o`QZ^Tl4V2_*@cGRnVX7";M=&oh5E6tGm7L-P
%o$^4:ijWEt5U]*5p+O"!@Qm>V2!l6mZmTKP,`JQ6$;$fBS->=H]k@-<?4AXe=F0MeE>g)o7C\!ZYh&6B,t*637%"$8a^%_i*LjCT
%R"N*i.YT@?Vns6+DFKpTrU8$!$"_[BKuH"'L7dAAAJWK>%;t\53]`\JW639UI-eL8<5[Q<fl]E[X?ssDcSjD5]E&$?XuJqWW_M=*
%.eT2Q0@KXk/"g7amdn0\I\=<d<tG?0\(fh<e"p'Ti6D;4qe?&X?e5?t#ITYV8_Q6KS`05!)V<]\`u7(AQ*el0@^#("/XBpMK'H\'
%]66i<h%rH,5"qT\RpCX;*p3*6*6Y-FbJ;p`kBG[Qh03hWo]Oi^/sfn*[5@]R$bh)q7m)OFGf."=]>Sch%.BjFHa+\XfO@Uocb>C3
%qj'qJG[=&-\K(Ful4SJfm>MQIEQBhZ2G-P;-.'&4B?WM#mrc25HDm[Z(EF'f%-Zg3;V.DP\`5lO1.$c1#F\80_Qs_:qITrf2t0Zq
%@Wl,&;6d^QmUhgDUN<Rt(l^/?iO`+J$W8^.oZhG*)_ZEI>^AQadc?<=R(X``U\*Zl=lSW85?,XW9/*fYHt/31nYULSW1/unY`5dR
%M]krOZh</@&q'Du*N.Tre7*,-bXPSAGj1e;e)+NA]3Mp0fA5SI::U-*Bm14-TD`iOAX"?S;jC*YM\fl%=a08*)0GlYd.N1V^6euC
%BQ'>FJrfn6iZLI)cX*%\kDloi%"@hE`8!TKG*bjgkITDqd0[./i%Z;!fDbB237_!>bXirc\\c!j*D>8%>r1^D3VWfl\X8mdnp>gE
%]*'5SZc'6`oYl$\U_iXWeSbZJ6h_&I(GChm2uB<kXtG>"hS9!X/TFV*kQ_1?"ls^B".gU"o";XRoE.^:W]i)uoNcfj2S0*a?*qO!
%QtQs\c%6<(b5(CuG2k[9)nmt3+8K[F76fR7^TY'$42[E?&%IB,p)MC<<d!c>/"(ruS+9j?JUfW8U*UE$QENVhF3<IU(d=[e?>Hl_
%0^_4Y/9*,aOjmX*4dYP0EVFG`1['1qDtq%kH*k3:(]A:R&!HO)0XGcY.L$rqEO$%k7ia($Tg']'q-uSfgd.L'+9ZO)F`C^B3r,E<
%Cj$-1HVb)c*:klXBkt&jG*Q*3mpQEK&,-Oj(U&mI2>a*iU5KSTWD5,*:fcL-I=<+O2NiJLF5!R]AF,oG`@]#4m\#G@UudJ4rl`9m
%<HTD.Y/.UQ[rBBGP+s*?XePaoqVuQ'1T1MDqn4XhT'U4b75)l,\KlW/GJN<S&+I^S(MPo:a]!0R[$2_*#nRe$PirIc`lnbgc*`Ck
%aHiI#hSJLnS?#uUai1g&dA34NIq"hKT`4r)gZ@GfH"Wm*qV\C5<cNN?OC\FW'Mp4rZ_HjJf*#A(XihS8MRp2L&REfgT41PI#C!\[
%6EP>^f+FWn&V_IO*TeR8_kG3b0j&RmWO27[XRV"b"h0<Td>%!_aH07rfOS0A*iCn]M%,o\]EBelk:8++%V]o?]T1pU#\2J4%:+i`
%.I2on*`Q_U?Au::p-b(aDJsQ.+c!t2)F>[IC^fXi`H-P/e,8BW#9*3KAq"mQ%E6luXoV*no+pp&W=M:^/59+M]c9DR-)>Ut<`)aZ
%P$!,X%SF6P8J/!1QI-5l"b^_`?)3:b=c(KZ2/1,Qem1mLEC<PW3^6oCN%EEp:.LQG4CKD8Mi#4cdXM[in;nS]%Kh:RE<+sSb#BWA
%antYjPQ,1FI^Q4JWE[g[n"XdC&-0u[0qYaFF=qkA^Rt]1W-Z"-RO^er8i)Hu'?'K`4D;4E9?1L<2(86%BiL-j66e##8Cn;*`7$J2
%@uc[lK-$eRjqnF"W%enu^kTG\JfPm^%#@N?U;iG99.H%8<)l$3XDI52Kcn**TCg0skepIDE@e1A0pP$!lU0<N@1Xa)F\#j8.+_62
%'giLo[KZ.$88F6]hfW?kcgR[n^J*X1`5\XsX]O9a1(M[ZFpq010McXVG.tJi])C)bKm*9oMdsVTr]m^Z,;mpgDFA3&1)MZ=7sg"k
%%6SPGchC#a:)fW!,/Y#CYq?lIoJp^b\bQHm^il^;_=%ua)iT>q*o#?6/jB<fYknVB&!Fg*4/0$&_pW]b51.A:+_em[\:kVJ[k8O$
%rjonc9'E3X0MpCLkjGVqr9)qqY>Z_Aeos)j,ah@,07l5D%hTG'lrq`ofRXiq0#>T]jsB)HO8Tuk@h)?Vb7O>,6EH%_U'A]jA!D>!
%OZ9`iUUK)k`(K$)eMuk%0]$B,cji'@1Idl!)%<b_LqAR7@o3!`2+6'#$LusbBbKn@<r?oQqlR,NYVTIqKL5)4mb[&_,Er>-"mX5P
%!S0-l+_PG\W6k3n'eZJNW&_KOYT!cpGqbE^1Y.r4H*;>OQbEB>YOL.HUO;\4#$as(aZpfjKU[2<CRcT+W"I+,Fr^pmIHWl5er>[]
%Z9@VC=s/lCo7"F6^FePl[(=9>*N4NN/so6HSGmC@h6"SNVu%74i5DD/r@SoD%sBo/WYae@pq8kg*>"l@:8i/U1OPLmA<sTt-:O<=
%/GqbOJE[IlA[;AO'tH*0dbrBV&P4ib(S^@Lh[_S"$'he!ooMHI=lSi]]#bsuO/q`0g!S>"Yqp([&NmoT5;1$^\[_'d=BZL7$Xh.q
%.74Sq>;geo\-u_ln`W;uGls1A&7kqIpLK$)%-emaA+`?:l!.Uc+NIdt_cle\O,p$:Q'/3-h5^4Aho&YTTpL\G('uH9ob%U`B#4_c
%C'Nk4R>a:20'4tAqkMh7E8H5pH?WVK!hq4tc%=oRp!#YDi:k'oRl<IiO%5\a^?gXLIAbA_5Z5LGR?3`HQ!=q.^caqq]Jc#YrB.5Q
%dLa(0`hjfo*;$_O#1ZL4'Yb\*+.,iY6DNU]qD4KBbF,l]-/L4?TO8eL*;1O8*nc\:<Jp?`Nj%6cN$`TJV;1+2;WM_LT)BO+8!gLi
%[c88@,?GcLHWXLD@spIk*c(:fO#;@j#FlK<9G1SmG'>SDimYNR<\f?,]?tgH_-6Hq&MN^^rZKV`iX3%X)s?!tR]1udfF0gk79\!@
%V#0-Y7&7<"eMT8R_"`sPXqLj?s/"8e?BiJ^>X<uoY5>mc?6ANKp/NcYo7tIQOm\i$g="@\#J[l0hiE'^42)7-D:lJ<&0RW\*VHp<
%!DOuu$?=??-%egQ;lS]6)Q;oa.'[]nTZ=(&NtEMIlf'B(EdonR-mp:2+86npT@^LJL,FS!(qUjV&WD1KL-+B5(D8E?LE#aSj!eSZ
%%_!IKQ]'J`]pa@,(@V.26E#W,VbJ1"F`E.9HkN-\_>PCkG!S_k@YaChR3E?T2fU\IjLR#K[Y%QCq9-D0e:`"e%.IbMAq7#jVq5#D
%Cbk&(*K_=QH?s&*hqt:"+XgRi/b!!BF_5!V&&0_JJIL"K%BXaIe/Cg-WiXnOqiWh!gr(!ln8jAqY;:(lk#W56mkhltKCQ$#"q0pj
%br3A.%6^!Oifdm+7+ETuGBa+eS`CB5d3a,QUOi_@m;b1YIX\A1Td<pFj"O:*A"^Z@dE\EK*,h&;Z,oI7"$:-K&qHA)3nVgrnb5ei
%@cE30KT8KBk$@].B:HlYn<bbq!h([p,cQ%&P\\!`g%B`tS>GAk;<ENLpOl+:'LR``RTuYN%kFi&clL]iQhq:lm_pmXCkh)=\[`jD
%JV>!8BBN@1ML9O6BN/J/*Q>lZFlV9n+fQZu&8sB2GY%oMd@[mg^!^K$G7M996S^mqphK>G:/Qp\Vk'TJP/g*EY=TbhCFJ?2SNaeZ
%)Put.gY*HX8O!P'&fNi*:6r,Z9iPL72V>0I10Z@I5he:boq%@*]'crga`#>3cI`^7'SdgnE134hbM=`7$Q`!2s7)hM.#]V<m0*WC
%UElFQm23QkI1%/K_.nC@R+,R\IYuFqqrWg#FhSP0ep@QqWJ'-O@JJMDmoR'6I!^tX.TG.U?n*JQcYqfBZ6:^XX-AKY2KQ2orV;M9
%V+a(@6!#"'^`M*cPLd;DBQ]0V4)hIbMSk!F/S/d!EpqqRem#Y9C>lnajl60RQ=aLr_E74gr"CMd58!"g26JP\Z_OXaTtY";f2JQ\
%Y<b<_3CoIK]bl43GNDu-p'TsRKo:#+CmH>7Gl@jnUCP3<.*Y2RA2sZc4:-/S7rUZ0pJEAtpi`g@6_Lfu<NIR/+u&e?#E6a7_DjQj
%gb*Tki:XoKHmM"'i<nFO]tLuOmTY`0Mq4q[Git&d!g5+LG0#c5@[3tj0ZR*J>nuC2.1r%EV=ZSE$kXbB7"eBjcQbtSCjK[3oarCM
%nsCU[<8mOAF:O\4fRiUNr&-+h=o1SC?5kJ9CCg(knsn.&e)%$;d#.UuJIO5QohA[fQ&Z%/UF^d*8_8tIOI!/=I.?.`>!%,@[ujFo
%.*U5`H5WCW1op8,k#/9OE+Et;TobAE3hK^>g#:q.#,hJMC;Wb0ET5ePG7Z3t8T1`)f.b^t9La4>d`g[d+AE/fEAADpR$3\tfF:c7
%W_RPn?TC3_6mmagU6HaC'6(9X\MZcBp2"][qp9@V@7cUe`(H(D1fLA1h'QLeY,?qdUI9?j)PcO:N3MR+N,XRaG\YF>-B$'=k2\_k
%27^b_=8i,^'*O1B28T<Vh%L4CF*FQM)l/#?Zt/bdZ\_:CC(-o`TYl_=E-+aQmRT^=m\M&<RiX$(*?KNdYXB6MGiiI`-`G]e,ZW8U
%S'j#`hF;WZ>i#"N'M#(WPqfgWQpNU5-L#82:>4"W(:35T!k'4[jT0s!l).KJ93ET"')Zd4_nJ#0aLRMAOaO(>Xu[Q1nnpt%L?WF+
%6Nu`DQ\Y=s#RNKOMRn(A45`T+d%D0/Bdq.g0Eoktm4eInmcg&e#bQGO8b;6]OR2,0f0;W/cLX-K]Z@B;2Jj'Cj:)I#k(-Q,dhc![
%d;+DGIX!*4q1C2rJJTeZMJ&.`'LgZr<$-O4.5lpL#7?5Dnu8ifoH%WcbiZsUU2H]0fLfs"+>i8l+)%`RN\`CK@8&S+3]kt_F\5Zn
%qU5hL5[X*6=9:,#FolpPh*8@ZRj04N#57j!$-$%[/bgc^%V%91MC?`+s0ATFDDc_9k0&n^l*:5aAhrNS&Q&tY<n-%=>(&l;(#^LW
%+`S]GoSkHPLt0aMT9/h9MgjdT/]D=R>/k#e>(oC[!#\>HHL==?7j!C"H,l_!CJu(L(oR]H'3W#A'MMHWkEI!Kh-A#K2:iJslhlkt
%*KiM7'X;$N7,UdfS#&3`?(qX3leGTPqBeta!WGB@+`IfNFo-o[KCEPjetdB(8[q6-K`]bICr'^5Ej`oKG>GM$e!:H_kDN[Ha`B4<
%7H]!hMd7%24h8eS*B*$!G@HGVY&OG(e1g5iHist-5joJP2FH+:CXBUU\B1W8?5I8--&/nJCj$95HdGi:M'kk;.DpQmMiG#@WQRHK
%T^H7!iVVWrdI(URoYZ$RQdKF2IEIBei']cT\?drX[WM&jOA"8sr[^p\Gm5_f:WDl::\+i;/m_KY7!.57:[)m#R6clKr,YfZmu'K!
%gW^OKaFLN>J*<LKItC^UP04+iUgk=]UdK=o-t(O)9b,A7`__qK%GjJFk#r3d^*^WZqD5(4Wkl>Sj4'*c\&9OJ='/@;8t<U6Legr#
%pZqQLB[G?F<hER5r)lJY@'ANT;kp)8p]XGqFGF$9:)QnBI8q0*2KP,G=4C]/^>DhJ*L>:*#HJ_ErfDNPkZ6m,_Eca&M7C/i9eW"q
%T1kg#;k&fkAC)X3l7pU.3i;b-R*!&u#k3TdUq9)o5DG2!'e'p,B2jorkKnGVFormn#ejDE4rH29<Q0&7)e?Kaf=7`AO%E>8S69u/
%A*A&#Q11<9mT7MldOd*Vi?q^`YP#*pk%ZoXm@lro/f"PZVDWTk<(\lr3F<pZNt&Kep0_C^Nj'YS8eGE8:Cr"eC@IsGCC1i,NjQ?i
%4%E_WbV)8%8s">`-<&PA%W1g@ZPM.&Jg<th\FLXCpI!B_Ta!)T:a2'r@m\8HFho-plNI,W_QR*u%KNYs]'uaJs8Rs"PC&Y7ML\l*
%#T61nc(6^74pRsIrHkt:/i<Db6sH6MA;3\bO[dee[)W_,g[64?:f#Y=0gs!oPi*ShrucjB_/:L6B.I2Z\-1"*Dq?<M=-b.j%Pj2\
%c2sYijlO/WZGhR^L_bn+HugE%5'AmeD+kKXY#XDVJ^.6G7B';s&LKd3$msO#lS,A0G/(G0DKP0$]+$CqJ^'QRaug/:a_(PIMba<G
%`VF<aA5SQ$$ka^^nX=m*FOdT+;EYh/`DBSPaE.JrecTb)F%0W2nuB:m!2nH/A^13q%Z&Qq_&DNFD)d"L."u7qC/nKpY8>3ESO+NC
%_*t2[<b9h+;QUPjGcAW=Y]ottj<4r8mt-)L`h'F6C!R2Aq'Z;pBVF2_<a(^#aL%rU/aC2._T[,Zl_@7>kC/p+6E3sJB`.]e-F(uq
%)&)#")]bl,l-8X:_$(J,ouCG3q`>m3heaa"jWdSm=l,YfH>h*Ea#."FO=dTg<)cOcj9*3#"<u%"Vq?qmOYG`^jVPJ18mNJ=ZiU<$
%mr#FE49g92DXS7\#!9BfI"NYI[pqpld=TmVW]6gFj/<T#i'HFP"4^ig<.88W<A1H!bAlPf??ps1ma8Djr8Ou2-6r2+4tH*+HWCC'
%fti6jjPfco<"EmQeZ7nE>W]"OPkld4j9)udBPpq,:qG?R6A6^b6T49u5W+jgR$9]P\f5C(46dM!)MUD'`,@3qP12e-5q<#>'2g;@
%^Rs\B`_g;DGRm.I_UeY'+%=[.`KDuS\3qUa+r#Gnm(8LpJ^pmGXLcEDo88#obUP-nH'U@D<sCc*hl2m7Bq<:%Xn/(6D9hFAIsBN.
%mp%BA4<?%:4W^IQ-;+^>m(;Qtb0Pd5YD5.s[E&AWd%'H]JTaVV*(A'l%SZra<7uH_=@";p[`a4l]YK+QSG";BG%h>-)H'.,C@2r#
%oN_MPB\!7QP`J]4YO<0ejj,+qMC93@3J?\2PGQ&+8Q0)%R"D\[2i:[4r`=C:^>VIIT+?>jO,^Csc4(>&=qdsh/"GRT=lP<aQ8Urb
%8D;k4IdMDaU#>Mg.#Nto]#^Ve]4lBOTM<r)Wg\:Vp@KhuMc,[L/,FCAAbi'NGRRG@GoK=LWDJH[+0r+]du,HoYai?12NH$Dmc+Kj
%n`ts,,jVYW:*SiOIA</im\7JQ%j[^cnU,GArunoUs*!]kSBDO3&rLCk;(lLcJmNQsg]Mur6L'n,n$ubn5SM]hcD?bJZcpqL0*b%B
%l:Y]h\RYSeShFPE875.VBiKVIM7Oq,.Sqf6L<p2VVZZJ2o>b8Xa[f*UUHJF-k!sWj)q#9WX8osqCq*B).8aI6h,B(qW84/mE"0pd
%9)00cZNiqQ2%7VSLP(KR9(Idu*i+[nP!j*"0F<4<-+_4#Vos:n?*A%4YA;?nX]&rXQ"l@oJ(S7jKrQ+7?M4-g?[03\rbp+!pM^&F
%rq#UXpb0D^m_=8Hn`.YGn=+q*mLMP[duWDbgV<dXj0*t*LHg:_QQJD=pW#Mhb5^rQk<FCi_iI%[q*4oOit!72r3(VH0-^>Ao`r8-
%c0tYjmsb59rrN(u)3=~>
%AI9_PrivateDataEnd
